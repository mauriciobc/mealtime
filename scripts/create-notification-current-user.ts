import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function createNotificationForCurrentUser() {
  try {
    // ID do usu√°rio que est√° logado no navegador
    const currentUserId = '2e94b809-cc45-4dfb-80e1-a67365d2e714';
    
    console.log(`üîç Criando notifica√ß√£o para o usu√°rio: ${currentUserId}`);
    
    // Criar notifica√ß√£o de teste
    const notification = await prisma.notifications.create({
      data: {
        user_id: currentUserId,
        title: 'üéâ Notifica√ß√£o de Teste - Usu√°rio Correto',
        message: 'Esta notifica√ß√£o foi criada especificamente para o usu√°rio logado no navegador. O sistema de notifica√ß√µes est√° funcionando perfeitamente!',
        type: 'info',
        is_read: false,
        metadata: {
          source: 'test-script-browser',
          timestamp: new Date().toISOString(),
          testMode: true,
          targetUser: currentUserId
        }
      }
    });

    console.log('‚úÖ Notifica√ß√£o criada com sucesso!');
    console.log('üìã Detalhes:');
    console.log(`   ID: ${notification.id}`);
    console.log(`   User ID: ${notification.user_id}`);
    console.log(`   T√≠tulo: ${notification.title}`);
    console.log(`   Mensagem: ${notification.message}`);
    console.log(`   Tipo: ${notification.type}`);
    console.log(`   Criado em: ${notification.created_at}`);
    console.log('');
    console.log('üîî Agora volte ao navegador e clique no √≠cone de notifica√ß√µes!');

  } catch (error) {
    console.error('‚ùå Erro ao criar notifica√ß√£o:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createNotificationForCurrentUser();
