openapi: 3.0.0
info:
  title: MealTime API
  version: 2.0.0
  description: |
    API completa para gerenciamento de alimenta√ß√£o de gatos
    
    **VERS√ïES DISPON√çVEIS**:
    - **V2 (Recomendado)**: `/api/v2/*` - Autentica√ß√£o JWT/Session, respostas padronizadas
    - **V1 (Deprecated)**: `/api/*` - Ser√° removido em 2025-07-28
    
    **AUTENTICA√á√ÉO V2**:
    - Mobile: JWT via header `Authorization: Bearer <token>`
    - Web: Supabase Session via cookies
  contact:
    name: MealTime Support
    email: support@mealtime.app

servers:
  - url: http://localhost:3000/api/v2
    description: Servidor V2 (desenvolvimento) - RECOMENDADO
  - url: https://mealtime.app/api/v2
    description: Servidor V2 (produ√ß√£o) - RECOMENDADO
  - url: http://localhost:3000/api
    description: Servidor V1 (desenvolvimento) - DEPRECATED
  - url: https://mealtime.app/api
    description: Servidor V1 (produ√ß√£o) - DEPRECATED

tags:
  - name: Auth
    description: Autentica√ß√£o e autoriza√ß√£o
  - name: V2 - Cats
    description: üÜï Gerenciamento de gatos (V2 - Recomendado)
  - name: V2 - Feedings
    description: üÜï Registro de alimenta√ß√µes (V2 - Recomendado)
  - name: V2 - Weight
    description: üÜï Controle de peso (V2 - Recomendado)
  - name: V2 - Goals
    description: üÜï Metas de peso (V2 - Recomendado)
  - name: V2 - Schedules
    description: üÜï Agendamento de alimenta√ß√µes (V2 - Recomendado)
  - name: V2 - Households
    description: üÜï Gerenciamento de domic√≠lios (V2 - Recomendado)
  - name: Cats
    description: ‚ö†Ô∏è Gerenciamento de gatos (V1 - DEPRECATED)
  - name: Feedings
    description: ‚ö†Ô∏è Registro de alimenta√ß√µes (V1 - DEPRECATED)
  - name: Households
    description: ‚ö†Ô∏è Gerenciamento de domic√≠lios (V1 - DEPRECATED)
  - name: Schedules
    description: ‚ö†Ô∏è Agendamento de alimenta√ß√µes (V1 - DEPRECATED)
  - name: Weight
    description: ‚ö†Ô∏è Controle de peso dos gatos (V1 - DEPRECATED)
  - name: Users
    description: Gerenciamento de usu√°rios
  - name: Notifications
    description: Sistema de notifica√ß√µes
  - name: Statistics
    description: Estat√≠sticas e relat√≥rios
  - name: Upload
    description: Upload de arquivos

paths:
  # ==================== AUTH ====================
  /auth/callback:
    get:
      tags: [Auth]
      summary: Callback de autentica√ß√£o OAuth
      description: Endpoint para callback do Supabase Auth
      responses:
        '302':
          description: Redirecionamento ap√≥s autentica√ß√£o
        '400':
          description: Erro no processo de autentica√ß√£o

  /auth/mobile/register:
    post:
      tags: [Auth]
      summary: Registro de usu√°rio mobile
      description: Cria uma nova conta de usu√°rio via mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, name]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                name:
                  type: string
      responses:
        '201':
          description: Usu√°rio criado com sucesso
        '400':
          description: Dados inv√°lidos

  # ==================== V2 - CATS (RECOMENDADO) ====================
  /v2/cats:
    get:
      tags: [V2 - Cats]
      summary: üÜï Listar gatos (V2)
      description: Retorna lista de gatos do household do usu√°rio autenticado
      security:
        - bearerAuth: []
      parameters:
        - name: householdId
          in: query
          schema:
            type: string
            format: uuid
          description: Filtrar por household espec√≠fico (opcional)
      responses:
        '200':
          description: Lista de gatos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'
              examples:
                success:
                  value:
                    success: true
                    data:
                      - id: "uuid"
                        name: "Miau"
                        photo_url: "https://..."
                        birth_date: "2020-01-15"
                        weight: "4.5"
                        household_id: "uuid"
                        owner_id: "uuid"
                        created_at: "2025-01-28T10:00:00Z"
                        updated_at: "2025-01-28T10:00:00Z"
                    count: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    
    post:
      tags: [V2 - Cats]
      summary: üÜï Criar gato (V2)
      description: Adiciona um novo gato ao household
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, householdId]
              properties:
                name:
                  type: string
                householdId:
                  type: string
                  format: uuid
                photoUrl:
                  type: string
                birthdate:
                  type: string
                  format: date-time
                weight:
                  type: number
                feeding_interval:
                  type: integer
                  minimum: 1
                  maximum: 24
      responses:
        '201':
          description: Gato criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'

  /v2/cats/{catId}/next-feeding:
    get:
      tags: [V2 - Cats]
      summary: üÜï Pr√≥xima alimenta√ß√£o do gato (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: catId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Informa√ß√µes da pr√≥xima alimenta√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'
              examples:
                success:
                  value:
                    success: true
                    data:
                      nextFeeding: "2025-01-28T15:00:00Z"
                      catId: "uuid"
                      hasSchedules: true
                      lastFeedingTime: "2025-01-28T09:00:00Z"

  # ==================== V2 - FEEDINGS (RECOMENDADO) ====================
  /v2/feedings:
    get:
      tags: [V2 - Feedings]
      summary: üÜï Listar alimenta√ß√µes (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: householdId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lista de alimenta√ß√µes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'
    
    post:
      tags: [V2 - Feedings]
      summary: üÜï Registrar alimenta√ß√£o (V2)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [catId]
              properties:
                catId:
                  type: string
                  format: uuid
                amount:
                  type: number
                notes:
                  type: string
                meal_type:
                  type: string
                  enum: [manual, scheduled]
      responses:
        '201':
          description: Alimenta√ß√£o registrada
        '409':
          description: Alimenta√ß√£o duplicada (muito recente)

  /v2/feedings/{id}:
    get:
      tags: [V2 - Feedings]
      summary: üÜï Buscar alimenta√ß√£o (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dados da alimenta√ß√£o
    
    delete:
      tags: [V2 - Feedings]
      summary: üÜï Deletar alimenta√ß√£o (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Alimenta√ß√£o deletada

  /v2/feedings/stats:
    get:
      tags: [V2 - Feedings]
      summary: üÜï Estat√≠sticas de alimenta√ß√£o (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: catId
          in: query
          schema:
            type: string
            format: uuid
          description: Filtrar por gato espec√≠fico (opcional)
        - name: days
          in: query
          schema:
            type: integer
            default: 7
            minimum: 1
            maximum: 90
      responses:
        '200':
          description: Estat√≠sticas de alimenta√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'

  # ==================== V2 - WEIGHT LOGS (RECOMENDADO) ====================
  /v2/weight-logs:
    get:
      tags: [V2 - Weight]
      summary: üÜï Listar registros de peso (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: catId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lista de registros de peso
    
    post:
      tags: [V2 - Weight]
      summary: üÜï Criar registro de peso (V2)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [catId, weight, date]
              properties:
                catId:
                  type: string
                  format: uuid
                weight:
                  type: number
                date:
                  type: string
                  pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
                notes:
                  type: string
      responses:
        '201':
          description: Registro criado
    
    put:
      tags: [V2 - Weight]
      summary: üÜï Atualizar registro de peso (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [catId, weight, date]
              properties:
                catId:
                  type: string
                weight:
                  type: number
                date:
                  type: string
      responses:
        '200':
          description: Registro atualizado
    
    delete:
      tags: [V2 - Weight]
      summary: üÜï Deletar registro de peso (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Registro deletado

  # ==================== V2 - GOALS (RECOMENDADO) ====================
  /v2/goals:
    get:
      tags: [V2 - Goals]
      summary: üÜï Listar metas de peso (V2)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de metas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'
    
    post:
      tags: [V2 - Goals]
      summary: üÜï Criar meta de peso (V2)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [cat_id, goal_name, target_weight]
              properties:
                cat_id:
                  type: string
                  format: uuid
                goal_name:
                  type: string
                target_weight:
                  type: number
                unit:
                  type: string
                  enum: [kg, lbs]
      responses:
        '201':
          description: Meta criada

  # ==================== V2 - SCHEDULES (RECOMENDADO) ====================
  /v2/schedules:
    get:
      tags: [V2 - Schedules]
      summary: üÜï Listar agendamentos (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: householdId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lista de agendamentos
    
    post:
      tags: [V2 - Schedules]
      summary: üÜï Criar agendamento (V2)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [catId, type]
              properties:
                catId:
                  type: string
                  format: uuid
                type:
                  type: string
                  enum: [interval, fixedTime]
                interval:
                  type: integer
                times:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Agendamento criado

  /v2/schedules/{id}:
    get:
      tags: [V2 - Schedules]
      summary: üÜï Buscar agendamento (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dados do agendamento
    
    patch:
      tags: [V2 - Schedules]
      summary: üÜï Atualizar agendamento (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agendamento atualizado
    
    delete:
      tags: [V2 - Schedules]
      summary: üÜï Deletar agendamento (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agendamento deletado

  # ==================== V2 - HOUSEHOLDS (RECOMENDADO) ====================
  /v2/households/{id}/cats:
    get:
      tags: [V2 - Households]
      summary: üÜï Listar gatos do household (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lista de gatos
    
    post:
      tags: [V2 - Households]
      summary: üÜï Adicionar gato ao household (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Gato adicionado

  /v2/households/{id}/invite:
    post:
      tags: [V2 - Households]
      summary: üÜï Convidar membro (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Convite enviado ou usu√°rio adicionado

  /v2/households/{id}/invite-code:
    patch:
      tags: [V2 - Households]
      summary: üÜï Regenerar c√≥digo de convite (V2)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: C√≥digo regenerado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Response'

  # ==================== CATS (V1 - DEPRECATED) ====================
  /cats:
    get:
      tags: [Cats]
      summary: ‚ö†Ô∏è Listar gatos (V1 - DEPRECATED)
      description: |
        **DEPRECATED**: Use `/v2/cats` em vez disso.
        Esta rota ser√° removida em 2025-07-28.
        
        Retorna lista de gatos do usu√°rio
      deprecated: true
      parameters:
        - name: householdId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de gatos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
    
    post:
      tags: [Cats]
      summary: Criar gato
      description: Adiciona um novo gato
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatInput'
      responses:
        '201':
          description: Gato criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'

  /cats/{catId}:
    get:
      tags: [Cats]
      summary: Obter gato por ID
      parameters:
        - name: catId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do gato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
    
    put:
      tags: [Cats]
      summary: Atualizar gato
      parameters:
        - name: catId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatInput'
      responses:
        '200':
          description: Gato atualizado
    
    delete:
      tags: [Cats]
      summary: Deletar gato
      parameters:
        - name: catId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Gato deletado com sucesso

  /cats/{catId}/next-feeding:
    get:
      tags: [Cats]
      summary: Pr√≥xima alimenta√ß√£o do gato
      description: Retorna informa√ß√µes sobre a pr√≥xima alimenta√ß√£o agendada
      parameters:
        - name: catId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Informa√ß√µes da pr√≥xima alimenta√ß√£o
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextFeeding:
                    type: string
                    format: date-time
                  schedule:
                    $ref: '#/components/schemas/Schedule'

  # ==================== FEEDINGS (V1 - DEPRECATED) ====================
  /feedings:
    get:
      tags: [Feedings]
      summary: ‚ö†Ô∏è Listar alimenta√ß√µes (V1 - DEPRECATED)
      description: |
        **DEPRECATED**: Use `/v2/feedings` em vez disso.
        Ser√° removido em 2025-07-28.
        
        Retorna hist√≥rico de alimenta√ß√µes
      deprecated: true
      parameters:
        - name: catId
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Lista de alimenta√ß√µes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feeding'
    
    post:
      tags: [Feedings]
      summary: Registrar alimenta√ß√£o
      description: Cria um novo registro de alimenta√ß√£o
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedingInput'
      responses:
        '201':
          description: Alimenta√ß√£o registrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feeding'

  /feedings/{id}:
    get:
      tags: [Feedings]
      summary: Obter alimenta√ß√£o por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes da alimenta√ß√£o
    
    put:
      tags: [Feedings]
      summary: Atualizar alimenta√ß√£o
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedingInput'
      responses:
        '200':
          description: Alimenta√ß√£o atualizada
    
    delete:
      tags: [Feedings]
      summary: Deletar alimenta√ß√£o
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Alimenta√ß√£o deletada

  /feedings/batch:
    post:
      tags: [Feedings]
      summary: Registrar m√∫ltiplas alimenta√ß√µes
      description: Cria m√∫ltiplos registros de alimenta√ß√£o de uma vez
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feedings:
                  type: array
                  items:
                    $ref: '#/components/schemas/FeedingInput'
      responses:
        '201':
          description: Alimenta√ß√µes registradas em lote

  /feedings/last/{catId}:
    get:
      tags: [Feedings]
      summary: √öltima alimenta√ß√£o do gato
      description: Retorna a √∫ltima alimenta√ß√£o registrada para o gato
      parameters:
        - name: catId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: √öltima alimenta√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feeding'

  /feedings/stats:
    get:
      tags: [Feedings]
      summary: Estat√≠sticas de alimenta√ß√£o
      description: Retorna estat√≠sticas detalhadas sobre alimenta√ß√µes
      parameters:
        - name: catId
          in: query
          schema:
            type: string
        - name: days
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 90
            default: 7
      responses:
        '200':
          description: Estat√≠sticas de alimenta√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingStats'

  # ==================== HOUSEHOLDS ====================
  /households:
    get:
      tags: [Households]
      summary: Listar domic√≠lios
      description: Retorna domic√≠lios do usu√°rio
      responses:
        '200':
          description: Lista de domic√≠lios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Household'
    
    post:
      tags: [Households]
      summary: Criar domic√≠lio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Domic√≠lio criado

  /households/{id}:
    get:
      tags: [Households]
      summary: Obter domic√≠lio por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do domic√≠lio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Household'
    
    put:
      tags: [Households]
      summary: Atualizar domic√≠lio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Domic√≠lio atualizado
    
    delete:
      tags: [Households]
      summary: Deletar domic√≠lio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Domic√≠lio deletado

  /households/{id}/cats:
    get:
      tags: [Households]
      summary: Gatos do domic√≠lio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de gatos do domic√≠lio

  /households/{id}/members:
    get:
      tags: [Households]
      summary: Membros do domic√≠lio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de membros
    
    post:
      tags: [Households]
      summary: Adicionar membro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                role:
                  type: string
                  enum: [owner, admin, member]
      responses:
        '201':
          description: Membro adicionado

  /households/{id}/invite-code:
    get:
      tags: [Households]
      summary: Obter c√≥digo de convite
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: C√≥digo de convite
          content:
            application/json:
              schema:
                type: object
                properties:
                  inviteCode:
                    type: string

  /households/join:
    post:
      tags: [Households]
      summary: Entrar em domic√≠lio via c√≥digo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [inviteCode]
              properties:
                inviteCode:
                  type: string
      responses:
        '200':
          description: Usu√°rio entrou no domic√≠lio

  # ==================== SCHEDULES (V1 - DEPRECATED) ====================
  /schedules:
    get:
      tags: [Schedules]
      summary: ‚ö†Ô∏è Listar agendamentos (V1 - DEPRECATED)
      description: |
        **DEPRECATED**: Use `/v2/schedules` em vez disso.
        Ser√° removido em 2025-07-28.
      deprecated: true
      responses:
        '200':
          description: Lista de agendamentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
    
    post:
      tags: [Schedules]
      summary: Criar agendamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleInput'
      responses:
        '201':
          description: Agendamento criado

  /schedules/{id}:
    get:
      tags: [Schedules]
      summary: Obter agendamento por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do agendamento
    
    put:
      tags: [Schedules]
      summary: Atualizar agendamento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleInput'
      responses:
        '200':
          description: Agendamento atualizado
    
    delete:
      tags: [Schedules]
      summary: Deletar agendamento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Agendamento deletado

  # ==================== WEIGHT (V1 - DEPRECATED) ====================
  /weight-logs:
    get:
      tags: [Weight]
      summary: ‚ö†Ô∏è Hist√≥rico de peso (V1 - DEPRECATED)
      description: |
        **DEPRECATED**: Use `/v2/weight-logs` em vez disso.
        Ser√° removido em 2025-07-28.
      deprecated: true
      parameters:
        - name: catId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hist√≥rico de peso do gato
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeightLog'
    
    post:
      tags: [Weight]
      summary: Registrar peso
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightLogInput'
      responses:
        '201':
          description: Peso registrado

  /weight/goals:
    get:
      tags: [Weight]
      summary: Metas de peso
      parameters:
        - name: catId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metas de peso do gato
    
    post:
      tags: [Weight]
      summary: Criar meta de peso
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [catId, targetWeight]
              properties:
                catId:
                  type: string
                targetWeight:
                  type: number
                targetDate:
                  type: string
                  format: date
      responses:
        '201':
          description: Meta criada

  # ==================== USERS ====================
  /users/{id}:
    get:
      tags: [Users]
      summary: Obter usu√°rio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do usu√°rio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    
    put:
      tags: [Users]
      summary: Atualizar usu√°rio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Usu√°rio atualizado

  /users/{id}/preferences:
    get:
      tags: [Users]
      summary: Prefer√™ncias do usu√°rio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Prefer√™ncias do usu√°rio
    
    put:
      tags: [Users]
      summary: Atualizar prefer√™ncias
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notifications:
                  type: boolean
                theme:
                  type: string
                language:
                  type: string
      responses:
        '200':
          description: Prefer√™ncias atualizadas

  # ==================== NOTIFICATIONS ====================
  /scheduled-notifications:
    get:
      tags: [Notifications]
      summary: Listar notifica√ß√µes agendadas
      responses:
        '200':
          description: Lista de notifica√ß√µes agendadas
    
    post:
      tags: [Notifications]
      summary: Criar notifica√ß√£o agendada
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, message, scheduledFor]
              properties:
                title:
                  type: string
                message:
                  type: string
                scheduledFor:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Notifica√ß√£o criada

  /scheduled-notifications/deliver:
    post:
      tags: [Notifications]
      summary: Entregar notifica√ß√µes pendentes
      description: Processa e envia notifica√ß√µes agendadas
      responses:
        '200':
          description: Notifica√ß√µes entregues

  # ==================== STATISTICS ====================
  /statistics:
    get:
      tags: [Statistics]
      summary: Estat√≠sticas gerais
      description: Retorna estat√≠sticas consolidadas do sistema
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [day, week, month, year]
            default: week
      responses:
        '200':
          description: Estat√≠sticas gerais
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalFeedings:
                    type: integer
                  activeCats:
                    type: integer
                  averageDaily:
                    type: number

  # ==================== UPLOAD ====================
  /upload:
    post:
      tags: [Upload]
      summary: Upload de arquivo
      description: Faz upload de imagem (foto de gato)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Upload realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  fileId:
                    type: string

  # ==================== PROFILE ====================
  /profile/{idOrUsername}:
    get:
      tags: [Users]
      summary: Perfil p√∫blico do usu√°rio
      parameters:
        - name: idOrUsername
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Perfil p√∫blico do usu√°rio

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtido via POST /api/auth/mobile
  
  responses:
    Unauthorized:
      description: N√£o autorizado - Token ausente ou inv√°lido
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Token de autoriza√ß√£o n√£o fornecido ou sess√£o inv√°lida"
    
    Forbidden:
      description: Acesso negado - Usu√°rio n√£o tem permiss√£o
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Acesso negado ao household"
  
  schemas:
    V2Response:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          description: Indica se a requisi√ß√£o foi bem-sucedida
        data:
          type: object
          description: Dados retornados (quando success=true)
        count:
          type: integer
          description: N√∫mero de itens retornados (para listas)
        error:
          type: string
          description: Mensagem de erro (quando success=false)
        details:
          type: object
          description: Detalhes adicionais do erro (quando aplic√°vel)
      example:
        success: true
        data:
          id: "uuid"
          name: "Exemplo"
        count: 1
    
    Cat:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        photoUrl:
          type: string
        birthDate:
          type: string
          format: date
        weight:
          type: number
        householdId:
          type: string
        ownerId:
          type: string
        portionSize:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CatInput:
      type: object
      required: [name, householdId]
      properties:
        name:
          type: string
        photoUrl:
          type: string
        birthDate:
          type: string
          format: date
        weight:
          type: number
        householdId:
          type: string
        portionSize:
          type: number

    Feeding:
      type: object
      properties:
        id:
          type: string
        catId:
          type: string
        userId:
          type: string
        timestamp:
          type: string
          format: date-time
        mealType:
          type: string
          enum: [breakfast, lunch, dinner, snack]
        portionSize:
          type: number
        notes:
          type: string
        createdAt:
          type: string
          format: date-time

    FeedingInput:
      type: object
      required: [catId, timestamp]
      properties:
        catId:
          type: string
        timestamp:
          type: string
          format: date-time
        mealType:
          type: string
        portionSize:
          type: number
        notes:
          type: string

    FeedingStats:
      type: object
      properties:
        period:
          type: object
          properties:
            days:
              type: integer
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
        totals:
          type: object
          properties:
            feedings:
              type: integer
            dailyAverage:
              type: number
        dailyStats:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              feedings:
                type: integer
        catStats:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              totalFeedings:
                type: integer
              dailyAverage:
                type: number

    Household:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        inviteCode:
          type: string
        createdAt:
          type: string
          format: date-time

    Schedule:
      type: object
      properties:
        id:
          type: string
        catId:
          type: string
        time:
          type: string
          format: time
        days:
          type: array
          items:
            type: string
        mealType:
          type: string
        active:
          type: boolean

    ScheduleInput:
      type: object
      required: [catId, time, days]
      properties:
        catId:
          type: string
        time:
          type: string
        days:
          type: array
          items:
            type: string
        mealType:
          type: string
        active:
          type: boolean

    WeightLog:
      type: object
      properties:
        id:
          type: string
        catId:
          type: string
        weight:
          type: number
        date:
          type: string
          format: date
        notes:
          type: string

    WeightLogInput:
      type: object
      required: [catId, weight]
      properties:
        catId:
          type: string
        weight:
          type: number
        date:
          type: string
          format: date
        notes:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        photoUrl:
          type: string
        createdAt:
          type: string
          format: date-time

security:
  - bearerAuth: []

