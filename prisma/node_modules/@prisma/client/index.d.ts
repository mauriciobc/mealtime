
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model cats
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type cats = $Result.DefaultSelection<Prisma.$catsPayload>
/**
 * Model household_members
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type household_members = $Result.DefaultSelection<Prisma.$household_membersPayload>
/**
 * Model households
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type households = $Result.DefaultSelection<Prisma.$householdsPayload>
/**
 * Model profiles
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type profiles = $Result.DefaultSelection<Prisma.$profilesPayload>
/**
 * Model notifications
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type notifications = $Result.DefaultSelection<Prisma.$notificationsPayload>
/**
 * Model schedules
 * 
 */
export type schedules = $Result.DefaultSelection<Prisma.$schedulesPayload>
/**
 * Model feeding_logs
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type feeding_logs = $Result.DefaultSelection<Prisma.$feeding_logsPayload>
/**
 * Model schema_migrations
 * 
 */
export type schema_migrations = $Result.DefaultSelection<Prisma.$schema_migrationsPayload>
/**
 * Model cat_weight_logs
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type cat_weight_logs = $Result.DefaultSelection<Prisma.$cat_weight_logsPayload>
/**
 * Model weight_goals
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type weight_goals = $Result.DefaultSelection<Prisma.$weight_goalsPayload>
/**
 * Model weight_goal_milestones
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type weight_goal_milestones = $Result.DefaultSelection<Prisma.$weight_goal_milestonesPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cats
 * const cats = await prisma.cats.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cats
   * const cats = await prisma.cats.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cats`: Exposes CRUD operations for the **cats** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cats
    * const cats = await prisma.cats.findMany()
    * ```
    */
  get cats(): Prisma.catsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.household_members`: Exposes CRUD operations for the **household_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Household_members
    * const household_members = await prisma.household_members.findMany()
    * ```
    */
  get household_members(): Prisma.household_membersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.households`: Exposes CRUD operations for the **households** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Households
    * const households = await prisma.households.findMany()
    * ```
    */
  get households(): Prisma.householdsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profiles`: Exposes CRUD operations for the **profiles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profiles.findMany()
    * ```
    */
  get profiles(): Prisma.profilesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notifications`: Exposes CRUD operations for the **notifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notifications.findMany()
    * ```
    */
  get notifications(): Prisma.notificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.schedules`: Exposes CRUD operations for the **schedules** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schedules
    * const schedules = await prisma.schedules.findMany()
    * ```
    */
  get schedules(): Prisma.schedulesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.feeding_logs`: Exposes CRUD operations for the **feeding_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Feeding_logs
    * const feeding_logs = await prisma.feeding_logs.findMany()
    * ```
    */
  get feeding_logs(): Prisma.feeding_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.schema_migrations`: Exposes CRUD operations for the **schema_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schema_migrations
    * const schema_migrations = await prisma.schema_migrations.findMany()
    * ```
    */
  get schema_migrations(): Prisma.schema_migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cat_weight_logs`: Exposes CRUD operations for the **cat_weight_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cat_weight_logs
    * const cat_weight_logs = await prisma.cat_weight_logs.findMany()
    * ```
    */
  get cat_weight_logs(): Prisma.cat_weight_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.weight_goals`: Exposes CRUD operations for the **weight_goals** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Weight_goals
    * const weight_goals = await prisma.weight_goals.findMany()
    * ```
    */
  get weight_goals(): Prisma.weight_goalsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.weight_goal_milestones`: Exposes CRUD operations for the **weight_goal_milestones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Weight_goal_milestones
    * const weight_goal_milestones = await prisma.weight_goal_milestones.findMany()
    * ```
    */
  get weight_goal_milestones(): Prisma.weight_goal_milestonesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    cats: 'cats',
    household_members: 'household_members',
    households: 'households',
    profiles: 'profiles',
    notifications: 'notifications',
    schedules: 'schedules',
    feeding_logs: 'feeding_logs',
    schema_migrations: 'schema_migrations',
    cat_weight_logs: 'cat_weight_logs',
    weight_goals: 'weight_goals',
    weight_goal_milestones: 'weight_goal_milestones'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cats" | "household_members" | "households" | "profiles" | "notifications" | "schedules" | "feeding_logs" | "schema_migrations" | "cat_weight_logs" | "weight_goals" | "weight_goal_milestones"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      cats: {
        payload: Prisma.$catsPayload<ExtArgs>
        fields: Prisma.catsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.catsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.catsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>
          }
          findFirst: {
            args: Prisma.catsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.catsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>
          }
          findMany: {
            args: Prisma.catsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>[]
          }
          create: {
            args: Prisma.catsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>
          }
          createMany: {
            args: Prisma.catsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.catsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>[]
          }
          delete: {
            args: Prisma.catsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>
          }
          update: {
            args: Prisma.catsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>
          }
          deleteMany: {
            args: Prisma.catsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.catsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.catsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>[]
          }
          upsert: {
            args: Prisma.catsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$catsPayload>
          }
          aggregate: {
            args: Prisma.CatsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCats>
          }
          groupBy: {
            args: Prisma.catsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CatsGroupByOutputType>[]
          }
          count: {
            args: Prisma.catsCountArgs<ExtArgs>
            result: $Utils.Optional<CatsCountAggregateOutputType> | number
          }
        }
      }
      household_members: {
        payload: Prisma.$household_membersPayload<ExtArgs>
        fields: Prisma.household_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.household_membersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.household_membersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>
          }
          findFirst: {
            args: Prisma.household_membersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.household_membersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>
          }
          findMany: {
            args: Prisma.household_membersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>[]
          }
          create: {
            args: Prisma.household_membersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>
          }
          createMany: {
            args: Prisma.household_membersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.household_membersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>[]
          }
          delete: {
            args: Prisma.household_membersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>
          }
          update: {
            args: Prisma.household_membersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>
          }
          deleteMany: {
            args: Prisma.household_membersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.household_membersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.household_membersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>[]
          }
          upsert: {
            args: Prisma.household_membersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$household_membersPayload>
          }
          aggregate: {
            args: Prisma.Household_membersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHousehold_members>
          }
          groupBy: {
            args: Prisma.household_membersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Household_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.household_membersCountArgs<ExtArgs>
            result: $Utils.Optional<Household_membersCountAggregateOutputType> | number
          }
        }
      }
      households: {
        payload: Prisma.$householdsPayload<ExtArgs>
        fields: Prisma.householdsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.householdsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.householdsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>
          }
          findFirst: {
            args: Prisma.householdsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.householdsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>
          }
          findMany: {
            args: Prisma.householdsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>[]
          }
          create: {
            args: Prisma.householdsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>
          }
          createMany: {
            args: Prisma.householdsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.householdsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>[]
          }
          delete: {
            args: Prisma.householdsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>
          }
          update: {
            args: Prisma.householdsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>
          }
          deleteMany: {
            args: Prisma.householdsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.householdsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.householdsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>[]
          }
          upsert: {
            args: Prisma.householdsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$householdsPayload>
          }
          aggregate: {
            args: Prisma.HouseholdsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHouseholds>
          }
          groupBy: {
            args: Prisma.householdsGroupByArgs<ExtArgs>
            result: $Utils.Optional<HouseholdsGroupByOutputType>[]
          }
          count: {
            args: Prisma.householdsCountArgs<ExtArgs>
            result: $Utils.Optional<HouseholdsCountAggregateOutputType> | number
          }
        }
      }
      profiles: {
        payload: Prisma.$profilesPayload<ExtArgs>
        fields: Prisma.profilesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.profilesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.profilesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>
          }
          findFirst: {
            args: Prisma.profilesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.profilesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>
          }
          findMany: {
            args: Prisma.profilesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>[]
          }
          create: {
            args: Prisma.profilesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>
          }
          createMany: {
            args: Prisma.profilesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.profilesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>[]
          }
          delete: {
            args: Prisma.profilesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>
          }
          update: {
            args: Prisma.profilesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>
          }
          deleteMany: {
            args: Prisma.profilesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.profilesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.profilesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>[]
          }
          upsert: {
            args: Prisma.profilesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilesPayload>
          }
          aggregate: {
            args: Prisma.ProfilesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfiles>
          }
          groupBy: {
            args: Prisma.profilesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfilesGroupByOutputType>[]
          }
          count: {
            args: Prisma.profilesCountArgs<ExtArgs>
            result: $Utils.Optional<ProfilesCountAggregateOutputType> | number
          }
        }
      }
      notifications: {
        payload: Prisma.$notificationsPayload<ExtArgs>
        fields: Prisma.notificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          findFirst: {
            args: Prisma.notificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          findMany: {
            args: Prisma.notificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          create: {
            args: Prisma.notificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          createMany: {
            args: Prisma.notificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          delete: {
            args: Prisma.notificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          update: {
            args: Prisma.notificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          deleteMany: {
            args: Prisma.notificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          upsert: {
            args: Prisma.notificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          aggregate: {
            args: Prisma.NotificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotifications>
          }
          groupBy: {
            args: Prisma.notificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationsCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationsCountAggregateOutputType> | number
          }
        }
      }
      schedules: {
        payload: Prisma.$schedulesPayload<ExtArgs>
        fields: Prisma.schedulesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.schedulesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.schedulesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>
          }
          findFirst: {
            args: Prisma.schedulesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.schedulesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>
          }
          findMany: {
            args: Prisma.schedulesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>[]
          }
          create: {
            args: Prisma.schedulesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>
          }
          createMany: {
            args: Prisma.schedulesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.schedulesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>[]
          }
          delete: {
            args: Prisma.schedulesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>
          }
          update: {
            args: Prisma.schedulesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>
          }
          deleteMany: {
            args: Prisma.schedulesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.schedulesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.schedulesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>[]
          }
          upsert: {
            args: Prisma.schedulesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schedulesPayload>
          }
          aggregate: {
            args: Prisma.SchedulesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSchedules>
          }
          groupBy: {
            args: Prisma.schedulesGroupByArgs<ExtArgs>
            result: $Utils.Optional<SchedulesGroupByOutputType>[]
          }
          count: {
            args: Prisma.schedulesCountArgs<ExtArgs>
            result: $Utils.Optional<SchedulesCountAggregateOutputType> | number
          }
        }
      }
      feeding_logs: {
        payload: Prisma.$feeding_logsPayload<ExtArgs>
        fields: Prisma.feeding_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.feeding_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.feeding_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>
          }
          findFirst: {
            args: Prisma.feeding_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.feeding_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>
          }
          findMany: {
            args: Prisma.feeding_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>[]
          }
          create: {
            args: Prisma.feeding_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>
          }
          createMany: {
            args: Prisma.feeding_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.feeding_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>[]
          }
          delete: {
            args: Prisma.feeding_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>
          }
          update: {
            args: Prisma.feeding_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>
          }
          deleteMany: {
            args: Prisma.feeding_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.feeding_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.feeding_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>[]
          }
          upsert: {
            args: Prisma.feeding_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feeding_logsPayload>
          }
          aggregate: {
            args: Prisma.Feeding_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFeeding_logs>
          }
          groupBy: {
            args: Prisma.feeding_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Feeding_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.feeding_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Feeding_logsCountAggregateOutputType> | number
          }
        }
      }
      schema_migrations: {
        payload: Prisma.$schema_migrationsPayload<ExtArgs>
        fields: Prisma.schema_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.schema_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.schema_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findFirst: {
            args: Prisma.schema_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.schema_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findMany: {
            args: Prisma.schema_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          create: {
            args: Prisma.schema_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          createMany: {
            args: Prisma.schema_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.schema_migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          delete: {
            args: Prisma.schema_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          update: {
            args: Prisma.schema_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.schema_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.schema_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.schema_migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          upsert: {
            args: Prisma.schema_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Schema_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSchema_migrations>
          }
          groupBy: {
            args: Prisma.schema_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.schema_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsCountAggregateOutputType> | number
          }
        }
      }
      cat_weight_logs: {
        payload: Prisma.$cat_weight_logsPayload<ExtArgs>
        fields: Prisma.cat_weight_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cat_weight_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cat_weight_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>
          }
          findFirst: {
            args: Prisma.cat_weight_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cat_weight_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>
          }
          findMany: {
            args: Prisma.cat_weight_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>[]
          }
          create: {
            args: Prisma.cat_weight_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>
          }
          createMany: {
            args: Prisma.cat_weight_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cat_weight_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>[]
          }
          delete: {
            args: Prisma.cat_weight_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>
          }
          update: {
            args: Prisma.cat_weight_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>
          }
          deleteMany: {
            args: Prisma.cat_weight_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cat_weight_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cat_weight_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>[]
          }
          upsert: {
            args: Prisma.cat_weight_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cat_weight_logsPayload>
          }
          aggregate: {
            args: Prisma.Cat_weight_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCat_weight_logs>
          }
          groupBy: {
            args: Prisma.cat_weight_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cat_weight_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cat_weight_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Cat_weight_logsCountAggregateOutputType> | number
          }
        }
      }
      weight_goals: {
        payload: Prisma.$weight_goalsPayload<ExtArgs>
        fields: Prisma.weight_goalsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.weight_goalsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.weight_goalsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>
          }
          findFirst: {
            args: Prisma.weight_goalsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.weight_goalsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>
          }
          findMany: {
            args: Prisma.weight_goalsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>[]
          }
          create: {
            args: Prisma.weight_goalsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>
          }
          createMany: {
            args: Prisma.weight_goalsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.weight_goalsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>[]
          }
          delete: {
            args: Prisma.weight_goalsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>
          }
          update: {
            args: Prisma.weight_goalsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>
          }
          deleteMany: {
            args: Prisma.weight_goalsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.weight_goalsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.weight_goalsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>[]
          }
          upsert: {
            args: Prisma.weight_goalsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goalsPayload>
          }
          aggregate: {
            args: Prisma.Weight_goalsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWeight_goals>
          }
          groupBy: {
            args: Prisma.weight_goalsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Weight_goalsGroupByOutputType>[]
          }
          count: {
            args: Prisma.weight_goalsCountArgs<ExtArgs>
            result: $Utils.Optional<Weight_goalsCountAggregateOutputType> | number
          }
        }
      }
      weight_goal_milestones: {
        payload: Prisma.$weight_goal_milestonesPayload<ExtArgs>
        fields: Prisma.weight_goal_milestonesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.weight_goal_milestonesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.weight_goal_milestonesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>
          }
          findFirst: {
            args: Prisma.weight_goal_milestonesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.weight_goal_milestonesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>
          }
          findMany: {
            args: Prisma.weight_goal_milestonesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>[]
          }
          create: {
            args: Prisma.weight_goal_milestonesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>
          }
          createMany: {
            args: Prisma.weight_goal_milestonesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.weight_goal_milestonesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>[]
          }
          delete: {
            args: Prisma.weight_goal_milestonesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>
          }
          update: {
            args: Prisma.weight_goal_milestonesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>
          }
          deleteMany: {
            args: Prisma.weight_goal_milestonesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.weight_goal_milestonesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.weight_goal_milestonesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>[]
          }
          upsert: {
            args: Prisma.weight_goal_milestonesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weight_goal_milestonesPayload>
          }
          aggregate: {
            args: Prisma.Weight_goal_milestonesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWeight_goal_milestones>
          }
          groupBy: {
            args: Prisma.weight_goal_milestonesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Weight_goal_milestonesGroupByOutputType>[]
          }
          count: {
            args: Prisma.weight_goal_milestonesCountArgs<ExtArgs>
            result: $Utils.Optional<Weight_goal_milestonesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cats?: catsOmit
    household_members?: household_membersOmit
    households?: householdsOmit
    profiles?: profilesOmit
    notifications?: notificationsOmit
    schedules?: schedulesOmit
    feeding_logs?: feeding_logsOmit
    schema_migrations?: schema_migrationsOmit
    cat_weight_logs?: cat_weight_logsOmit
    weight_goals?: weight_goalsOmit
    weight_goal_milestones?: weight_goal_milestonesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CatsCountOutputType
   */

  export type CatsCountOutputType = {
    feeding_logs: number
    schedules: number
    weight_logs: number
    weight_goals: number
  }

  export type CatsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    feeding_logs?: boolean | CatsCountOutputTypeCountFeeding_logsArgs
    schedules?: boolean | CatsCountOutputTypeCountSchedulesArgs
    weight_logs?: boolean | CatsCountOutputTypeCountWeight_logsArgs
    weight_goals?: boolean | CatsCountOutputTypeCountWeight_goalsArgs
  }

  // Custom InputTypes
  /**
   * CatsCountOutputType without action
   */
  export type CatsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatsCountOutputType
     */
    select?: CatsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CatsCountOutputType without action
   */
  export type CatsCountOutputTypeCountFeeding_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feeding_logsWhereInput
  }

  /**
   * CatsCountOutputType without action
   */
  export type CatsCountOutputTypeCountSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schedulesWhereInput
  }

  /**
   * CatsCountOutputType without action
   */
  export type CatsCountOutputTypeCountWeight_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cat_weight_logsWhereInput
  }

  /**
   * CatsCountOutputType without action
   */
  export type CatsCountOutputTypeCountWeight_goalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: weight_goalsWhereInput
  }


  /**
   * Count Type HouseholdsCountOutputType
   */

  export type HouseholdsCountOutputType = {
    cats: number
    feeding_logs: number
    household_members: number
  }

  export type HouseholdsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cats?: boolean | HouseholdsCountOutputTypeCountCatsArgs
    feeding_logs?: boolean | HouseholdsCountOutputTypeCountFeeding_logsArgs
    household_members?: boolean | HouseholdsCountOutputTypeCountHousehold_membersArgs
  }

  // Custom InputTypes
  /**
   * HouseholdsCountOutputType without action
   */
  export type HouseholdsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HouseholdsCountOutputType
     */
    select?: HouseholdsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HouseholdsCountOutputType without action
   */
  export type HouseholdsCountOutputTypeCountCatsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: catsWhereInput
  }

  /**
   * HouseholdsCountOutputType without action
   */
  export type HouseholdsCountOutputTypeCountFeeding_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feeding_logsWhereInput
  }

  /**
   * HouseholdsCountOutputType without action
   */
  export type HouseholdsCountOutputTypeCountHousehold_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: household_membersWhereInput
  }


  /**
   * Count Type ProfilesCountOutputType
   */

  export type ProfilesCountOutputType = {
    owned_cats: number
    feeding_logs_fed: number
    household_members: number
    weight_logs_measured: number
    created_weight_goals: number
  }

  export type ProfilesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owned_cats?: boolean | ProfilesCountOutputTypeCountOwned_catsArgs
    feeding_logs_fed?: boolean | ProfilesCountOutputTypeCountFeeding_logs_fedArgs
    household_members?: boolean | ProfilesCountOutputTypeCountHousehold_membersArgs
    weight_logs_measured?: boolean | ProfilesCountOutputTypeCountWeight_logs_measuredArgs
    created_weight_goals?: boolean | ProfilesCountOutputTypeCountCreated_weight_goalsArgs
  }

  // Custom InputTypes
  /**
   * ProfilesCountOutputType without action
   */
  export type ProfilesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilesCountOutputType
     */
    select?: ProfilesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfilesCountOutputType without action
   */
  export type ProfilesCountOutputTypeCountOwned_catsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: catsWhereInput
  }

  /**
   * ProfilesCountOutputType without action
   */
  export type ProfilesCountOutputTypeCountFeeding_logs_fedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feeding_logsWhereInput
  }

  /**
   * ProfilesCountOutputType without action
   */
  export type ProfilesCountOutputTypeCountHousehold_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: household_membersWhereInput
  }

  /**
   * ProfilesCountOutputType without action
   */
  export type ProfilesCountOutputTypeCountWeight_logs_measuredArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cat_weight_logsWhereInput
  }

  /**
   * ProfilesCountOutputType without action
   */
  export type ProfilesCountOutputTypeCountCreated_weight_goalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: weight_goalsWhereInput
  }


  /**
   * Count Type Weight_goalsCountOutputType
   */

  export type Weight_goalsCountOutputType = {
    milestones: number
  }

  export type Weight_goalsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    milestones?: boolean | Weight_goalsCountOutputTypeCountMilestonesArgs
  }

  // Custom InputTypes
  /**
   * Weight_goalsCountOutputType without action
   */
  export type Weight_goalsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Weight_goalsCountOutputType
     */
    select?: Weight_goalsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Weight_goalsCountOutputType without action
   */
  export type Weight_goalsCountOutputTypeCountMilestonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: weight_goal_milestonesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model cats
   */

  export type AggregateCats = {
    _count: CatsCountAggregateOutputType | null
    _avg: CatsAvgAggregateOutputType | null
    _sum: CatsSumAggregateOutputType | null
    _min: CatsMinAggregateOutputType | null
    _max: CatsMaxAggregateOutputType | null
  }

  export type CatsAvgAggregateOutputType = {
    weight: Decimal | null
    portion_size: Decimal | null
    feeding_interval: number | null
  }

  export type CatsSumAggregateOutputType = {
    weight: Decimal | null
    portion_size: Decimal | null
    feeding_interval: number | null
  }

  export type CatsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    name: string | null
    birth_date: Date | null
    weight: Decimal | null
    household_id: string | null
    owner_id: string | null
    portion_size: Decimal | null
    portion_unit: string | null
    photo_url: string | null
    restrictions: string | null
    notes: string | null
    feeding_interval: number | null
  }

  export type CatsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    name: string | null
    birth_date: Date | null
    weight: Decimal | null
    household_id: string | null
    owner_id: string | null
    portion_size: Decimal | null
    portion_unit: string | null
    photo_url: string | null
    restrictions: string | null
    notes: string | null
    feeding_interval: number | null
  }

  export type CatsCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    name: number
    birth_date: number
    weight: number
    household_id: number
    owner_id: number
    portion_size: number
    portion_unit: number
    photo_url: number
    restrictions: number
    notes: number
    feeding_interval: number
    _all: number
  }


  export type CatsAvgAggregateInputType = {
    weight?: true
    portion_size?: true
    feeding_interval?: true
  }

  export type CatsSumAggregateInputType = {
    weight?: true
    portion_size?: true
    feeding_interval?: true
  }

  export type CatsMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    name?: true
    birth_date?: true
    weight?: true
    household_id?: true
    owner_id?: true
    portion_size?: true
    portion_unit?: true
    photo_url?: true
    restrictions?: true
    notes?: true
    feeding_interval?: true
  }

  export type CatsMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    name?: true
    birth_date?: true
    weight?: true
    household_id?: true
    owner_id?: true
    portion_size?: true
    portion_unit?: true
    photo_url?: true
    restrictions?: true
    notes?: true
    feeding_interval?: true
  }

  export type CatsCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    name?: true
    birth_date?: true
    weight?: true
    household_id?: true
    owner_id?: true
    portion_size?: true
    portion_unit?: true
    photo_url?: true
    restrictions?: true
    notes?: true
    feeding_interval?: true
    _all?: true
  }

  export type CatsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cats to aggregate.
     */
    where?: catsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cats to fetch.
     */
    orderBy?: catsOrderByWithRelationInput | catsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: catsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cats
    **/
    _count?: true | CatsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatsMaxAggregateInputType
  }

  export type GetCatsAggregateType<T extends CatsAggregateArgs> = {
        [P in keyof T & keyof AggregateCats]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCats[P]>
      : GetScalarType<T[P], AggregateCats[P]>
  }




  export type catsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: catsWhereInput
    orderBy?: catsOrderByWithAggregationInput | catsOrderByWithAggregationInput[]
    by: CatsScalarFieldEnum[] | CatsScalarFieldEnum
    having?: catsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatsCountAggregateInputType | true
    _avg?: CatsAvgAggregateInputType
    _sum?: CatsSumAggregateInputType
    _min?: CatsMinAggregateInputType
    _max?: CatsMaxAggregateInputType
  }

  export type CatsGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    name: string
    birth_date: Date | null
    weight: Decimal | null
    household_id: string
    owner_id: string
    portion_size: Decimal | null
    portion_unit: string | null
    photo_url: string | null
    restrictions: string | null
    notes: string | null
    feeding_interval: number | null
    _count: CatsCountAggregateOutputType | null
    _avg: CatsAvgAggregateOutputType | null
    _sum: CatsSumAggregateOutputType | null
    _min: CatsMinAggregateOutputType | null
    _max: CatsMaxAggregateOutputType | null
  }

  type GetCatsGroupByPayload<T extends catsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CatsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatsGroupByOutputType[P]>
            : GetScalarType<T[P], CatsGroupByOutputType[P]>
        }
      >
    >


  export type catsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    birth_date?: boolean
    weight?: boolean
    household_id?: boolean
    owner_id?: boolean
    portion_size?: boolean
    portion_unit?: boolean
    photo_url?: boolean
    restrictions?: boolean
    notes?: boolean
    feeding_interval?: boolean
    household?: boolean | householdsDefaultArgs<ExtArgs>
    owner?: boolean | profilesDefaultArgs<ExtArgs>
    feeding_logs?: boolean | cats$feeding_logsArgs<ExtArgs>
    schedules?: boolean | cats$schedulesArgs<ExtArgs>
    weight_logs?: boolean | cats$weight_logsArgs<ExtArgs>
    weight_goals?: boolean | cats$weight_goalsArgs<ExtArgs>
    _count?: boolean | CatsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cats"]>

  export type catsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    birth_date?: boolean
    weight?: boolean
    household_id?: boolean
    owner_id?: boolean
    portion_size?: boolean
    portion_unit?: boolean
    photo_url?: boolean
    restrictions?: boolean
    notes?: boolean
    feeding_interval?: boolean
    household?: boolean | householdsDefaultArgs<ExtArgs>
    owner?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cats"]>

  export type catsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    birth_date?: boolean
    weight?: boolean
    household_id?: boolean
    owner_id?: boolean
    portion_size?: boolean
    portion_unit?: boolean
    photo_url?: boolean
    restrictions?: boolean
    notes?: boolean
    feeding_interval?: boolean
    household?: boolean | householdsDefaultArgs<ExtArgs>
    owner?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cats"]>

  export type catsSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    birth_date?: boolean
    weight?: boolean
    household_id?: boolean
    owner_id?: boolean
    portion_size?: boolean
    portion_unit?: boolean
    photo_url?: boolean
    restrictions?: boolean
    notes?: boolean
    feeding_interval?: boolean
  }

  export type catsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "name" | "birth_date" | "weight" | "household_id" | "owner_id" | "portion_size" | "portion_unit" | "photo_url" | "restrictions" | "notes" | "feeding_interval", ExtArgs["result"]["cats"]>
  export type catsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    household?: boolean | householdsDefaultArgs<ExtArgs>
    owner?: boolean | profilesDefaultArgs<ExtArgs>
    feeding_logs?: boolean | cats$feeding_logsArgs<ExtArgs>
    schedules?: boolean | cats$schedulesArgs<ExtArgs>
    weight_logs?: boolean | cats$weight_logsArgs<ExtArgs>
    weight_goals?: boolean | cats$weight_goalsArgs<ExtArgs>
    _count?: boolean | CatsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type catsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    household?: boolean | householdsDefaultArgs<ExtArgs>
    owner?: boolean | profilesDefaultArgs<ExtArgs>
  }
  export type catsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    household?: boolean | householdsDefaultArgs<ExtArgs>
    owner?: boolean | profilesDefaultArgs<ExtArgs>
  }

  export type $catsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cats"
    objects: {
      household: Prisma.$householdsPayload<ExtArgs>
      owner: Prisma.$profilesPayload<ExtArgs>
      feeding_logs: Prisma.$feeding_logsPayload<ExtArgs>[]
      schedules: Prisma.$schedulesPayload<ExtArgs>[]
      weight_logs: Prisma.$cat_weight_logsPayload<ExtArgs>[]
      weight_goals: Prisma.$weight_goalsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      name: string
      birth_date: Date | null
      weight: Prisma.Decimal | null
      household_id: string
      owner_id: string
      portion_size: Prisma.Decimal | null
      portion_unit: string | null
      photo_url: string | null
      restrictions: string | null
      notes: string | null
      feeding_interval: number | null
    }, ExtArgs["result"]["cats"]>
    composites: {}
  }

  type catsGetPayload<S extends boolean | null | undefined | catsDefaultArgs> = $Result.GetResult<Prisma.$catsPayload, S>

  type catsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<catsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CatsCountAggregateInputType | true
    }

  export interface catsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cats'], meta: { name: 'cats' } }
    /**
     * Find zero or one Cats that matches the filter.
     * @param {catsFindUniqueArgs} args - Arguments to find a Cats
     * @example
     * // Get one Cats
     * const cats = await prisma.cats.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends catsFindUniqueArgs>(args: SelectSubset<T, catsFindUniqueArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cats that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {catsFindUniqueOrThrowArgs} args - Arguments to find a Cats
     * @example
     * // Get one Cats
     * const cats = await prisma.cats.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends catsFindUniqueOrThrowArgs>(args: SelectSubset<T, catsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catsFindFirstArgs} args - Arguments to find a Cats
     * @example
     * // Get one Cats
     * const cats = await prisma.cats.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends catsFindFirstArgs>(args?: SelectSubset<T, catsFindFirstArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cats that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catsFindFirstOrThrowArgs} args - Arguments to find a Cats
     * @example
     * // Get one Cats
     * const cats = await prisma.cats.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends catsFindFirstOrThrowArgs>(args?: SelectSubset<T, catsFindFirstOrThrowArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cats
     * const cats = await prisma.cats.findMany()
     * 
     * // Get first 10 Cats
     * const cats = await prisma.cats.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const catsWithIdOnly = await prisma.cats.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends catsFindManyArgs>(args?: SelectSubset<T, catsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cats.
     * @param {catsCreateArgs} args - Arguments to create a Cats.
     * @example
     * // Create one Cats
     * const Cats = await prisma.cats.create({
     *   data: {
     *     // ... data to create a Cats
     *   }
     * })
     * 
     */
    create<T extends catsCreateArgs>(args: SelectSubset<T, catsCreateArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cats.
     * @param {catsCreateManyArgs} args - Arguments to create many Cats.
     * @example
     * // Create many Cats
     * const cats = await prisma.cats.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends catsCreateManyArgs>(args?: SelectSubset<T, catsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cats and returns the data saved in the database.
     * @param {catsCreateManyAndReturnArgs} args - Arguments to create many Cats.
     * @example
     * // Create many Cats
     * const cats = await prisma.cats.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cats and only return the `id`
     * const catsWithIdOnly = await prisma.cats.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends catsCreateManyAndReturnArgs>(args?: SelectSubset<T, catsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cats.
     * @param {catsDeleteArgs} args - Arguments to delete one Cats.
     * @example
     * // Delete one Cats
     * const Cats = await prisma.cats.delete({
     *   where: {
     *     // ... filter to delete one Cats
     *   }
     * })
     * 
     */
    delete<T extends catsDeleteArgs>(args: SelectSubset<T, catsDeleteArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cats.
     * @param {catsUpdateArgs} args - Arguments to update one Cats.
     * @example
     * // Update one Cats
     * const cats = await prisma.cats.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends catsUpdateArgs>(args: SelectSubset<T, catsUpdateArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cats.
     * @param {catsDeleteManyArgs} args - Arguments to filter Cats to delete.
     * @example
     * // Delete a few Cats
     * const { count } = await prisma.cats.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends catsDeleteManyArgs>(args?: SelectSubset<T, catsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cats
     * const cats = await prisma.cats.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends catsUpdateManyArgs>(args: SelectSubset<T, catsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cats and returns the data updated in the database.
     * @param {catsUpdateManyAndReturnArgs} args - Arguments to update many Cats.
     * @example
     * // Update many Cats
     * const cats = await prisma.cats.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cats and only return the `id`
     * const catsWithIdOnly = await prisma.cats.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends catsUpdateManyAndReturnArgs>(args: SelectSubset<T, catsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cats.
     * @param {catsUpsertArgs} args - Arguments to update or create a Cats.
     * @example
     * // Update or create a Cats
     * const cats = await prisma.cats.upsert({
     *   create: {
     *     // ... data to create a Cats
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cats we want to update
     *   }
     * })
     */
    upsert<T extends catsUpsertArgs>(args: SelectSubset<T, catsUpsertArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catsCountArgs} args - Arguments to filter Cats to count.
     * @example
     * // Count the number of Cats
     * const count = await prisma.cats.count({
     *   where: {
     *     // ... the filter for the Cats we want to count
     *   }
     * })
    **/
    count<T extends catsCountArgs>(
      args?: Subset<T, catsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatsAggregateArgs>(args: Subset<T, CatsAggregateArgs>): Prisma.PrismaPromise<GetCatsAggregateType<T>>

    /**
     * Group by Cats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends catsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: catsGroupByArgs['orderBy'] }
        : { orderBy?: catsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, catsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cats model
   */
  readonly fields: catsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cats.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__catsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    household<T extends householdsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, householdsDefaultArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    owner<T extends profilesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, profilesDefaultArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    feeding_logs<T extends cats$feeding_logsArgs<ExtArgs> = {}>(args?: Subset<T, cats$feeding_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    schedules<T extends cats$schedulesArgs<ExtArgs> = {}>(args?: Subset<T, cats$schedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    weight_logs<T extends cats$weight_logsArgs<ExtArgs> = {}>(args?: Subset<T, cats$weight_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    weight_goals<T extends cats$weight_goalsArgs<ExtArgs> = {}>(args?: Subset<T, cats$weight_goalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cats model
   */
  interface catsFieldRefs {
    readonly id: FieldRef<"cats", 'String'>
    readonly created_at: FieldRef<"cats", 'DateTime'>
    readonly updated_at: FieldRef<"cats", 'DateTime'>
    readonly name: FieldRef<"cats", 'String'>
    readonly birth_date: FieldRef<"cats", 'DateTime'>
    readonly weight: FieldRef<"cats", 'Decimal'>
    readonly household_id: FieldRef<"cats", 'String'>
    readonly owner_id: FieldRef<"cats", 'String'>
    readonly portion_size: FieldRef<"cats", 'Decimal'>
    readonly portion_unit: FieldRef<"cats", 'String'>
    readonly photo_url: FieldRef<"cats", 'String'>
    readonly restrictions: FieldRef<"cats", 'String'>
    readonly notes: FieldRef<"cats", 'String'>
    readonly feeding_interval: FieldRef<"cats", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * cats findUnique
   */
  export type catsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * Filter, which cats to fetch.
     */
    where: catsWhereUniqueInput
  }

  /**
   * cats findUniqueOrThrow
   */
  export type catsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * Filter, which cats to fetch.
     */
    where: catsWhereUniqueInput
  }

  /**
   * cats findFirst
   */
  export type catsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * Filter, which cats to fetch.
     */
    where?: catsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cats to fetch.
     */
    orderBy?: catsOrderByWithRelationInput | catsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cats.
     */
    cursor?: catsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cats.
     */
    distinct?: CatsScalarFieldEnum | CatsScalarFieldEnum[]
  }

  /**
   * cats findFirstOrThrow
   */
  export type catsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * Filter, which cats to fetch.
     */
    where?: catsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cats to fetch.
     */
    orderBy?: catsOrderByWithRelationInput | catsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cats.
     */
    cursor?: catsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cats.
     */
    distinct?: CatsScalarFieldEnum | CatsScalarFieldEnum[]
  }

  /**
   * cats findMany
   */
  export type catsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * Filter, which cats to fetch.
     */
    where?: catsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cats to fetch.
     */
    orderBy?: catsOrderByWithRelationInput | catsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cats.
     */
    cursor?: catsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cats.
     */
    skip?: number
    distinct?: CatsScalarFieldEnum | CatsScalarFieldEnum[]
  }

  /**
   * cats create
   */
  export type catsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * The data needed to create a cats.
     */
    data: XOR<catsCreateInput, catsUncheckedCreateInput>
  }

  /**
   * cats createMany
   */
  export type catsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cats.
     */
    data: catsCreateManyInput | catsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cats createManyAndReturn
   */
  export type catsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * The data used to create many cats.
     */
    data: catsCreateManyInput | catsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cats update
   */
  export type catsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * The data needed to update a cats.
     */
    data: XOR<catsUpdateInput, catsUncheckedUpdateInput>
    /**
     * Choose, which cats to update.
     */
    where: catsWhereUniqueInput
  }

  /**
   * cats updateMany
   */
  export type catsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cats.
     */
    data: XOR<catsUpdateManyMutationInput, catsUncheckedUpdateManyInput>
    /**
     * Filter which cats to update
     */
    where?: catsWhereInput
    /**
     * Limit how many cats to update.
     */
    limit?: number
  }

  /**
   * cats updateManyAndReturn
   */
  export type catsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * The data used to update cats.
     */
    data: XOR<catsUpdateManyMutationInput, catsUncheckedUpdateManyInput>
    /**
     * Filter which cats to update
     */
    where?: catsWhereInput
    /**
     * Limit how many cats to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cats upsert
   */
  export type catsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * The filter to search for the cats to update in case it exists.
     */
    where: catsWhereUniqueInput
    /**
     * In case the cats found by the `where` argument doesn't exist, create a new cats with this data.
     */
    create: XOR<catsCreateInput, catsUncheckedCreateInput>
    /**
     * In case the cats was found with the provided `where` argument, update it with this data.
     */
    update: XOR<catsUpdateInput, catsUncheckedUpdateInput>
  }

  /**
   * cats delete
   */
  export type catsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    /**
     * Filter which cats to delete.
     */
    where: catsWhereUniqueInput
  }

  /**
   * cats deleteMany
   */
  export type catsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cats to delete
     */
    where?: catsWhereInput
    /**
     * Limit how many cats to delete.
     */
    limit?: number
  }

  /**
   * cats.feeding_logs
   */
  export type cats$feeding_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    where?: feeding_logsWhereInput
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    cursor?: feeding_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Feeding_logsScalarFieldEnum | Feeding_logsScalarFieldEnum[]
  }

  /**
   * cats.schedules
   */
  export type cats$schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    where?: schedulesWhereInput
    orderBy?: schedulesOrderByWithRelationInput | schedulesOrderByWithRelationInput[]
    cursor?: schedulesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SchedulesScalarFieldEnum | SchedulesScalarFieldEnum[]
  }

  /**
   * cats.weight_logs
   */
  export type cats$weight_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    where?: cat_weight_logsWhereInput
    orderBy?: cat_weight_logsOrderByWithRelationInput | cat_weight_logsOrderByWithRelationInput[]
    cursor?: cat_weight_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cat_weight_logsScalarFieldEnum | Cat_weight_logsScalarFieldEnum[]
  }

  /**
   * cats.weight_goals
   */
  export type cats$weight_goalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    where?: weight_goalsWhereInput
    orderBy?: weight_goalsOrderByWithRelationInput | weight_goalsOrderByWithRelationInput[]
    cursor?: weight_goalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Weight_goalsScalarFieldEnum | Weight_goalsScalarFieldEnum[]
  }

  /**
   * cats without action
   */
  export type catsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
  }


  /**
   * Model household_members
   */

  export type AggregateHousehold_members = {
    _count: Household_membersCountAggregateOutputType | null
    _min: Household_membersMinAggregateOutputType | null
    _max: Household_membersMaxAggregateOutputType | null
  }

  export type Household_membersMinAggregateOutputType = {
    id: string | null
    household_id: string | null
    user_id: string | null
    role: string | null
    created_at: Date | null
  }

  export type Household_membersMaxAggregateOutputType = {
    id: string | null
    household_id: string | null
    user_id: string | null
    role: string | null
    created_at: Date | null
  }

  export type Household_membersCountAggregateOutputType = {
    id: number
    household_id: number
    user_id: number
    role: number
    created_at: number
    _all: number
  }


  export type Household_membersMinAggregateInputType = {
    id?: true
    household_id?: true
    user_id?: true
    role?: true
    created_at?: true
  }

  export type Household_membersMaxAggregateInputType = {
    id?: true
    household_id?: true
    user_id?: true
    role?: true
    created_at?: true
  }

  export type Household_membersCountAggregateInputType = {
    id?: true
    household_id?: true
    user_id?: true
    role?: true
    created_at?: true
    _all?: true
  }

  export type Household_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which household_members to aggregate.
     */
    where?: household_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of household_members to fetch.
     */
    orderBy?: household_membersOrderByWithRelationInput | household_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: household_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` household_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` household_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned household_members
    **/
    _count?: true | Household_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Household_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Household_membersMaxAggregateInputType
  }

  export type GetHousehold_membersAggregateType<T extends Household_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateHousehold_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHousehold_members[P]>
      : GetScalarType<T[P], AggregateHousehold_members[P]>
  }




  export type household_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: household_membersWhereInput
    orderBy?: household_membersOrderByWithAggregationInput | household_membersOrderByWithAggregationInput[]
    by: Household_membersScalarFieldEnum[] | Household_membersScalarFieldEnum
    having?: household_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Household_membersCountAggregateInputType | true
    _min?: Household_membersMinAggregateInputType
    _max?: Household_membersMaxAggregateInputType
  }

  export type Household_membersGroupByOutputType = {
    id: string
    household_id: string
    user_id: string
    role: string
    created_at: Date
    _count: Household_membersCountAggregateOutputType | null
    _min: Household_membersMinAggregateOutputType | null
    _max: Household_membersMaxAggregateOutputType | null
  }

  type GetHousehold_membersGroupByPayload<T extends household_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Household_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Household_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Household_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Household_membersGroupByOutputType[P]>
        }
      >
    >


  export type household_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    household_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    household?: boolean | householdsDefaultArgs<ExtArgs>
    user?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["household_members"]>

  export type household_membersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    household_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    household?: boolean | householdsDefaultArgs<ExtArgs>
    user?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["household_members"]>

  export type household_membersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    household_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    household?: boolean | householdsDefaultArgs<ExtArgs>
    user?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["household_members"]>

  export type household_membersSelectScalar = {
    id?: boolean
    household_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
  }

  export type household_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "household_id" | "user_id" | "role" | "created_at", ExtArgs["result"]["household_members"]>
  export type household_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    household?: boolean | householdsDefaultArgs<ExtArgs>
    user?: boolean | profilesDefaultArgs<ExtArgs>
  }
  export type household_membersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    household?: boolean | householdsDefaultArgs<ExtArgs>
    user?: boolean | profilesDefaultArgs<ExtArgs>
  }
  export type household_membersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    household?: boolean | householdsDefaultArgs<ExtArgs>
    user?: boolean | profilesDefaultArgs<ExtArgs>
  }

  export type $household_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "household_members"
    objects: {
      household: Prisma.$householdsPayload<ExtArgs>
      user: Prisma.$profilesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      household_id: string
      user_id: string
      role: string
      created_at: Date
    }, ExtArgs["result"]["household_members"]>
    composites: {}
  }

  type household_membersGetPayload<S extends boolean | null | undefined | household_membersDefaultArgs> = $Result.GetResult<Prisma.$household_membersPayload, S>

  type household_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<household_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Household_membersCountAggregateInputType | true
    }

  export interface household_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['household_members'], meta: { name: 'household_members' } }
    /**
     * Find zero or one Household_members that matches the filter.
     * @param {household_membersFindUniqueArgs} args - Arguments to find a Household_members
     * @example
     * // Get one Household_members
     * const household_members = await prisma.household_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends household_membersFindUniqueArgs>(args: SelectSubset<T, household_membersFindUniqueArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Household_members that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {household_membersFindUniqueOrThrowArgs} args - Arguments to find a Household_members
     * @example
     * // Get one Household_members
     * const household_members = await prisma.household_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends household_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, household_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Household_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {household_membersFindFirstArgs} args - Arguments to find a Household_members
     * @example
     * // Get one Household_members
     * const household_members = await prisma.household_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends household_membersFindFirstArgs>(args?: SelectSubset<T, household_membersFindFirstArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Household_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {household_membersFindFirstOrThrowArgs} args - Arguments to find a Household_members
     * @example
     * // Get one Household_members
     * const household_members = await prisma.household_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends household_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, household_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Household_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {household_membersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Household_members
     * const household_members = await prisma.household_members.findMany()
     * 
     * // Get first 10 Household_members
     * const household_members = await prisma.household_members.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const household_membersWithIdOnly = await prisma.household_members.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends household_membersFindManyArgs>(args?: SelectSubset<T, household_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Household_members.
     * @param {household_membersCreateArgs} args - Arguments to create a Household_members.
     * @example
     * // Create one Household_members
     * const Household_members = await prisma.household_members.create({
     *   data: {
     *     // ... data to create a Household_members
     *   }
     * })
     * 
     */
    create<T extends household_membersCreateArgs>(args: SelectSubset<T, household_membersCreateArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Household_members.
     * @param {household_membersCreateManyArgs} args - Arguments to create many Household_members.
     * @example
     * // Create many Household_members
     * const household_members = await prisma.household_members.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends household_membersCreateManyArgs>(args?: SelectSubset<T, household_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Household_members and returns the data saved in the database.
     * @param {household_membersCreateManyAndReturnArgs} args - Arguments to create many Household_members.
     * @example
     * // Create many Household_members
     * const household_members = await prisma.household_members.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Household_members and only return the `id`
     * const household_membersWithIdOnly = await prisma.household_members.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends household_membersCreateManyAndReturnArgs>(args?: SelectSubset<T, household_membersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Household_members.
     * @param {household_membersDeleteArgs} args - Arguments to delete one Household_members.
     * @example
     * // Delete one Household_members
     * const Household_members = await prisma.household_members.delete({
     *   where: {
     *     // ... filter to delete one Household_members
     *   }
     * })
     * 
     */
    delete<T extends household_membersDeleteArgs>(args: SelectSubset<T, household_membersDeleteArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Household_members.
     * @param {household_membersUpdateArgs} args - Arguments to update one Household_members.
     * @example
     * // Update one Household_members
     * const household_members = await prisma.household_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends household_membersUpdateArgs>(args: SelectSubset<T, household_membersUpdateArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Household_members.
     * @param {household_membersDeleteManyArgs} args - Arguments to filter Household_members to delete.
     * @example
     * // Delete a few Household_members
     * const { count } = await prisma.household_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends household_membersDeleteManyArgs>(args?: SelectSubset<T, household_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Household_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {household_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Household_members
     * const household_members = await prisma.household_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends household_membersUpdateManyArgs>(args: SelectSubset<T, household_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Household_members and returns the data updated in the database.
     * @param {household_membersUpdateManyAndReturnArgs} args - Arguments to update many Household_members.
     * @example
     * // Update many Household_members
     * const household_members = await prisma.household_members.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Household_members and only return the `id`
     * const household_membersWithIdOnly = await prisma.household_members.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends household_membersUpdateManyAndReturnArgs>(args: SelectSubset<T, household_membersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Household_members.
     * @param {household_membersUpsertArgs} args - Arguments to update or create a Household_members.
     * @example
     * // Update or create a Household_members
     * const household_members = await prisma.household_members.upsert({
     *   create: {
     *     // ... data to create a Household_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Household_members we want to update
     *   }
     * })
     */
    upsert<T extends household_membersUpsertArgs>(args: SelectSubset<T, household_membersUpsertArgs<ExtArgs>>): Prisma__household_membersClient<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Household_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {household_membersCountArgs} args - Arguments to filter Household_members to count.
     * @example
     * // Count the number of Household_members
     * const count = await prisma.household_members.count({
     *   where: {
     *     // ... the filter for the Household_members we want to count
     *   }
     * })
    **/
    count<T extends household_membersCountArgs>(
      args?: Subset<T, household_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Household_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Household_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Household_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Household_membersAggregateArgs>(args: Subset<T, Household_membersAggregateArgs>): Prisma.PrismaPromise<GetHousehold_membersAggregateType<T>>

    /**
     * Group by Household_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {household_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends household_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: household_membersGroupByArgs['orderBy'] }
        : { orderBy?: household_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, household_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHousehold_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the household_members model
   */
  readonly fields: household_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for household_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__household_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    household<T extends householdsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, householdsDefaultArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends profilesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, profilesDefaultArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the household_members model
   */
  interface household_membersFieldRefs {
    readonly id: FieldRef<"household_members", 'String'>
    readonly household_id: FieldRef<"household_members", 'String'>
    readonly user_id: FieldRef<"household_members", 'String'>
    readonly role: FieldRef<"household_members", 'String'>
    readonly created_at: FieldRef<"household_members", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * household_members findUnique
   */
  export type household_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * Filter, which household_members to fetch.
     */
    where: household_membersWhereUniqueInput
  }

  /**
   * household_members findUniqueOrThrow
   */
  export type household_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * Filter, which household_members to fetch.
     */
    where: household_membersWhereUniqueInput
  }

  /**
   * household_members findFirst
   */
  export type household_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * Filter, which household_members to fetch.
     */
    where?: household_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of household_members to fetch.
     */
    orderBy?: household_membersOrderByWithRelationInput | household_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for household_members.
     */
    cursor?: household_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` household_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` household_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of household_members.
     */
    distinct?: Household_membersScalarFieldEnum | Household_membersScalarFieldEnum[]
  }

  /**
   * household_members findFirstOrThrow
   */
  export type household_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * Filter, which household_members to fetch.
     */
    where?: household_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of household_members to fetch.
     */
    orderBy?: household_membersOrderByWithRelationInput | household_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for household_members.
     */
    cursor?: household_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` household_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` household_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of household_members.
     */
    distinct?: Household_membersScalarFieldEnum | Household_membersScalarFieldEnum[]
  }

  /**
   * household_members findMany
   */
  export type household_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * Filter, which household_members to fetch.
     */
    where?: household_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of household_members to fetch.
     */
    orderBy?: household_membersOrderByWithRelationInput | household_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing household_members.
     */
    cursor?: household_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` household_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` household_members.
     */
    skip?: number
    distinct?: Household_membersScalarFieldEnum | Household_membersScalarFieldEnum[]
  }

  /**
   * household_members create
   */
  export type household_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a household_members.
     */
    data: XOR<household_membersCreateInput, household_membersUncheckedCreateInput>
  }

  /**
   * household_members createMany
   */
  export type household_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many household_members.
     */
    data: household_membersCreateManyInput | household_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * household_members createManyAndReturn
   */
  export type household_membersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * The data used to create many household_members.
     */
    data: household_membersCreateManyInput | household_membersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * household_members update
   */
  export type household_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a household_members.
     */
    data: XOR<household_membersUpdateInput, household_membersUncheckedUpdateInput>
    /**
     * Choose, which household_members to update.
     */
    where: household_membersWhereUniqueInput
  }

  /**
   * household_members updateMany
   */
  export type household_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update household_members.
     */
    data: XOR<household_membersUpdateManyMutationInput, household_membersUncheckedUpdateManyInput>
    /**
     * Filter which household_members to update
     */
    where?: household_membersWhereInput
    /**
     * Limit how many household_members to update.
     */
    limit?: number
  }

  /**
   * household_members updateManyAndReturn
   */
  export type household_membersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * The data used to update household_members.
     */
    data: XOR<household_membersUpdateManyMutationInput, household_membersUncheckedUpdateManyInput>
    /**
     * Filter which household_members to update
     */
    where?: household_membersWhereInput
    /**
     * Limit how many household_members to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * household_members upsert
   */
  export type household_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the household_members to update in case it exists.
     */
    where: household_membersWhereUniqueInput
    /**
     * In case the household_members found by the `where` argument doesn't exist, create a new household_members with this data.
     */
    create: XOR<household_membersCreateInput, household_membersUncheckedCreateInput>
    /**
     * In case the household_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<household_membersUpdateInput, household_membersUncheckedUpdateInput>
  }

  /**
   * household_members delete
   */
  export type household_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    /**
     * Filter which household_members to delete.
     */
    where: household_membersWhereUniqueInput
  }

  /**
   * household_members deleteMany
   */
  export type household_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which household_members to delete
     */
    where?: household_membersWhereInput
    /**
     * Limit how many household_members to delete.
     */
    limit?: number
  }

  /**
   * household_members without action
   */
  export type household_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
  }


  /**
   * Model households
   */

  export type AggregateHouseholds = {
    _count: HouseholdsCountAggregateOutputType | null
    _min: HouseholdsMinAggregateOutputType | null
    _max: HouseholdsMaxAggregateOutputType | null
  }

  export type HouseholdsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    name: string | null
    description: string | null
    owner_id: string | null
    inviteCode: string | null
  }

  export type HouseholdsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    name: string | null
    description: string | null
    owner_id: string | null
    inviteCode: string | null
  }

  export type HouseholdsCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    name: number
    description: number
    owner_id: number
    inviteCode: number
    _all: number
  }


  export type HouseholdsMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    name?: true
    description?: true
    owner_id?: true
    inviteCode?: true
  }

  export type HouseholdsMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    name?: true
    description?: true
    owner_id?: true
    inviteCode?: true
  }

  export type HouseholdsCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    name?: true
    description?: true
    owner_id?: true
    inviteCode?: true
    _all?: true
  }

  export type HouseholdsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which households to aggregate.
     */
    where?: householdsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of households to fetch.
     */
    orderBy?: householdsOrderByWithRelationInput | householdsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: householdsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` households from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` households.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned households
    **/
    _count?: true | HouseholdsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HouseholdsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HouseholdsMaxAggregateInputType
  }

  export type GetHouseholdsAggregateType<T extends HouseholdsAggregateArgs> = {
        [P in keyof T & keyof AggregateHouseholds]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHouseholds[P]>
      : GetScalarType<T[P], AggregateHouseholds[P]>
  }




  export type householdsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: householdsWhereInput
    orderBy?: householdsOrderByWithAggregationInput | householdsOrderByWithAggregationInput[]
    by: HouseholdsScalarFieldEnum[] | HouseholdsScalarFieldEnum
    having?: householdsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HouseholdsCountAggregateInputType | true
    _min?: HouseholdsMinAggregateInputType
    _max?: HouseholdsMaxAggregateInputType
  }

  export type HouseholdsGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    name: string
    description: string | null
    owner_id: string
    inviteCode: string | null
    _count: HouseholdsCountAggregateOutputType | null
    _min: HouseholdsMinAggregateOutputType | null
    _max: HouseholdsMaxAggregateOutputType | null
  }

  type GetHouseholdsGroupByPayload<T extends householdsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HouseholdsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HouseholdsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HouseholdsGroupByOutputType[P]>
            : GetScalarType<T[P], HouseholdsGroupByOutputType[P]>
        }
      >
    >


  export type householdsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    description?: boolean
    owner_id?: boolean
    inviteCode?: boolean
    cats?: boolean | households$catsArgs<ExtArgs>
    feeding_logs?: boolean | households$feeding_logsArgs<ExtArgs>
    household_members?: boolean | households$household_membersArgs<ExtArgs>
    _count?: boolean | HouseholdsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["households"]>

  export type householdsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    description?: boolean
    owner_id?: boolean
    inviteCode?: boolean
  }, ExtArgs["result"]["households"]>

  export type householdsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    description?: boolean
    owner_id?: boolean
    inviteCode?: boolean
  }, ExtArgs["result"]["households"]>

  export type householdsSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    name?: boolean
    description?: boolean
    owner_id?: boolean
    inviteCode?: boolean
  }

  export type householdsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "name" | "description" | "owner_id" | "inviteCode", ExtArgs["result"]["households"]>
  export type householdsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cats?: boolean | households$catsArgs<ExtArgs>
    feeding_logs?: boolean | households$feeding_logsArgs<ExtArgs>
    household_members?: boolean | households$household_membersArgs<ExtArgs>
    _count?: boolean | HouseholdsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type householdsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type householdsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $householdsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "households"
    objects: {
      cats: Prisma.$catsPayload<ExtArgs>[]
      feeding_logs: Prisma.$feeding_logsPayload<ExtArgs>[]
      household_members: Prisma.$household_membersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      name: string
      description: string | null
      owner_id: string
      inviteCode: string | null
    }, ExtArgs["result"]["households"]>
    composites: {}
  }

  type householdsGetPayload<S extends boolean | null | undefined | householdsDefaultArgs> = $Result.GetResult<Prisma.$householdsPayload, S>

  type householdsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<householdsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HouseholdsCountAggregateInputType | true
    }

  export interface householdsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['households'], meta: { name: 'households' } }
    /**
     * Find zero or one Households that matches the filter.
     * @param {householdsFindUniqueArgs} args - Arguments to find a Households
     * @example
     * // Get one Households
     * const households = await prisma.households.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends householdsFindUniqueArgs>(args: SelectSubset<T, householdsFindUniqueArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Households that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {householdsFindUniqueOrThrowArgs} args - Arguments to find a Households
     * @example
     * // Get one Households
     * const households = await prisma.households.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends householdsFindUniqueOrThrowArgs>(args: SelectSubset<T, householdsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Households that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {householdsFindFirstArgs} args - Arguments to find a Households
     * @example
     * // Get one Households
     * const households = await prisma.households.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends householdsFindFirstArgs>(args?: SelectSubset<T, householdsFindFirstArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Households that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {householdsFindFirstOrThrowArgs} args - Arguments to find a Households
     * @example
     * // Get one Households
     * const households = await prisma.households.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends householdsFindFirstOrThrowArgs>(args?: SelectSubset<T, householdsFindFirstOrThrowArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Households that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {householdsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Households
     * const households = await prisma.households.findMany()
     * 
     * // Get first 10 Households
     * const households = await prisma.households.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const householdsWithIdOnly = await prisma.households.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends householdsFindManyArgs>(args?: SelectSubset<T, householdsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Households.
     * @param {householdsCreateArgs} args - Arguments to create a Households.
     * @example
     * // Create one Households
     * const Households = await prisma.households.create({
     *   data: {
     *     // ... data to create a Households
     *   }
     * })
     * 
     */
    create<T extends householdsCreateArgs>(args: SelectSubset<T, householdsCreateArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Households.
     * @param {householdsCreateManyArgs} args - Arguments to create many Households.
     * @example
     * // Create many Households
     * const households = await prisma.households.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends householdsCreateManyArgs>(args?: SelectSubset<T, householdsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Households and returns the data saved in the database.
     * @param {householdsCreateManyAndReturnArgs} args - Arguments to create many Households.
     * @example
     * // Create many Households
     * const households = await prisma.households.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Households and only return the `id`
     * const householdsWithIdOnly = await prisma.households.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends householdsCreateManyAndReturnArgs>(args?: SelectSubset<T, householdsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Households.
     * @param {householdsDeleteArgs} args - Arguments to delete one Households.
     * @example
     * // Delete one Households
     * const Households = await prisma.households.delete({
     *   where: {
     *     // ... filter to delete one Households
     *   }
     * })
     * 
     */
    delete<T extends householdsDeleteArgs>(args: SelectSubset<T, householdsDeleteArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Households.
     * @param {householdsUpdateArgs} args - Arguments to update one Households.
     * @example
     * // Update one Households
     * const households = await prisma.households.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends householdsUpdateArgs>(args: SelectSubset<T, householdsUpdateArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Households.
     * @param {householdsDeleteManyArgs} args - Arguments to filter Households to delete.
     * @example
     * // Delete a few Households
     * const { count } = await prisma.households.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends householdsDeleteManyArgs>(args?: SelectSubset<T, householdsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Households.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {householdsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Households
     * const households = await prisma.households.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends householdsUpdateManyArgs>(args: SelectSubset<T, householdsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Households and returns the data updated in the database.
     * @param {householdsUpdateManyAndReturnArgs} args - Arguments to update many Households.
     * @example
     * // Update many Households
     * const households = await prisma.households.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Households and only return the `id`
     * const householdsWithIdOnly = await prisma.households.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends householdsUpdateManyAndReturnArgs>(args: SelectSubset<T, householdsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Households.
     * @param {householdsUpsertArgs} args - Arguments to update or create a Households.
     * @example
     * // Update or create a Households
     * const households = await prisma.households.upsert({
     *   create: {
     *     // ... data to create a Households
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Households we want to update
     *   }
     * })
     */
    upsert<T extends householdsUpsertArgs>(args: SelectSubset<T, householdsUpsertArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Households.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {householdsCountArgs} args - Arguments to filter Households to count.
     * @example
     * // Count the number of Households
     * const count = await prisma.households.count({
     *   where: {
     *     // ... the filter for the Households we want to count
     *   }
     * })
    **/
    count<T extends householdsCountArgs>(
      args?: Subset<T, householdsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HouseholdsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Households.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HouseholdsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HouseholdsAggregateArgs>(args: Subset<T, HouseholdsAggregateArgs>): Prisma.PrismaPromise<GetHouseholdsAggregateType<T>>

    /**
     * Group by Households.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {householdsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends householdsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: householdsGroupByArgs['orderBy'] }
        : { orderBy?: householdsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, householdsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHouseholdsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the households model
   */
  readonly fields: householdsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for households.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__householdsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cats<T extends households$catsArgs<ExtArgs> = {}>(args?: Subset<T, households$catsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    feeding_logs<T extends households$feeding_logsArgs<ExtArgs> = {}>(args?: Subset<T, households$feeding_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    household_members<T extends households$household_membersArgs<ExtArgs> = {}>(args?: Subset<T, households$household_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the households model
   */
  interface householdsFieldRefs {
    readonly id: FieldRef<"households", 'String'>
    readonly created_at: FieldRef<"households", 'DateTime'>
    readonly updated_at: FieldRef<"households", 'DateTime'>
    readonly name: FieldRef<"households", 'String'>
    readonly description: FieldRef<"households", 'String'>
    readonly owner_id: FieldRef<"households", 'String'>
    readonly inviteCode: FieldRef<"households", 'String'>
  }
    

  // Custom InputTypes
  /**
   * households findUnique
   */
  export type householdsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * Filter, which households to fetch.
     */
    where: householdsWhereUniqueInput
  }

  /**
   * households findUniqueOrThrow
   */
  export type householdsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * Filter, which households to fetch.
     */
    where: householdsWhereUniqueInput
  }

  /**
   * households findFirst
   */
  export type householdsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * Filter, which households to fetch.
     */
    where?: householdsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of households to fetch.
     */
    orderBy?: householdsOrderByWithRelationInput | householdsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for households.
     */
    cursor?: householdsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` households from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` households.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of households.
     */
    distinct?: HouseholdsScalarFieldEnum | HouseholdsScalarFieldEnum[]
  }

  /**
   * households findFirstOrThrow
   */
  export type householdsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * Filter, which households to fetch.
     */
    where?: householdsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of households to fetch.
     */
    orderBy?: householdsOrderByWithRelationInput | householdsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for households.
     */
    cursor?: householdsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` households from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` households.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of households.
     */
    distinct?: HouseholdsScalarFieldEnum | HouseholdsScalarFieldEnum[]
  }

  /**
   * households findMany
   */
  export type householdsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * Filter, which households to fetch.
     */
    where?: householdsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of households to fetch.
     */
    orderBy?: householdsOrderByWithRelationInput | householdsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing households.
     */
    cursor?: householdsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` households from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` households.
     */
    skip?: number
    distinct?: HouseholdsScalarFieldEnum | HouseholdsScalarFieldEnum[]
  }

  /**
   * households create
   */
  export type householdsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * The data needed to create a households.
     */
    data: XOR<householdsCreateInput, householdsUncheckedCreateInput>
  }

  /**
   * households createMany
   */
  export type householdsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many households.
     */
    data: householdsCreateManyInput | householdsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * households createManyAndReturn
   */
  export type householdsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * The data used to create many households.
     */
    data: householdsCreateManyInput | householdsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * households update
   */
  export type householdsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * The data needed to update a households.
     */
    data: XOR<householdsUpdateInput, householdsUncheckedUpdateInput>
    /**
     * Choose, which households to update.
     */
    where: householdsWhereUniqueInput
  }

  /**
   * households updateMany
   */
  export type householdsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update households.
     */
    data: XOR<householdsUpdateManyMutationInput, householdsUncheckedUpdateManyInput>
    /**
     * Filter which households to update
     */
    where?: householdsWhereInput
    /**
     * Limit how many households to update.
     */
    limit?: number
  }

  /**
   * households updateManyAndReturn
   */
  export type householdsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * The data used to update households.
     */
    data: XOR<householdsUpdateManyMutationInput, householdsUncheckedUpdateManyInput>
    /**
     * Filter which households to update
     */
    where?: householdsWhereInput
    /**
     * Limit how many households to update.
     */
    limit?: number
  }

  /**
   * households upsert
   */
  export type householdsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * The filter to search for the households to update in case it exists.
     */
    where: householdsWhereUniqueInput
    /**
     * In case the households found by the `where` argument doesn't exist, create a new households with this data.
     */
    create: XOR<householdsCreateInput, householdsUncheckedCreateInput>
    /**
     * In case the households was found with the provided `where` argument, update it with this data.
     */
    update: XOR<householdsUpdateInput, householdsUncheckedUpdateInput>
  }

  /**
   * households delete
   */
  export type householdsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
    /**
     * Filter which households to delete.
     */
    where: householdsWhereUniqueInput
  }

  /**
   * households deleteMany
   */
  export type householdsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which households to delete
     */
    where?: householdsWhereInput
    /**
     * Limit how many households to delete.
     */
    limit?: number
  }

  /**
   * households.cats
   */
  export type households$catsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    where?: catsWhereInput
    orderBy?: catsOrderByWithRelationInput | catsOrderByWithRelationInput[]
    cursor?: catsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatsScalarFieldEnum | CatsScalarFieldEnum[]
  }

  /**
   * households.feeding_logs
   */
  export type households$feeding_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    where?: feeding_logsWhereInput
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    cursor?: feeding_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Feeding_logsScalarFieldEnum | Feeding_logsScalarFieldEnum[]
  }

  /**
   * households.household_members
   */
  export type households$household_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    where?: household_membersWhereInput
    orderBy?: household_membersOrderByWithRelationInput | household_membersOrderByWithRelationInput[]
    cursor?: household_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Household_membersScalarFieldEnum | Household_membersScalarFieldEnum[]
  }

  /**
   * households without action
   */
  export type householdsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the households
     */
    select?: householdsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the households
     */
    omit?: householdsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: householdsInclude<ExtArgs> | null
  }


  /**
   * Model profiles
   */

  export type AggregateProfiles = {
    _count: ProfilesCountAggregateOutputType | null
    _min: ProfilesMinAggregateOutputType | null
    _max: ProfilesMaxAggregateOutputType | null
  }

  export type ProfilesMinAggregateOutputType = {
    id: string | null
    updated_at: Date | null
    username: string | null
    full_name: string | null
    avatar_url: string | null
    email: string | null
    timezone: string | null
  }

  export type ProfilesMaxAggregateOutputType = {
    id: string | null
    updated_at: Date | null
    username: string | null
    full_name: string | null
    avatar_url: string | null
    email: string | null
    timezone: string | null
  }

  export type ProfilesCountAggregateOutputType = {
    id: number
    updated_at: number
    username: number
    full_name: number
    avatar_url: number
    email: number
    timezone: number
    _all: number
  }


  export type ProfilesMinAggregateInputType = {
    id?: true
    updated_at?: true
    username?: true
    full_name?: true
    avatar_url?: true
    email?: true
    timezone?: true
  }

  export type ProfilesMaxAggregateInputType = {
    id?: true
    updated_at?: true
    username?: true
    full_name?: true
    avatar_url?: true
    email?: true
    timezone?: true
  }

  export type ProfilesCountAggregateInputType = {
    id?: true
    updated_at?: true
    username?: true
    full_name?: true
    avatar_url?: true
    email?: true
    timezone?: true
    _all?: true
  }

  export type ProfilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profiles to aggregate.
     */
    where?: profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profilesOrderByWithRelationInput | profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned profiles
    **/
    _count?: true | ProfilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfilesMaxAggregateInputType
  }

  export type GetProfilesAggregateType<T extends ProfilesAggregateArgs> = {
        [P in keyof T & keyof AggregateProfiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfiles[P]>
      : GetScalarType<T[P], AggregateProfiles[P]>
  }




  export type profilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profilesWhereInput
    orderBy?: profilesOrderByWithAggregationInput | profilesOrderByWithAggregationInput[]
    by: ProfilesScalarFieldEnum[] | ProfilesScalarFieldEnum
    having?: profilesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfilesCountAggregateInputType | true
    _min?: ProfilesMinAggregateInputType
    _max?: ProfilesMaxAggregateInputType
  }

  export type ProfilesGroupByOutputType = {
    id: string
    updated_at: Date | null
    username: string | null
    full_name: string | null
    avatar_url: string | null
    email: string | null
    timezone: string | null
    _count: ProfilesCountAggregateOutputType | null
    _min: ProfilesMinAggregateOutputType | null
    _max: ProfilesMaxAggregateOutputType | null
  }

  type GetProfilesGroupByPayload<T extends profilesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfilesGroupByOutputType[P]>
            : GetScalarType<T[P], ProfilesGroupByOutputType[P]>
        }
      >
    >


  export type profilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    updated_at?: boolean
    username?: boolean
    full_name?: boolean
    avatar_url?: boolean
    email?: boolean
    timezone?: boolean
    owned_cats?: boolean | profiles$owned_catsArgs<ExtArgs>
    feeding_logs_fed?: boolean | profiles$feeding_logs_fedArgs<ExtArgs>
    household_members?: boolean | profiles$household_membersArgs<ExtArgs>
    weight_logs_measured?: boolean | profiles$weight_logs_measuredArgs<ExtArgs>
    created_weight_goals?: boolean | profiles$created_weight_goalsArgs<ExtArgs>
    _count?: boolean | ProfilesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profiles"]>

  export type profilesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    updated_at?: boolean
    username?: boolean
    full_name?: boolean
    avatar_url?: boolean
    email?: boolean
    timezone?: boolean
  }, ExtArgs["result"]["profiles"]>

  export type profilesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    updated_at?: boolean
    username?: boolean
    full_name?: boolean
    avatar_url?: boolean
    email?: boolean
    timezone?: boolean
  }, ExtArgs["result"]["profiles"]>

  export type profilesSelectScalar = {
    id?: boolean
    updated_at?: boolean
    username?: boolean
    full_name?: boolean
    avatar_url?: boolean
    email?: boolean
    timezone?: boolean
  }

  export type profilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "updated_at" | "username" | "full_name" | "avatar_url" | "email" | "timezone", ExtArgs["result"]["profiles"]>
  export type profilesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owned_cats?: boolean | profiles$owned_catsArgs<ExtArgs>
    feeding_logs_fed?: boolean | profiles$feeding_logs_fedArgs<ExtArgs>
    household_members?: boolean | profiles$household_membersArgs<ExtArgs>
    weight_logs_measured?: boolean | profiles$weight_logs_measuredArgs<ExtArgs>
    created_weight_goals?: boolean | profiles$created_weight_goalsArgs<ExtArgs>
    _count?: boolean | ProfilesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type profilesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type profilesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $profilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "profiles"
    objects: {
      owned_cats: Prisma.$catsPayload<ExtArgs>[]
      feeding_logs_fed: Prisma.$feeding_logsPayload<ExtArgs>[]
      household_members: Prisma.$household_membersPayload<ExtArgs>[]
      weight_logs_measured: Prisma.$cat_weight_logsPayload<ExtArgs>[]
      created_weight_goals: Prisma.$weight_goalsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      updated_at: Date | null
      username: string | null
      full_name: string | null
      avatar_url: string | null
      email: string | null
      timezone: string | null
    }, ExtArgs["result"]["profiles"]>
    composites: {}
  }

  type profilesGetPayload<S extends boolean | null | undefined | profilesDefaultArgs> = $Result.GetResult<Prisma.$profilesPayload, S>

  type profilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<profilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfilesCountAggregateInputType | true
    }

  export interface profilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['profiles'], meta: { name: 'profiles' } }
    /**
     * Find zero or one Profiles that matches the filter.
     * @param {profilesFindUniqueArgs} args - Arguments to find a Profiles
     * @example
     * // Get one Profiles
     * const profiles = await prisma.profiles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends profilesFindUniqueArgs>(args: SelectSubset<T, profilesFindUniqueArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profiles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {profilesFindUniqueOrThrowArgs} args - Arguments to find a Profiles
     * @example
     * // Get one Profiles
     * const profiles = await prisma.profiles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends profilesFindUniqueOrThrowArgs>(args: SelectSubset<T, profilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profilesFindFirstArgs} args - Arguments to find a Profiles
     * @example
     * // Get one Profiles
     * const profiles = await prisma.profiles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends profilesFindFirstArgs>(args?: SelectSubset<T, profilesFindFirstArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profiles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profilesFindFirstOrThrowArgs} args - Arguments to find a Profiles
     * @example
     * // Get one Profiles
     * const profiles = await prisma.profiles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends profilesFindFirstOrThrowArgs>(args?: SelectSubset<T, profilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profilesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profiles.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profiles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profilesWithIdOnly = await prisma.profiles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends profilesFindManyArgs>(args?: SelectSubset<T, profilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profiles.
     * @param {profilesCreateArgs} args - Arguments to create a Profiles.
     * @example
     * // Create one Profiles
     * const Profiles = await prisma.profiles.create({
     *   data: {
     *     // ... data to create a Profiles
     *   }
     * })
     * 
     */
    create<T extends profilesCreateArgs>(args: SelectSubset<T, profilesCreateArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {profilesCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profiles = await prisma.profiles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends profilesCreateManyArgs>(args?: SelectSubset<T, profilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {profilesCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profiles = await prisma.profiles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profilesWithIdOnly = await prisma.profiles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends profilesCreateManyAndReturnArgs>(args?: SelectSubset<T, profilesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Profiles.
     * @param {profilesDeleteArgs} args - Arguments to delete one Profiles.
     * @example
     * // Delete one Profiles
     * const Profiles = await prisma.profiles.delete({
     *   where: {
     *     // ... filter to delete one Profiles
     *   }
     * })
     * 
     */
    delete<T extends profilesDeleteArgs>(args: SelectSubset<T, profilesDeleteArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profiles.
     * @param {profilesUpdateArgs} args - Arguments to update one Profiles.
     * @example
     * // Update one Profiles
     * const profiles = await prisma.profiles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends profilesUpdateArgs>(args: SelectSubset<T, profilesUpdateArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {profilesDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profiles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends profilesDeleteManyArgs>(args?: SelectSubset<T, profilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profilesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profiles = await prisma.profiles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends profilesUpdateManyArgs>(args: SelectSubset<T, profilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles and returns the data updated in the database.
     * @param {profilesUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
     * @example
     * // Update many Profiles
     * const profiles = await prisma.profiles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Profiles and only return the `id`
     * const profilesWithIdOnly = await prisma.profiles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends profilesUpdateManyAndReturnArgs>(args: SelectSubset<T, profilesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Profiles.
     * @param {profilesUpsertArgs} args - Arguments to update or create a Profiles.
     * @example
     * // Update or create a Profiles
     * const profiles = await prisma.profiles.upsert({
     *   create: {
     *     // ... data to create a Profiles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profiles we want to update
     *   }
     * })
     */
    upsert<T extends profilesUpsertArgs>(args: SelectSubset<T, profilesUpsertArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profilesCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profiles.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends profilesCountArgs>(
      args?: Subset<T, profilesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfilesAggregateArgs>(args: Subset<T, ProfilesAggregateArgs>): Prisma.PrismaPromise<GetProfilesAggregateType<T>>

    /**
     * Group by Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profilesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends profilesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: profilesGroupByArgs['orderBy'] }
        : { orderBy?: profilesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, profilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the profiles model
   */
  readonly fields: profilesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for profiles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__profilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owned_cats<T extends profiles$owned_catsArgs<ExtArgs> = {}>(args?: Subset<T, profiles$owned_catsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    feeding_logs_fed<T extends profiles$feeding_logs_fedArgs<ExtArgs> = {}>(args?: Subset<T, profiles$feeding_logs_fedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    household_members<T extends profiles$household_membersArgs<ExtArgs> = {}>(args?: Subset<T, profiles$household_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$household_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    weight_logs_measured<T extends profiles$weight_logs_measuredArgs<ExtArgs> = {}>(args?: Subset<T, profiles$weight_logs_measuredArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    created_weight_goals<T extends profiles$created_weight_goalsArgs<ExtArgs> = {}>(args?: Subset<T, profiles$created_weight_goalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the profiles model
   */
  interface profilesFieldRefs {
    readonly id: FieldRef<"profiles", 'String'>
    readonly updated_at: FieldRef<"profiles", 'DateTime'>
    readonly username: FieldRef<"profiles", 'String'>
    readonly full_name: FieldRef<"profiles", 'String'>
    readonly avatar_url: FieldRef<"profiles", 'String'>
    readonly email: FieldRef<"profiles", 'String'>
    readonly timezone: FieldRef<"profiles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * profiles findUnique
   */
  export type profilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where: profilesWhereUniqueInput
  }

  /**
   * profiles findUniqueOrThrow
   */
  export type profilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where: profilesWhereUniqueInput
  }

  /**
   * profiles findFirst
   */
  export type profilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where?: profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profilesOrderByWithRelationInput | profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfilesScalarFieldEnum | ProfilesScalarFieldEnum[]
  }

  /**
   * profiles findFirstOrThrow
   */
  export type profilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where?: profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profilesOrderByWithRelationInput | profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfilesScalarFieldEnum | ProfilesScalarFieldEnum[]
  }

  /**
   * profiles findMany
   */
  export type profilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where?: profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profilesOrderByWithRelationInput | profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing profiles.
     */
    cursor?: profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    distinct?: ProfilesScalarFieldEnum | ProfilesScalarFieldEnum[]
  }

  /**
   * profiles create
   */
  export type profilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * The data needed to create a profiles.
     */
    data: XOR<profilesCreateInput, profilesUncheckedCreateInput>
  }

  /**
   * profiles createMany
   */
  export type profilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many profiles.
     */
    data: profilesCreateManyInput | profilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profiles createManyAndReturn
   */
  export type profilesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * The data used to create many profiles.
     */
    data: profilesCreateManyInput | profilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profiles update
   */
  export type profilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * The data needed to update a profiles.
     */
    data: XOR<profilesUpdateInput, profilesUncheckedUpdateInput>
    /**
     * Choose, which profiles to update.
     */
    where: profilesWhereUniqueInput
  }

  /**
   * profiles updateMany
   */
  export type profilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update profiles.
     */
    data: XOR<profilesUpdateManyMutationInput, profilesUncheckedUpdateManyInput>
    /**
     * Filter which profiles to update
     */
    where?: profilesWhereInput
    /**
     * Limit how many profiles to update.
     */
    limit?: number
  }

  /**
   * profiles updateManyAndReturn
   */
  export type profilesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * The data used to update profiles.
     */
    data: XOR<profilesUpdateManyMutationInput, profilesUncheckedUpdateManyInput>
    /**
     * Filter which profiles to update
     */
    where?: profilesWhereInput
    /**
     * Limit how many profiles to update.
     */
    limit?: number
  }

  /**
   * profiles upsert
   */
  export type profilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * The filter to search for the profiles to update in case it exists.
     */
    where: profilesWhereUniqueInput
    /**
     * In case the profiles found by the `where` argument doesn't exist, create a new profiles with this data.
     */
    create: XOR<profilesCreateInput, profilesUncheckedCreateInput>
    /**
     * In case the profiles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<profilesUpdateInput, profilesUncheckedUpdateInput>
  }

  /**
   * profiles delete
   */
  export type profilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    /**
     * Filter which profiles to delete.
     */
    where: profilesWhereUniqueInput
  }

  /**
   * profiles deleteMany
   */
  export type profilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profiles to delete
     */
    where?: profilesWhereInput
    /**
     * Limit how many profiles to delete.
     */
    limit?: number
  }

  /**
   * profiles.owned_cats
   */
  export type profiles$owned_catsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cats
     */
    select?: catsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cats
     */
    omit?: catsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: catsInclude<ExtArgs> | null
    where?: catsWhereInput
    orderBy?: catsOrderByWithRelationInput | catsOrderByWithRelationInput[]
    cursor?: catsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatsScalarFieldEnum | CatsScalarFieldEnum[]
  }

  /**
   * profiles.feeding_logs_fed
   */
  export type profiles$feeding_logs_fedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    where?: feeding_logsWhereInput
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    cursor?: feeding_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Feeding_logsScalarFieldEnum | Feeding_logsScalarFieldEnum[]
  }

  /**
   * profiles.household_members
   */
  export type profiles$household_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the household_members
     */
    select?: household_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the household_members
     */
    omit?: household_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: household_membersInclude<ExtArgs> | null
    where?: household_membersWhereInput
    orderBy?: household_membersOrderByWithRelationInput | household_membersOrderByWithRelationInput[]
    cursor?: household_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Household_membersScalarFieldEnum | Household_membersScalarFieldEnum[]
  }

  /**
   * profiles.weight_logs_measured
   */
  export type profiles$weight_logs_measuredArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    where?: cat_weight_logsWhereInput
    orderBy?: cat_weight_logsOrderByWithRelationInput | cat_weight_logsOrderByWithRelationInput[]
    cursor?: cat_weight_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cat_weight_logsScalarFieldEnum | Cat_weight_logsScalarFieldEnum[]
  }

  /**
   * profiles.created_weight_goals
   */
  export type profiles$created_weight_goalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    where?: weight_goalsWhereInput
    orderBy?: weight_goalsOrderByWithRelationInput | weight_goalsOrderByWithRelationInput[]
    cursor?: weight_goalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Weight_goalsScalarFieldEnum | Weight_goalsScalarFieldEnum[]
  }

  /**
   * profiles without action
   */
  export type profilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
  }


  /**
   * Model notifications
   */

  export type AggregateNotifications = {
    _count: NotificationsCountAggregateOutputType | null
    _min: NotificationsMinAggregateOutputType | null
    _max: NotificationsMaxAggregateOutputType | null
  }

  export type NotificationsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    user_id: string | null
    title: string | null
    message: string | null
    type: string | null
    is_read: boolean | null
  }

  export type NotificationsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    user_id: string | null
    title: string | null
    message: string | null
    type: string | null
    is_read: boolean | null
  }

  export type NotificationsCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    user_id: number
    title: number
    message: number
    type: number
    is_read: number
    metadata: number
    _all: number
  }


  export type NotificationsMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    user_id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
  }

  export type NotificationsMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    user_id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
  }

  export type NotificationsCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    user_id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    metadata?: true
    _all?: true
  }

  export type NotificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to aggregate.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationsMaxAggregateInputType
  }

  export type GetNotificationsAggregateType<T extends NotificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateNotifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotifications[P]>
      : GetScalarType<T[P], AggregateNotifications[P]>
  }




  export type notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationsWhereInput
    orderBy?: notificationsOrderByWithAggregationInput | notificationsOrderByWithAggregationInput[]
    by: NotificationsScalarFieldEnum[] | NotificationsScalarFieldEnum
    having?: notificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationsCountAggregateInputType | true
    _min?: NotificationsMinAggregateInputType
    _max?: NotificationsMaxAggregateInputType
  }

  export type NotificationsGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    user_id: string
    title: string
    message: string
    type: string
    is_read: boolean
    metadata: JsonValue
    _count: NotificationsCountAggregateOutputType | null
    _min: NotificationsMinAggregateOutputType | null
    _max: NotificationsMaxAggregateOutputType | null
  }

  type GetNotificationsGroupByPayload<T extends notificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationsGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationsGroupByOutputType[P]>
        }
      >
    >


  export type notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    metadata?: boolean
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    metadata?: boolean
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    metadata?: boolean
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    metadata?: boolean
  }

  export type notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "user_id" | "title" | "message" | "type" | "is_read" | "metadata", ExtArgs["result"]["notifications"]>

  export type $notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notifications"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      user_id: string
      title: string
      message: string
      type: string
      is_read: boolean
      metadata: Prisma.JsonValue
    }, ExtArgs["result"]["notifications"]>
    composites: {}
  }

  type notificationsGetPayload<S extends boolean | null | undefined | notificationsDefaultArgs> = $Result.GetResult<Prisma.$notificationsPayload, S>

  type notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationsCountAggregateInputType | true
    }

  export interface notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notifications'], meta: { name: 'notifications' } }
    /**
     * Find zero or one Notifications that matches the filter.
     * @param {notificationsFindUniqueArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationsFindUniqueArgs>(args: SelectSubset<T, notificationsFindUniqueArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationsFindUniqueOrThrowArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindFirstArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationsFindFirstArgs>(args?: SelectSubset<T, notificationsFindFirstArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindFirstOrThrowArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notifications.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notifications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationsWithIdOnly = await prisma.notifications.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationsFindManyArgs>(args?: SelectSubset<T, notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notifications.
     * @param {notificationsCreateArgs} args - Arguments to create a Notifications.
     * @example
     * // Create one Notifications
     * const Notifications = await prisma.notifications.create({
     *   data: {
     *     // ... data to create a Notifications
     *   }
     * })
     * 
     */
    create<T extends notificationsCreateArgs>(args: SelectSubset<T, notificationsCreateArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationsCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notifications = await prisma.notifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationsCreateManyArgs>(args?: SelectSubset<T, notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {notificationsCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notifications = await prisma.notifications.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationsWithIdOnly = await prisma.notifications.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, notificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notifications.
     * @param {notificationsDeleteArgs} args - Arguments to delete one Notifications.
     * @example
     * // Delete one Notifications
     * const Notifications = await prisma.notifications.delete({
     *   where: {
     *     // ... filter to delete one Notifications
     *   }
     * })
     * 
     */
    delete<T extends notificationsDeleteArgs>(args: SelectSubset<T, notificationsDeleteArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notifications.
     * @param {notificationsUpdateArgs} args - Arguments to update one Notifications.
     * @example
     * // Update one Notifications
     * const notifications = await prisma.notifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationsUpdateArgs>(args: SelectSubset<T, notificationsUpdateArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationsDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationsDeleteManyArgs>(args?: SelectSubset<T, notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notifications = await prisma.notifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationsUpdateManyArgs>(args: SelectSubset<T, notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {notificationsUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notifications = await prisma.notifications.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationsWithIdOnly = await prisma.notifications.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, notificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notifications.
     * @param {notificationsUpsertArgs} args - Arguments to update or create a Notifications.
     * @example
     * // Update or create a Notifications
     * const notifications = await prisma.notifications.upsert({
     *   create: {
     *     // ... data to create a Notifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notifications we want to update
     *   }
     * })
     */
    upsert<T extends notificationsUpsertArgs>(args: SelectSubset<T, notificationsUpsertArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notifications.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationsCountArgs>(
      args?: Subset<T, notificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationsAggregateArgs>(args: Subset<T, NotificationsAggregateArgs>): Prisma.PrismaPromise<GetNotificationsAggregateType<T>>

    /**
     * Group by Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationsGroupByArgs['orderBy'] }
        : { orderBy?: notificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notifications model
   */
  readonly fields: notificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notifications model
   */
  interface notificationsFieldRefs {
    readonly id: FieldRef<"notifications", 'String'>
    readonly created_at: FieldRef<"notifications", 'DateTime'>
    readonly updated_at: FieldRef<"notifications", 'DateTime'>
    readonly user_id: FieldRef<"notifications", 'String'>
    readonly title: FieldRef<"notifications", 'String'>
    readonly message: FieldRef<"notifications", 'String'>
    readonly type: FieldRef<"notifications", 'String'>
    readonly is_read: FieldRef<"notifications", 'Boolean'>
    readonly metadata: FieldRef<"notifications", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * notifications findUnique
   */
  export type notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications findUniqueOrThrow
   */
  export type notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications findFirst
   */
  export type notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications findFirstOrThrow
   */
  export type notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications findMany
   */
  export type notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications create
   */
  export type notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data needed to create a notifications.
     */
    data: XOR<notificationsCreateInput, notificationsUncheckedCreateInput>
  }

  /**
   * notifications createMany
   */
  export type notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationsCreateManyInput | notificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notifications createManyAndReturn
   */
  export type notificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data used to create many notifications.
     */
    data: notificationsCreateManyInput | notificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notifications update
   */
  export type notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data needed to update a notifications.
     */
    data: XOR<notificationsUpdateInput, notificationsUncheckedUpdateInput>
    /**
     * Choose, which notifications to update.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications updateMany
   */
  export type notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notifications updateManyAndReturn
   */
  export type notificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notifications upsert
   */
  export type notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The filter to search for the notifications to update in case it exists.
     */
    where: notificationsWhereUniqueInput
    /**
     * In case the notifications found by the `where` argument doesn't exist, create a new notifications with this data.
     */
    create: XOR<notificationsCreateInput, notificationsUncheckedCreateInput>
    /**
     * In case the notifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationsUpdateInput, notificationsUncheckedUpdateInput>
  }

  /**
   * notifications delete
   */
  export type notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Filter which notifications to delete.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications deleteMany
   */
  export type notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notifications without action
   */
  export type notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
  }


  /**
   * Model schedules
   */

  export type AggregateSchedules = {
    _count: SchedulesCountAggregateOutputType | null
    _avg: SchedulesAvgAggregateOutputType | null
    _sum: SchedulesSumAggregateOutputType | null
    _min: SchedulesMinAggregateOutputType | null
    _max: SchedulesMaxAggregateOutputType | null
  }

  export type SchedulesAvgAggregateOutputType = {
    interval: number | null
  }

  export type SchedulesSumAggregateOutputType = {
    interval: number | null
  }

  export type SchedulesMinAggregateOutputType = {
    id: string | null
    cat_id: string | null
    type: string | null
    interval: number | null
    enabled: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type SchedulesMaxAggregateOutputType = {
    id: string | null
    cat_id: string | null
    type: string | null
    interval: number | null
    enabled: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type SchedulesCountAggregateOutputType = {
    id: number
    cat_id: number
    type: number
    interval: number
    times: number
    enabled: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type SchedulesAvgAggregateInputType = {
    interval?: true
  }

  export type SchedulesSumAggregateInputType = {
    interval?: true
  }

  export type SchedulesMinAggregateInputType = {
    id?: true
    cat_id?: true
    type?: true
    interval?: true
    enabled?: true
    created_at?: true
    updated_at?: true
  }

  export type SchedulesMaxAggregateInputType = {
    id?: true
    cat_id?: true
    type?: true
    interval?: true
    enabled?: true
    created_at?: true
    updated_at?: true
  }

  export type SchedulesCountAggregateInputType = {
    id?: true
    cat_id?: true
    type?: true
    interval?: true
    times?: true
    enabled?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type SchedulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schedules to aggregate.
     */
    where?: schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schedules to fetch.
     */
    orderBy?: schedulesOrderByWithRelationInput | schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned schedules
    **/
    _count?: true | SchedulesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SchedulesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SchedulesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SchedulesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SchedulesMaxAggregateInputType
  }

  export type GetSchedulesAggregateType<T extends SchedulesAggregateArgs> = {
        [P in keyof T & keyof AggregateSchedules]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchedules[P]>
      : GetScalarType<T[P], AggregateSchedules[P]>
  }




  export type schedulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schedulesWhereInput
    orderBy?: schedulesOrderByWithAggregationInput | schedulesOrderByWithAggregationInput[]
    by: SchedulesScalarFieldEnum[] | SchedulesScalarFieldEnum
    having?: schedulesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SchedulesCountAggregateInputType | true
    _avg?: SchedulesAvgAggregateInputType
    _sum?: SchedulesSumAggregateInputType
    _min?: SchedulesMinAggregateInputType
    _max?: SchedulesMaxAggregateInputType
  }

  export type SchedulesGroupByOutputType = {
    id: string
    cat_id: string
    type: string
    interval: number | null
    times: string[]
    enabled: boolean
    created_at: Date
    updated_at: Date
    _count: SchedulesCountAggregateOutputType | null
    _avg: SchedulesAvgAggregateOutputType | null
    _sum: SchedulesSumAggregateOutputType | null
    _min: SchedulesMinAggregateOutputType | null
    _max: SchedulesMaxAggregateOutputType | null
  }

  type GetSchedulesGroupByPayload<T extends schedulesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SchedulesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SchedulesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SchedulesGroupByOutputType[P]>
            : GetScalarType<T[P], SchedulesGroupByOutputType[P]>
        }
      >
    >


  export type schedulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cat_id?: boolean
    type?: boolean
    interval?: boolean
    times?: boolean
    enabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["schedules"]>

  export type schedulesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cat_id?: boolean
    type?: boolean
    interval?: boolean
    times?: boolean
    enabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["schedules"]>

  export type schedulesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cat_id?: boolean
    type?: boolean
    interval?: boolean
    times?: boolean
    enabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["schedules"]>

  export type schedulesSelectScalar = {
    id?: boolean
    cat_id?: boolean
    type?: boolean
    interval?: boolean
    times?: boolean
    enabled?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type schedulesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cat_id" | "type" | "interval" | "times" | "enabled" | "created_at" | "updated_at", ExtArgs["result"]["schedules"]>
  export type schedulesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
  }
  export type schedulesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
  }
  export type schedulesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
  }

  export type $schedulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "schedules"
    objects: {
      cat: Prisma.$catsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cat_id: string
      type: string
      interval: number | null
      times: string[]
      enabled: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["schedules"]>
    composites: {}
  }

  type schedulesGetPayload<S extends boolean | null | undefined | schedulesDefaultArgs> = $Result.GetResult<Prisma.$schedulesPayload, S>

  type schedulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<schedulesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SchedulesCountAggregateInputType | true
    }

  export interface schedulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['schedules'], meta: { name: 'schedules' } }
    /**
     * Find zero or one Schedules that matches the filter.
     * @param {schedulesFindUniqueArgs} args - Arguments to find a Schedules
     * @example
     * // Get one Schedules
     * const schedules = await prisma.schedules.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends schedulesFindUniqueArgs>(args: SelectSubset<T, schedulesFindUniqueArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Schedules that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {schedulesFindUniqueOrThrowArgs} args - Arguments to find a Schedules
     * @example
     * // Get one Schedules
     * const schedules = await prisma.schedules.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends schedulesFindUniqueOrThrowArgs>(args: SelectSubset<T, schedulesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schedulesFindFirstArgs} args - Arguments to find a Schedules
     * @example
     * // Get one Schedules
     * const schedules = await prisma.schedules.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends schedulesFindFirstArgs>(args?: SelectSubset<T, schedulesFindFirstArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schedules that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schedulesFindFirstOrThrowArgs} args - Arguments to find a Schedules
     * @example
     * // Get one Schedules
     * const schedules = await prisma.schedules.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends schedulesFindFirstOrThrowArgs>(args?: SelectSubset<T, schedulesFindFirstOrThrowArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schedulesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schedules
     * const schedules = await prisma.schedules.findMany()
     * 
     * // Get first 10 Schedules
     * const schedules = await prisma.schedules.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const schedulesWithIdOnly = await prisma.schedules.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends schedulesFindManyArgs>(args?: SelectSubset<T, schedulesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Schedules.
     * @param {schedulesCreateArgs} args - Arguments to create a Schedules.
     * @example
     * // Create one Schedules
     * const Schedules = await prisma.schedules.create({
     *   data: {
     *     // ... data to create a Schedules
     *   }
     * })
     * 
     */
    create<T extends schedulesCreateArgs>(args: SelectSubset<T, schedulesCreateArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Schedules.
     * @param {schedulesCreateManyArgs} args - Arguments to create many Schedules.
     * @example
     * // Create many Schedules
     * const schedules = await prisma.schedules.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends schedulesCreateManyArgs>(args?: SelectSubset<T, schedulesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Schedules and returns the data saved in the database.
     * @param {schedulesCreateManyAndReturnArgs} args - Arguments to create many Schedules.
     * @example
     * // Create many Schedules
     * const schedules = await prisma.schedules.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Schedules and only return the `id`
     * const schedulesWithIdOnly = await prisma.schedules.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends schedulesCreateManyAndReturnArgs>(args?: SelectSubset<T, schedulesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Schedules.
     * @param {schedulesDeleteArgs} args - Arguments to delete one Schedules.
     * @example
     * // Delete one Schedules
     * const Schedules = await prisma.schedules.delete({
     *   where: {
     *     // ... filter to delete one Schedules
     *   }
     * })
     * 
     */
    delete<T extends schedulesDeleteArgs>(args: SelectSubset<T, schedulesDeleteArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Schedules.
     * @param {schedulesUpdateArgs} args - Arguments to update one Schedules.
     * @example
     * // Update one Schedules
     * const schedules = await prisma.schedules.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends schedulesUpdateArgs>(args: SelectSubset<T, schedulesUpdateArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Schedules.
     * @param {schedulesDeleteManyArgs} args - Arguments to filter Schedules to delete.
     * @example
     * // Delete a few Schedules
     * const { count } = await prisma.schedules.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends schedulesDeleteManyArgs>(args?: SelectSubset<T, schedulesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schedulesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schedules
     * const schedules = await prisma.schedules.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends schedulesUpdateManyArgs>(args: SelectSubset<T, schedulesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schedules and returns the data updated in the database.
     * @param {schedulesUpdateManyAndReturnArgs} args - Arguments to update many Schedules.
     * @example
     * // Update many Schedules
     * const schedules = await prisma.schedules.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Schedules and only return the `id`
     * const schedulesWithIdOnly = await prisma.schedules.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends schedulesUpdateManyAndReturnArgs>(args: SelectSubset<T, schedulesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Schedules.
     * @param {schedulesUpsertArgs} args - Arguments to update or create a Schedules.
     * @example
     * // Update or create a Schedules
     * const schedules = await prisma.schedules.upsert({
     *   create: {
     *     // ... data to create a Schedules
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schedules we want to update
     *   }
     * })
     */
    upsert<T extends schedulesUpsertArgs>(args: SelectSubset<T, schedulesUpsertArgs<ExtArgs>>): Prisma__schedulesClient<$Result.GetResult<Prisma.$schedulesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schedulesCountArgs} args - Arguments to filter Schedules to count.
     * @example
     * // Count the number of Schedules
     * const count = await prisma.schedules.count({
     *   where: {
     *     // ... the filter for the Schedules we want to count
     *   }
     * })
    **/
    count<T extends schedulesCountArgs>(
      args?: Subset<T, schedulesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SchedulesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SchedulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SchedulesAggregateArgs>(args: Subset<T, SchedulesAggregateArgs>): Prisma.PrismaPromise<GetSchedulesAggregateType<T>>

    /**
     * Group by Schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schedulesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends schedulesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: schedulesGroupByArgs['orderBy'] }
        : { orderBy?: schedulesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, schedulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSchedulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the schedules model
   */
  readonly fields: schedulesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for schedules.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__schedulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cat<T extends catsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, catsDefaultArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the schedules model
   */
  interface schedulesFieldRefs {
    readonly id: FieldRef<"schedules", 'String'>
    readonly cat_id: FieldRef<"schedules", 'String'>
    readonly type: FieldRef<"schedules", 'String'>
    readonly interval: FieldRef<"schedules", 'Int'>
    readonly times: FieldRef<"schedules", 'String[]'>
    readonly enabled: FieldRef<"schedules", 'Boolean'>
    readonly created_at: FieldRef<"schedules", 'DateTime'>
    readonly updated_at: FieldRef<"schedules", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * schedules findUnique
   */
  export type schedulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * Filter, which schedules to fetch.
     */
    where: schedulesWhereUniqueInput
  }

  /**
   * schedules findUniqueOrThrow
   */
  export type schedulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * Filter, which schedules to fetch.
     */
    where: schedulesWhereUniqueInput
  }

  /**
   * schedules findFirst
   */
  export type schedulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * Filter, which schedules to fetch.
     */
    where?: schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schedules to fetch.
     */
    orderBy?: schedulesOrderByWithRelationInput | schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schedules.
     */
    cursor?: schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schedules.
     */
    distinct?: SchedulesScalarFieldEnum | SchedulesScalarFieldEnum[]
  }

  /**
   * schedules findFirstOrThrow
   */
  export type schedulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * Filter, which schedules to fetch.
     */
    where?: schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schedules to fetch.
     */
    orderBy?: schedulesOrderByWithRelationInput | schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schedules.
     */
    cursor?: schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schedules.
     */
    distinct?: SchedulesScalarFieldEnum | SchedulesScalarFieldEnum[]
  }

  /**
   * schedules findMany
   */
  export type schedulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * Filter, which schedules to fetch.
     */
    where?: schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schedules to fetch.
     */
    orderBy?: schedulesOrderByWithRelationInput | schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing schedules.
     */
    cursor?: schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schedules.
     */
    skip?: number
    distinct?: SchedulesScalarFieldEnum | SchedulesScalarFieldEnum[]
  }

  /**
   * schedules create
   */
  export type schedulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * The data needed to create a schedules.
     */
    data: XOR<schedulesCreateInput, schedulesUncheckedCreateInput>
  }

  /**
   * schedules createMany
   */
  export type schedulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many schedules.
     */
    data: schedulesCreateManyInput | schedulesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schedules createManyAndReturn
   */
  export type schedulesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * The data used to create many schedules.
     */
    data: schedulesCreateManyInput | schedulesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * schedules update
   */
  export type schedulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * The data needed to update a schedules.
     */
    data: XOR<schedulesUpdateInput, schedulesUncheckedUpdateInput>
    /**
     * Choose, which schedules to update.
     */
    where: schedulesWhereUniqueInput
  }

  /**
   * schedules updateMany
   */
  export type schedulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update schedules.
     */
    data: XOR<schedulesUpdateManyMutationInput, schedulesUncheckedUpdateManyInput>
    /**
     * Filter which schedules to update
     */
    where?: schedulesWhereInput
    /**
     * Limit how many schedules to update.
     */
    limit?: number
  }

  /**
   * schedules updateManyAndReturn
   */
  export type schedulesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * The data used to update schedules.
     */
    data: XOR<schedulesUpdateManyMutationInput, schedulesUncheckedUpdateManyInput>
    /**
     * Filter which schedules to update
     */
    where?: schedulesWhereInput
    /**
     * Limit how many schedules to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * schedules upsert
   */
  export type schedulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * The filter to search for the schedules to update in case it exists.
     */
    where: schedulesWhereUniqueInput
    /**
     * In case the schedules found by the `where` argument doesn't exist, create a new schedules with this data.
     */
    create: XOR<schedulesCreateInput, schedulesUncheckedCreateInput>
    /**
     * In case the schedules was found with the provided `where` argument, update it with this data.
     */
    update: XOR<schedulesUpdateInput, schedulesUncheckedUpdateInput>
  }

  /**
   * schedules delete
   */
  export type schedulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
    /**
     * Filter which schedules to delete.
     */
    where: schedulesWhereUniqueInput
  }

  /**
   * schedules deleteMany
   */
  export type schedulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schedules to delete
     */
    where?: schedulesWhereInput
    /**
     * Limit how many schedules to delete.
     */
    limit?: number
  }

  /**
   * schedules without action
   */
  export type schedulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schedules
     */
    select?: schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schedules
     */
    omit?: schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: schedulesInclude<ExtArgs> | null
  }


  /**
   * Model feeding_logs
   */

  export type AggregateFeeding_logs = {
    _count: Feeding_logsCountAggregateOutputType | null
    _avg: Feeding_logsAvgAggregateOutputType | null
    _sum: Feeding_logsSumAggregateOutputType | null
    _min: Feeding_logsMinAggregateOutputType | null
    _max: Feeding_logsMaxAggregateOutputType | null
  }

  export type Feeding_logsAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type Feeding_logsSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type Feeding_logsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    cat_id: string | null
    household_id: string | null
    meal_type: string | null
    amount: Decimal | null
    unit: string | null
    notes: string | null
    fed_by: string | null
    fed_at: Date | null
  }

  export type Feeding_logsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    cat_id: string | null
    household_id: string | null
    meal_type: string | null
    amount: Decimal | null
    unit: string | null
    notes: string | null
    fed_by: string | null
    fed_at: Date | null
  }

  export type Feeding_logsCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    cat_id: number
    household_id: number
    meal_type: number
    amount: number
    unit: number
    notes: number
    fed_by: number
    fed_at: number
    _all: number
  }


  export type Feeding_logsAvgAggregateInputType = {
    amount?: true
  }

  export type Feeding_logsSumAggregateInputType = {
    amount?: true
  }

  export type Feeding_logsMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    cat_id?: true
    household_id?: true
    meal_type?: true
    amount?: true
    unit?: true
    notes?: true
    fed_by?: true
    fed_at?: true
  }

  export type Feeding_logsMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    cat_id?: true
    household_id?: true
    meal_type?: true
    amount?: true
    unit?: true
    notes?: true
    fed_by?: true
    fed_at?: true
  }

  export type Feeding_logsCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    cat_id?: true
    household_id?: true
    meal_type?: true
    amount?: true
    unit?: true
    notes?: true
    fed_by?: true
    fed_at?: true
    _all?: true
  }

  export type Feeding_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which feeding_logs to aggregate.
     */
    where?: feeding_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feeding_logs to fetch.
     */
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: feeding_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feeding_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feeding_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned feeding_logs
    **/
    _count?: true | Feeding_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Feeding_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Feeding_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Feeding_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Feeding_logsMaxAggregateInputType
  }

  export type GetFeeding_logsAggregateType<T extends Feeding_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateFeeding_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFeeding_logs[P]>
      : GetScalarType<T[P], AggregateFeeding_logs[P]>
  }




  export type feeding_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feeding_logsWhereInput
    orderBy?: feeding_logsOrderByWithAggregationInput | feeding_logsOrderByWithAggregationInput[]
    by: Feeding_logsScalarFieldEnum[] | Feeding_logsScalarFieldEnum
    having?: feeding_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Feeding_logsCountAggregateInputType | true
    _avg?: Feeding_logsAvgAggregateInputType
    _sum?: Feeding_logsSumAggregateInputType
    _min?: Feeding_logsMinAggregateInputType
    _max?: Feeding_logsMaxAggregateInputType
  }

  export type Feeding_logsGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    cat_id: string
    household_id: string
    meal_type: string
    amount: Decimal
    unit: string
    notes: string | null
    fed_by: string | null
    fed_at: Date
    _count: Feeding_logsCountAggregateOutputType | null
    _avg: Feeding_logsAvgAggregateOutputType | null
    _sum: Feeding_logsSumAggregateOutputType | null
    _min: Feeding_logsMinAggregateOutputType | null
    _max: Feeding_logsMaxAggregateOutputType | null
  }

  type GetFeeding_logsGroupByPayload<T extends feeding_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Feeding_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Feeding_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Feeding_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Feeding_logsGroupByOutputType[P]>
        }
      >
    >


  export type feeding_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    household_id?: boolean
    meal_type?: boolean
    amount?: boolean
    unit?: boolean
    notes?: boolean
    fed_by?: boolean
    fed_at?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    feeder?: boolean | feeding_logs$feederArgs<ExtArgs>
    household?: boolean | householdsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["feeding_logs"]>

  export type feeding_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    household_id?: boolean
    meal_type?: boolean
    amount?: boolean
    unit?: boolean
    notes?: boolean
    fed_by?: boolean
    fed_at?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    feeder?: boolean | feeding_logs$feederArgs<ExtArgs>
    household?: boolean | householdsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["feeding_logs"]>

  export type feeding_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    household_id?: boolean
    meal_type?: boolean
    amount?: boolean
    unit?: boolean
    notes?: boolean
    fed_by?: boolean
    fed_at?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    feeder?: boolean | feeding_logs$feederArgs<ExtArgs>
    household?: boolean | householdsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["feeding_logs"]>

  export type feeding_logsSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    household_id?: boolean
    meal_type?: boolean
    amount?: boolean
    unit?: boolean
    notes?: boolean
    fed_by?: boolean
    fed_at?: boolean
  }

  export type feeding_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "cat_id" | "household_id" | "meal_type" | "amount" | "unit" | "notes" | "fed_by" | "fed_at", ExtArgs["result"]["feeding_logs"]>
  export type feeding_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    feeder?: boolean | feeding_logs$feederArgs<ExtArgs>
    household?: boolean | householdsDefaultArgs<ExtArgs>
  }
  export type feeding_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    feeder?: boolean | feeding_logs$feederArgs<ExtArgs>
    household?: boolean | householdsDefaultArgs<ExtArgs>
  }
  export type feeding_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    feeder?: boolean | feeding_logs$feederArgs<ExtArgs>
    household?: boolean | householdsDefaultArgs<ExtArgs>
  }

  export type $feeding_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "feeding_logs"
    objects: {
      cat: Prisma.$catsPayload<ExtArgs>
      feeder: Prisma.$profilesPayload<ExtArgs> | null
      household: Prisma.$householdsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      cat_id: string
      household_id: string
      meal_type: string
      amount: Prisma.Decimal
      unit: string
      notes: string | null
      fed_by: string | null
      fed_at: Date
    }, ExtArgs["result"]["feeding_logs"]>
    composites: {}
  }

  type feeding_logsGetPayload<S extends boolean | null | undefined | feeding_logsDefaultArgs> = $Result.GetResult<Prisma.$feeding_logsPayload, S>

  type feeding_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<feeding_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Feeding_logsCountAggregateInputType | true
    }

  export interface feeding_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['feeding_logs'], meta: { name: 'feeding_logs' } }
    /**
     * Find zero or one Feeding_logs that matches the filter.
     * @param {feeding_logsFindUniqueArgs} args - Arguments to find a Feeding_logs
     * @example
     * // Get one Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends feeding_logsFindUniqueArgs>(args: SelectSubset<T, feeding_logsFindUniqueArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Feeding_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {feeding_logsFindUniqueOrThrowArgs} args - Arguments to find a Feeding_logs
     * @example
     * // Get one Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends feeding_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, feeding_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Feeding_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feeding_logsFindFirstArgs} args - Arguments to find a Feeding_logs
     * @example
     * // Get one Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends feeding_logsFindFirstArgs>(args?: SelectSubset<T, feeding_logsFindFirstArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Feeding_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feeding_logsFindFirstOrThrowArgs} args - Arguments to find a Feeding_logs
     * @example
     * // Get one Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends feeding_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, feeding_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Feeding_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feeding_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.findMany()
     * 
     * // Get first 10 Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const feeding_logsWithIdOnly = await prisma.feeding_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends feeding_logsFindManyArgs>(args?: SelectSubset<T, feeding_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Feeding_logs.
     * @param {feeding_logsCreateArgs} args - Arguments to create a Feeding_logs.
     * @example
     * // Create one Feeding_logs
     * const Feeding_logs = await prisma.feeding_logs.create({
     *   data: {
     *     // ... data to create a Feeding_logs
     *   }
     * })
     * 
     */
    create<T extends feeding_logsCreateArgs>(args: SelectSubset<T, feeding_logsCreateArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Feeding_logs.
     * @param {feeding_logsCreateManyArgs} args - Arguments to create many Feeding_logs.
     * @example
     * // Create many Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends feeding_logsCreateManyArgs>(args?: SelectSubset<T, feeding_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Feeding_logs and returns the data saved in the database.
     * @param {feeding_logsCreateManyAndReturnArgs} args - Arguments to create many Feeding_logs.
     * @example
     * // Create many Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Feeding_logs and only return the `id`
     * const feeding_logsWithIdOnly = await prisma.feeding_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends feeding_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, feeding_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Feeding_logs.
     * @param {feeding_logsDeleteArgs} args - Arguments to delete one Feeding_logs.
     * @example
     * // Delete one Feeding_logs
     * const Feeding_logs = await prisma.feeding_logs.delete({
     *   where: {
     *     // ... filter to delete one Feeding_logs
     *   }
     * })
     * 
     */
    delete<T extends feeding_logsDeleteArgs>(args: SelectSubset<T, feeding_logsDeleteArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Feeding_logs.
     * @param {feeding_logsUpdateArgs} args - Arguments to update one Feeding_logs.
     * @example
     * // Update one Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends feeding_logsUpdateArgs>(args: SelectSubset<T, feeding_logsUpdateArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Feeding_logs.
     * @param {feeding_logsDeleteManyArgs} args - Arguments to filter Feeding_logs to delete.
     * @example
     * // Delete a few Feeding_logs
     * const { count } = await prisma.feeding_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends feeding_logsDeleteManyArgs>(args?: SelectSubset<T, feeding_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Feeding_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feeding_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends feeding_logsUpdateManyArgs>(args: SelectSubset<T, feeding_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Feeding_logs and returns the data updated in the database.
     * @param {feeding_logsUpdateManyAndReturnArgs} args - Arguments to update many Feeding_logs.
     * @example
     * // Update many Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Feeding_logs and only return the `id`
     * const feeding_logsWithIdOnly = await prisma.feeding_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends feeding_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, feeding_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Feeding_logs.
     * @param {feeding_logsUpsertArgs} args - Arguments to update or create a Feeding_logs.
     * @example
     * // Update or create a Feeding_logs
     * const feeding_logs = await prisma.feeding_logs.upsert({
     *   create: {
     *     // ... data to create a Feeding_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Feeding_logs we want to update
     *   }
     * })
     */
    upsert<T extends feeding_logsUpsertArgs>(args: SelectSubset<T, feeding_logsUpsertArgs<ExtArgs>>): Prisma__feeding_logsClient<$Result.GetResult<Prisma.$feeding_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Feeding_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feeding_logsCountArgs} args - Arguments to filter Feeding_logs to count.
     * @example
     * // Count the number of Feeding_logs
     * const count = await prisma.feeding_logs.count({
     *   where: {
     *     // ... the filter for the Feeding_logs we want to count
     *   }
     * })
    **/
    count<T extends feeding_logsCountArgs>(
      args?: Subset<T, feeding_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Feeding_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Feeding_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Feeding_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Feeding_logsAggregateArgs>(args: Subset<T, Feeding_logsAggregateArgs>): Prisma.PrismaPromise<GetFeeding_logsAggregateType<T>>

    /**
     * Group by Feeding_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feeding_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends feeding_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: feeding_logsGroupByArgs['orderBy'] }
        : { orderBy?: feeding_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, feeding_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFeeding_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the feeding_logs model
   */
  readonly fields: feeding_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for feeding_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__feeding_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cat<T extends catsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, catsDefaultArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    feeder<T extends feeding_logs$feederArgs<ExtArgs> = {}>(args?: Subset<T, feeding_logs$feederArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    household<T extends householdsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, householdsDefaultArgs<ExtArgs>>): Prisma__householdsClient<$Result.GetResult<Prisma.$householdsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the feeding_logs model
   */
  interface feeding_logsFieldRefs {
    readonly id: FieldRef<"feeding_logs", 'String'>
    readonly created_at: FieldRef<"feeding_logs", 'DateTime'>
    readonly updated_at: FieldRef<"feeding_logs", 'DateTime'>
    readonly cat_id: FieldRef<"feeding_logs", 'String'>
    readonly household_id: FieldRef<"feeding_logs", 'String'>
    readonly meal_type: FieldRef<"feeding_logs", 'String'>
    readonly amount: FieldRef<"feeding_logs", 'Decimal'>
    readonly unit: FieldRef<"feeding_logs", 'String'>
    readonly notes: FieldRef<"feeding_logs", 'String'>
    readonly fed_by: FieldRef<"feeding_logs", 'String'>
    readonly fed_at: FieldRef<"feeding_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * feeding_logs findUnique
   */
  export type feeding_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * Filter, which feeding_logs to fetch.
     */
    where: feeding_logsWhereUniqueInput
  }

  /**
   * feeding_logs findUniqueOrThrow
   */
  export type feeding_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * Filter, which feeding_logs to fetch.
     */
    where: feeding_logsWhereUniqueInput
  }

  /**
   * feeding_logs findFirst
   */
  export type feeding_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * Filter, which feeding_logs to fetch.
     */
    where?: feeding_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feeding_logs to fetch.
     */
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for feeding_logs.
     */
    cursor?: feeding_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feeding_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feeding_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of feeding_logs.
     */
    distinct?: Feeding_logsScalarFieldEnum | Feeding_logsScalarFieldEnum[]
  }

  /**
   * feeding_logs findFirstOrThrow
   */
  export type feeding_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * Filter, which feeding_logs to fetch.
     */
    where?: feeding_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feeding_logs to fetch.
     */
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for feeding_logs.
     */
    cursor?: feeding_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feeding_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feeding_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of feeding_logs.
     */
    distinct?: Feeding_logsScalarFieldEnum | Feeding_logsScalarFieldEnum[]
  }

  /**
   * feeding_logs findMany
   */
  export type feeding_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * Filter, which feeding_logs to fetch.
     */
    where?: feeding_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feeding_logs to fetch.
     */
    orderBy?: feeding_logsOrderByWithRelationInput | feeding_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing feeding_logs.
     */
    cursor?: feeding_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feeding_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feeding_logs.
     */
    skip?: number
    distinct?: Feeding_logsScalarFieldEnum | Feeding_logsScalarFieldEnum[]
  }

  /**
   * feeding_logs create
   */
  export type feeding_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a feeding_logs.
     */
    data: XOR<feeding_logsCreateInput, feeding_logsUncheckedCreateInput>
  }

  /**
   * feeding_logs createMany
   */
  export type feeding_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many feeding_logs.
     */
    data: feeding_logsCreateManyInput | feeding_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * feeding_logs createManyAndReturn
   */
  export type feeding_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * The data used to create many feeding_logs.
     */
    data: feeding_logsCreateManyInput | feeding_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * feeding_logs update
   */
  export type feeding_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a feeding_logs.
     */
    data: XOR<feeding_logsUpdateInput, feeding_logsUncheckedUpdateInput>
    /**
     * Choose, which feeding_logs to update.
     */
    where: feeding_logsWhereUniqueInput
  }

  /**
   * feeding_logs updateMany
   */
  export type feeding_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update feeding_logs.
     */
    data: XOR<feeding_logsUpdateManyMutationInput, feeding_logsUncheckedUpdateManyInput>
    /**
     * Filter which feeding_logs to update
     */
    where?: feeding_logsWhereInput
    /**
     * Limit how many feeding_logs to update.
     */
    limit?: number
  }

  /**
   * feeding_logs updateManyAndReturn
   */
  export type feeding_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * The data used to update feeding_logs.
     */
    data: XOR<feeding_logsUpdateManyMutationInput, feeding_logsUncheckedUpdateManyInput>
    /**
     * Filter which feeding_logs to update
     */
    where?: feeding_logsWhereInput
    /**
     * Limit how many feeding_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * feeding_logs upsert
   */
  export type feeding_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the feeding_logs to update in case it exists.
     */
    where: feeding_logsWhereUniqueInput
    /**
     * In case the feeding_logs found by the `where` argument doesn't exist, create a new feeding_logs with this data.
     */
    create: XOR<feeding_logsCreateInput, feeding_logsUncheckedCreateInput>
    /**
     * In case the feeding_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<feeding_logsUpdateInput, feeding_logsUncheckedUpdateInput>
  }

  /**
   * feeding_logs delete
   */
  export type feeding_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
    /**
     * Filter which feeding_logs to delete.
     */
    where: feeding_logsWhereUniqueInput
  }

  /**
   * feeding_logs deleteMany
   */
  export type feeding_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which feeding_logs to delete
     */
    where?: feeding_logsWhereInput
    /**
     * Limit how many feeding_logs to delete.
     */
    limit?: number
  }

  /**
   * feeding_logs.feeder
   */
  export type feeding_logs$feederArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    where?: profilesWhereInput
  }

  /**
   * feeding_logs without action
   */
  export type feeding_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feeding_logs
     */
    select?: feeding_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feeding_logs
     */
    omit?: feeding_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feeding_logsInclude<ExtArgs> | null
  }


  /**
   * Model schema_migrations
   */

  export type AggregateSchema_migrations = {
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  export type Schema_migrationsMinAggregateOutputType = {
    version: string | null
    dirty: boolean | null
    applied_at: Date | null
  }

  export type Schema_migrationsMaxAggregateOutputType = {
    version: string | null
    dirty: boolean | null
    applied_at: Date | null
  }

  export type Schema_migrationsCountAggregateOutputType = {
    version: number
    dirty: number
    applied_at: number
    _all: number
  }


  export type Schema_migrationsMinAggregateInputType = {
    version?: true
    dirty?: true
    applied_at?: true
  }

  export type Schema_migrationsMaxAggregateInputType = {
    version?: true
    dirty?: true
    applied_at?: true
  }

  export type Schema_migrationsCountAggregateInputType = {
    version?: true
    dirty?: true
    applied_at?: true
    _all?: true
  }

  export type Schema_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to aggregate.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned schema_migrations
    **/
    _count?: true | Schema_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Schema_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type GetSchema_migrationsAggregateType<T extends Schema_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateSchema_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchema_migrations[P]>
      : GetScalarType<T[P], AggregateSchema_migrations[P]>
  }




  export type schema_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schema_migrationsWhereInput
    orderBy?: schema_migrationsOrderByWithAggregationInput | schema_migrationsOrderByWithAggregationInput[]
    by: Schema_migrationsScalarFieldEnum[] | Schema_migrationsScalarFieldEnum
    having?: schema_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Schema_migrationsCountAggregateInputType | true
    _min?: Schema_migrationsMinAggregateInputType
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type Schema_migrationsGroupByOutputType = {
    version: string
    dirty: boolean
    applied_at: Date
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  type GetSchema_migrationsGroupByPayload<T extends schema_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Schema_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Schema_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type schema_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
    applied_at?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
    applied_at?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
    applied_at?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectScalar = {
    version?: boolean
    dirty?: boolean
    applied_at?: boolean
  }

  export type schema_migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"version" | "dirty" | "applied_at", ExtArgs["result"]["schema_migrations"]>

  export type $schema_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "schema_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      version: string
      dirty: boolean
      applied_at: Date
    }, ExtArgs["result"]["schema_migrations"]>
    composites: {}
  }

  type schema_migrationsGetPayload<S extends boolean | null | undefined | schema_migrationsDefaultArgs> = $Result.GetResult<Prisma.$schema_migrationsPayload, S>

  type schema_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<schema_migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Schema_migrationsCountAggregateInputType | true
    }

  export interface schema_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['schema_migrations'], meta: { name: 'schema_migrations' } }
    /**
     * Find zero or one Schema_migrations that matches the filter.
     * @param {schema_migrationsFindUniqueArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends schema_migrationsFindUniqueArgs>(args: SelectSubset<T, schema_migrationsFindUniqueArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Schema_migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {schema_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends schema_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, schema_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends schema_migrationsFindFirstArgs>(args?: SelectSubset<T, schema_migrationsFindFirstArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends schema_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, schema_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany()
     * 
     * // Get first 10 Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany({ take: 10 })
     * 
     * // Only select the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.findMany({ select: { version: true } })
     * 
     */
    findMany<T extends schema_migrationsFindManyArgs>(args?: SelectSubset<T, schema_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Schema_migrations.
     * @param {schema_migrationsCreateArgs} args - Arguments to create a Schema_migrations.
     * @example
     * // Create one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.create({
     *   data: {
     *     // ... data to create a Schema_migrations
     *   }
     * })
     * 
     */
    create<T extends schema_migrationsCreateArgs>(args: SelectSubset<T, schema_migrationsCreateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Schema_migrations.
     * @param {schema_migrationsCreateManyArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends schema_migrationsCreateManyArgs>(args?: SelectSubset<T, schema_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Schema_migrations and returns the data saved in the database.
     * @param {schema_migrationsCreateManyAndReturnArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.createManyAndReturn({
     *   select: { version: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends schema_migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, schema_migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Schema_migrations.
     * @param {schema_migrationsDeleteArgs} args - Arguments to delete one Schema_migrations.
     * @example
     * // Delete one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.delete({
     *   where: {
     *     // ... filter to delete one Schema_migrations
     *   }
     * })
     * 
     */
    delete<T extends schema_migrationsDeleteArgs>(args: SelectSubset<T, schema_migrationsDeleteArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Schema_migrations.
     * @param {schema_migrationsUpdateArgs} args - Arguments to update one Schema_migrations.
     * @example
     * // Update one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends schema_migrationsUpdateArgs>(args: SelectSubset<T, schema_migrationsUpdateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Schema_migrations.
     * @param {schema_migrationsDeleteManyArgs} args - Arguments to filter Schema_migrations to delete.
     * @example
     * // Delete a few Schema_migrations
     * const { count } = await prisma.schema_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends schema_migrationsDeleteManyArgs>(args?: SelectSubset<T, schema_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends schema_migrationsUpdateManyArgs>(args: SelectSubset<T, schema_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations and returns the data updated in the database.
     * @param {schema_migrationsUpdateManyAndReturnArgs} args - Arguments to update many Schema_migrations.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.updateManyAndReturn({
     *   select: { version: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends schema_migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, schema_migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Schema_migrations.
     * @param {schema_migrationsUpsertArgs} args - Arguments to update or create a Schema_migrations.
     * @example
     * // Update or create a Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.upsert({
     *   create: {
     *     // ... data to create a Schema_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schema_migrations we want to update
     *   }
     * })
     */
    upsert<T extends schema_migrationsUpsertArgs>(args: SelectSubset<T, schema_migrationsUpsertArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsCountArgs} args - Arguments to filter Schema_migrations to count.
     * @example
     * // Count the number of Schema_migrations
     * const count = await prisma.schema_migrations.count({
     *   where: {
     *     // ... the filter for the Schema_migrations we want to count
     *   }
     * })
    **/
    count<T extends schema_migrationsCountArgs>(
      args?: Subset<T, schema_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Schema_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Schema_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Schema_migrationsAggregateArgs>(args: Subset<T, Schema_migrationsAggregateArgs>): Prisma.PrismaPromise<GetSchema_migrationsAggregateType<T>>

    /**
     * Group by Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends schema_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: schema_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: schema_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, schema_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSchema_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the schema_migrations model
   */
  readonly fields: schema_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for schema_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__schema_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the schema_migrations model
   */
  interface schema_migrationsFieldRefs {
    readonly version: FieldRef<"schema_migrations", 'String'>
    readonly dirty: FieldRef<"schema_migrations", 'Boolean'>
    readonly applied_at: FieldRef<"schema_migrations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * schema_migrations findUnique
   */
  export type schema_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findUniqueOrThrow
   */
  export type schema_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findFirst
   */
  export type schema_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findFirstOrThrow
   */
  export type schema_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findMany
   */
  export type schema_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations create
   */
  export type schema_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a schema_migrations.
     */
    data: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
  }

  /**
   * schema_migrations createMany
   */
  export type schema_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations createManyAndReturn
   */
  export type schema_migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations update
   */
  export type schema_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a schema_migrations.
     */
    data: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
    /**
     * Choose, which schema_migrations to update.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations updateMany
   */
  export type schema_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations updateManyAndReturn
   */
  export type schema_migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations upsert
   */
  export type schema_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the schema_migrations to update in case it exists.
     */
    where: schema_migrationsWhereUniqueInput
    /**
     * In case the schema_migrations found by the `where` argument doesn't exist, create a new schema_migrations with this data.
     */
    create: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
    /**
     * In case the schema_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
  }

  /**
   * schema_migrations delete
   */
  export type schema_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter which schema_migrations to delete.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations deleteMany
   */
  export type schema_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to delete
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to delete.
     */
    limit?: number
  }

  /**
   * schema_migrations without action
   */
  export type schema_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
  }


  /**
   * Model cat_weight_logs
   */

  export type AggregateCat_weight_logs = {
    _count: Cat_weight_logsCountAggregateOutputType | null
    _avg: Cat_weight_logsAvgAggregateOutputType | null
    _sum: Cat_weight_logsSumAggregateOutputType | null
    _min: Cat_weight_logsMinAggregateOutputType | null
    _max: Cat_weight_logsMaxAggregateOutputType | null
  }

  export type Cat_weight_logsAvgAggregateOutputType = {
    weight: Decimal | null
  }

  export type Cat_weight_logsSumAggregateOutputType = {
    weight: Decimal | null
  }

  export type Cat_weight_logsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    weight: Decimal | null
    date: Date | null
    cat_id: string | null
    notes: string | null
    measured_by: string | null
  }

  export type Cat_weight_logsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    weight: Decimal | null
    date: Date | null
    cat_id: string | null
    notes: string | null
    measured_by: string | null
  }

  export type Cat_weight_logsCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    weight: number
    date: number
    cat_id: number
    notes: number
    measured_by: number
    _all: number
  }


  export type Cat_weight_logsAvgAggregateInputType = {
    weight?: true
  }

  export type Cat_weight_logsSumAggregateInputType = {
    weight?: true
  }

  export type Cat_weight_logsMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    weight?: true
    date?: true
    cat_id?: true
    notes?: true
    measured_by?: true
  }

  export type Cat_weight_logsMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    weight?: true
    date?: true
    cat_id?: true
    notes?: true
    measured_by?: true
  }

  export type Cat_weight_logsCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    weight?: true
    date?: true
    cat_id?: true
    notes?: true
    measured_by?: true
    _all?: true
  }

  export type Cat_weight_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cat_weight_logs to aggregate.
     */
    where?: cat_weight_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cat_weight_logs to fetch.
     */
    orderBy?: cat_weight_logsOrderByWithRelationInput | cat_weight_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cat_weight_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cat_weight_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cat_weight_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cat_weight_logs
    **/
    _count?: true | Cat_weight_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cat_weight_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cat_weight_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cat_weight_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cat_weight_logsMaxAggregateInputType
  }

  export type GetCat_weight_logsAggregateType<T extends Cat_weight_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateCat_weight_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCat_weight_logs[P]>
      : GetScalarType<T[P], AggregateCat_weight_logs[P]>
  }




  export type cat_weight_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cat_weight_logsWhereInput
    orderBy?: cat_weight_logsOrderByWithAggregationInput | cat_weight_logsOrderByWithAggregationInput[]
    by: Cat_weight_logsScalarFieldEnum[] | Cat_weight_logsScalarFieldEnum
    having?: cat_weight_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cat_weight_logsCountAggregateInputType | true
    _avg?: Cat_weight_logsAvgAggregateInputType
    _sum?: Cat_weight_logsSumAggregateInputType
    _min?: Cat_weight_logsMinAggregateInputType
    _max?: Cat_weight_logsMaxAggregateInputType
  }

  export type Cat_weight_logsGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    weight: Decimal
    date: Date
    cat_id: string
    notes: string | null
    measured_by: string | null
    _count: Cat_weight_logsCountAggregateOutputType | null
    _avg: Cat_weight_logsAvgAggregateOutputType | null
    _sum: Cat_weight_logsSumAggregateOutputType | null
    _min: Cat_weight_logsMinAggregateOutputType | null
    _max: Cat_weight_logsMaxAggregateOutputType | null
  }

  type GetCat_weight_logsGroupByPayload<T extends cat_weight_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cat_weight_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cat_weight_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cat_weight_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Cat_weight_logsGroupByOutputType[P]>
        }
      >
    >


  export type cat_weight_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    weight?: boolean
    date?: boolean
    cat_id?: boolean
    notes?: boolean
    measured_by?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    measuredBy?: boolean | cat_weight_logs$measuredByArgs<ExtArgs>
  }, ExtArgs["result"]["cat_weight_logs"]>

  export type cat_weight_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    weight?: boolean
    date?: boolean
    cat_id?: boolean
    notes?: boolean
    measured_by?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    measuredBy?: boolean | cat_weight_logs$measuredByArgs<ExtArgs>
  }, ExtArgs["result"]["cat_weight_logs"]>

  export type cat_weight_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    weight?: boolean
    date?: boolean
    cat_id?: boolean
    notes?: boolean
    measured_by?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    measuredBy?: boolean | cat_weight_logs$measuredByArgs<ExtArgs>
  }, ExtArgs["result"]["cat_weight_logs"]>

  export type cat_weight_logsSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    weight?: boolean
    date?: boolean
    cat_id?: boolean
    notes?: boolean
    measured_by?: boolean
  }

  export type cat_weight_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "weight" | "date" | "cat_id" | "notes" | "measured_by", ExtArgs["result"]["cat_weight_logs"]>
  export type cat_weight_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    measuredBy?: boolean | cat_weight_logs$measuredByArgs<ExtArgs>
  }
  export type cat_weight_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    measuredBy?: boolean | cat_weight_logs$measuredByArgs<ExtArgs>
  }
  export type cat_weight_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    measuredBy?: boolean | cat_weight_logs$measuredByArgs<ExtArgs>
  }

  export type $cat_weight_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cat_weight_logs"
    objects: {
      cat: Prisma.$catsPayload<ExtArgs>
      measuredBy: Prisma.$profilesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      weight: Prisma.Decimal
      date: Date
      cat_id: string
      notes: string | null
      measured_by: string | null
    }, ExtArgs["result"]["cat_weight_logs"]>
    composites: {}
  }

  type cat_weight_logsGetPayload<S extends boolean | null | undefined | cat_weight_logsDefaultArgs> = $Result.GetResult<Prisma.$cat_weight_logsPayload, S>

  type cat_weight_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cat_weight_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cat_weight_logsCountAggregateInputType | true
    }

  export interface cat_weight_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cat_weight_logs'], meta: { name: 'cat_weight_logs' } }
    /**
     * Find zero or one Cat_weight_logs that matches the filter.
     * @param {cat_weight_logsFindUniqueArgs} args - Arguments to find a Cat_weight_logs
     * @example
     * // Get one Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cat_weight_logsFindUniqueArgs>(args: SelectSubset<T, cat_weight_logsFindUniqueArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cat_weight_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cat_weight_logsFindUniqueOrThrowArgs} args - Arguments to find a Cat_weight_logs
     * @example
     * // Get one Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cat_weight_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, cat_weight_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cat_weight_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cat_weight_logsFindFirstArgs} args - Arguments to find a Cat_weight_logs
     * @example
     * // Get one Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cat_weight_logsFindFirstArgs>(args?: SelectSubset<T, cat_weight_logsFindFirstArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cat_weight_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cat_weight_logsFindFirstOrThrowArgs} args - Arguments to find a Cat_weight_logs
     * @example
     * // Get one Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cat_weight_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, cat_weight_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cat_weight_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cat_weight_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.findMany()
     * 
     * // Get first 10 Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cat_weight_logsWithIdOnly = await prisma.cat_weight_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cat_weight_logsFindManyArgs>(args?: SelectSubset<T, cat_weight_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cat_weight_logs.
     * @param {cat_weight_logsCreateArgs} args - Arguments to create a Cat_weight_logs.
     * @example
     * // Create one Cat_weight_logs
     * const Cat_weight_logs = await prisma.cat_weight_logs.create({
     *   data: {
     *     // ... data to create a Cat_weight_logs
     *   }
     * })
     * 
     */
    create<T extends cat_weight_logsCreateArgs>(args: SelectSubset<T, cat_weight_logsCreateArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cat_weight_logs.
     * @param {cat_weight_logsCreateManyArgs} args - Arguments to create many Cat_weight_logs.
     * @example
     * // Create many Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cat_weight_logsCreateManyArgs>(args?: SelectSubset<T, cat_weight_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cat_weight_logs and returns the data saved in the database.
     * @param {cat_weight_logsCreateManyAndReturnArgs} args - Arguments to create many Cat_weight_logs.
     * @example
     * // Create many Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cat_weight_logs and only return the `id`
     * const cat_weight_logsWithIdOnly = await prisma.cat_weight_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cat_weight_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, cat_weight_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cat_weight_logs.
     * @param {cat_weight_logsDeleteArgs} args - Arguments to delete one Cat_weight_logs.
     * @example
     * // Delete one Cat_weight_logs
     * const Cat_weight_logs = await prisma.cat_weight_logs.delete({
     *   where: {
     *     // ... filter to delete one Cat_weight_logs
     *   }
     * })
     * 
     */
    delete<T extends cat_weight_logsDeleteArgs>(args: SelectSubset<T, cat_weight_logsDeleteArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cat_weight_logs.
     * @param {cat_weight_logsUpdateArgs} args - Arguments to update one Cat_weight_logs.
     * @example
     * // Update one Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cat_weight_logsUpdateArgs>(args: SelectSubset<T, cat_weight_logsUpdateArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cat_weight_logs.
     * @param {cat_weight_logsDeleteManyArgs} args - Arguments to filter Cat_weight_logs to delete.
     * @example
     * // Delete a few Cat_weight_logs
     * const { count } = await prisma.cat_weight_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cat_weight_logsDeleteManyArgs>(args?: SelectSubset<T, cat_weight_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cat_weight_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cat_weight_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cat_weight_logsUpdateManyArgs>(args: SelectSubset<T, cat_weight_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cat_weight_logs and returns the data updated in the database.
     * @param {cat_weight_logsUpdateManyAndReturnArgs} args - Arguments to update many Cat_weight_logs.
     * @example
     * // Update many Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cat_weight_logs and only return the `id`
     * const cat_weight_logsWithIdOnly = await prisma.cat_weight_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cat_weight_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, cat_weight_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cat_weight_logs.
     * @param {cat_weight_logsUpsertArgs} args - Arguments to update or create a Cat_weight_logs.
     * @example
     * // Update or create a Cat_weight_logs
     * const cat_weight_logs = await prisma.cat_weight_logs.upsert({
     *   create: {
     *     // ... data to create a Cat_weight_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cat_weight_logs we want to update
     *   }
     * })
     */
    upsert<T extends cat_weight_logsUpsertArgs>(args: SelectSubset<T, cat_weight_logsUpsertArgs<ExtArgs>>): Prisma__cat_weight_logsClient<$Result.GetResult<Prisma.$cat_weight_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cat_weight_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cat_weight_logsCountArgs} args - Arguments to filter Cat_weight_logs to count.
     * @example
     * // Count the number of Cat_weight_logs
     * const count = await prisma.cat_weight_logs.count({
     *   where: {
     *     // ... the filter for the Cat_weight_logs we want to count
     *   }
     * })
    **/
    count<T extends cat_weight_logsCountArgs>(
      args?: Subset<T, cat_weight_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cat_weight_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cat_weight_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cat_weight_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cat_weight_logsAggregateArgs>(args: Subset<T, Cat_weight_logsAggregateArgs>): Prisma.PrismaPromise<GetCat_weight_logsAggregateType<T>>

    /**
     * Group by Cat_weight_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cat_weight_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cat_weight_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cat_weight_logsGroupByArgs['orderBy'] }
        : { orderBy?: cat_weight_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cat_weight_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCat_weight_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cat_weight_logs model
   */
  readonly fields: cat_weight_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cat_weight_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cat_weight_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cat<T extends catsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, catsDefaultArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    measuredBy<T extends cat_weight_logs$measuredByArgs<ExtArgs> = {}>(args?: Subset<T, cat_weight_logs$measuredByArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cat_weight_logs model
   */
  interface cat_weight_logsFieldRefs {
    readonly id: FieldRef<"cat_weight_logs", 'String'>
    readonly created_at: FieldRef<"cat_weight_logs", 'DateTime'>
    readonly updated_at: FieldRef<"cat_weight_logs", 'DateTime'>
    readonly weight: FieldRef<"cat_weight_logs", 'Decimal'>
    readonly date: FieldRef<"cat_weight_logs", 'DateTime'>
    readonly cat_id: FieldRef<"cat_weight_logs", 'String'>
    readonly notes: FieldRef<"cat_weight_logs", 'String'>
    readonly measured_by: FieldRef<"cat_weight_logs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cat_weight_logs findUnique
   */
  export type cat_weight_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * Filter, which cat_weight_logs to fetch.
     */
    where: cat_weight_logsWhereUniqueInput
  }

  /**
   * cat_weight_logs findUniqueOrThrow
   */
  export type cat_weight_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * Filter, which cat_weight_logs to fetch.
     */
    where: cat_weight_logsWhereUniqueInput
  }

  /**
   * cat_weight_logs findFirst
   */
  export type cat_weight_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * Filter, which cat_weight_logs to fetch.
     */
    where?: cat_weight_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cat_weight_logs to fetch.
     */
    orderBy?: cat_weight_logsOrderByWithRelationInput | cat_weight_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cat_weight_logs.
     */
    cursor?: cat_weight_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cat_weight_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cat_weight_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cat_weight_logs.
     */
    distinct?: Cat_weight_logsScalarFieldEnum | Cat_weight_logsScalarFieldEnum[]
  }

  /**
   * cat_weight_logs findFirstOrThrow
   */
  export type cat_weight_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * Filter, which cat_weight_logs to fetch.
     */
    where?: cat_weight_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cat_weight_logs to fetch.
     */
    orderBy?: cat_weight_logsOrderByWithRelationInput | cat_weight_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cat_weight_logs.
     */
    cursor?: cat_weight_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cat_weight_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cat_weight_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cat_weight_logs.
     */
    distinct?: Cat_weight_logsScalarFieldEnum | Cat_weight_logsScalarFieldEnum[]
  }

  /**
   * cat_weight_logs findMany
   */
  export type cat_weight_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * Filter, which cat_weight_logs to fetch.
     */
    where?: cat_weight_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cat_weight_logs to fetch.
     */
    orderBy?: cat_weight_logsOrderByWithRelationInput | cat_weight_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cat_weight_logs.
     */
    cursor?: cat_weight_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cat_weight_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cat_weight_logs.
     */
    skip?: number
    distinct?: Cat_weight_logsScalarFieldEnum | Cat_weight_logsScalarFieldEnum[]
  }

  /**
   * cat_weight_logs create
   */
  export type cat_weight_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a cat_weight_logs.
     */
    data: XOR<cat_weight_logsCreateInput, cat_weight_logsUncheckedCreateInput>
  }

  /**
   * cat_weight_logs createMany
   */
  export type cat_weight_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cat_weight_logs.
     */
    data: cat_weight_logsCreateManyInput | cat_weight_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cat_weight_logs createManyAndReturn
   */
  export type cat_weight_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * The data used to create many cat_weight_logs.
     */
    data: cat_weight_logsCreateManyInput | cat_weight_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cat_weight_logs update
   */
  export type cat_weight_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a cat_weight_logs.
     */
    data: XOR<cat_weight_logsUpdateInput, cat_weight_logsUncheckedUpdateInput>
    /**
     * Choose, which cat_weight_logs to update.
     */
    where: cat_weight_logsWhereUniqueInput
  }

  /**
   * cat_weight_logs updateMany
   */
  export type cat_weight_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cat_weight_logs.
     */
    data: XOR<cat_weight_logsUpdateManyMutationInput, cat_weight_logsUncheckedUpdateManyInput>
    /**
     * Filter which cat_weight_logs to update
     */
    where?: cat_weight_logsWhereInput
    /**
     * Limit how many cat_weight_logs to update.
     */
    limit?: number
  }

  /**
   * cat_weight_logs updateManyAndReturn
   */
  export type cat_weight_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * The data used to update cat_weight_logs.
     */
    data: XOR<cat_weight_logsUpdateManyMutationInput, cat_weight_logsUncheckedUpdateManyInput>
    /**
     * Filter which cat_weight_logs to update
     */
    where?: cat_weight_logsWhereInput
    /**
     * Limit how many cat_weight_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cat_weight_logs upsert
   */
  export type cat_weight_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the cat_weight_logs to update in case it exists.
     */
    where: cat_weight_logsWhereUniqueInput
    /**
     * In case the cat_weight_logs found by the `where` argument doesn't exist, create a new cat_weight_logs with this data.
     */
    create: XOR<cat_weight_logsCreateInput, cat_weight_logsUncheckedCreateInput>
    /**
     * In case the cat_weight_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cat_weight_logsUpdateInput, cat_weight_logsUncheckedUpdateInput>
  }

  /**
   * cat_weight_logs delete
   */
  export type cat_weight_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
    /**
     * Filter which cat_weight_logs to delete.
     */
    where: cat_weight_logsWhereUniqueInput
  }

  /**
   * cat_weight_logs deleteMany
   */
  export type cat_weight_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cat_weight_logs to delete
     */
    where?: cat_weight_logsWhereInput
    /**
     * Limit how many cat_weight_logs to delete.
     */
    limit?: number
  }

  /**
   * cat_weight_logs.measuredBy
   */
  export type cat_weight_logs$measuredByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profiles
     */
    select?: profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profiles
     */
    omit?: profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profilesInclude<ExtArgs> | null
    where?: profilesWhereInput
  }

  /**
   * cat_weight_logs without action
   */
  export type cat_weight_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cat_weight_logs
     */
    select?: cat_weight_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cat_weight_logs
     */
    omit?: cat_weight_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cat_weight_logsInclude<ExtArgs> | null
  }


  /**
   * Model weight_goals
   */

  export type AggregateWeight_goals = {
    _count: Weight_goalsCountAggregateOutputType | null
    _avg: Weight_goalsAvgAggregateOutputType | null
    _sum: Weight_goalsSumAggregateOutputType | null
    _min: Weight_goalsMinAggregateOutputType | null
    _max: Weight_goalsMaxAggregateOutputType | null
  }

  export type Weight_goalsAvgAggregateOutputType = {
    target_weight: Decimal | null
    start_weight: Decimal | null
  }

  export type Weight_goalsSumAggregateOutputType = {
    target_weight: Decimal | null
    start_weight: Decimal | null
  }

  export type Weight_goalsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    cat_id: string | null
    goal_name: string | null
    target_weight: Decimal | null
    target_date: Date | null
    start_weight: Decimal | null
    unit: string | null
    status: string | null
    notes: string | null
    created_by: string | null
  }

  export type Weight_goalsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    updated_at: Date | null
    cat_id: string | null
    goal_name: string | null
    target_weight: Decimal | null
    target_date: Date | null
    start_weight: Decimal | null
    unit: string | null
    status: string | null
    notes: string | null
    created_by: string | null
  }

  export type Weight_goalsCountAggregateOutputType = {
    id: number
    created_at: number
    updated_at: number
    cat_id: number
    goal_name: number
    target_weight: number
    target_date: number
    start_weight: number
    unit: number
    status: number
    notes: number
    created_by: number
    _all: number
  }


  export type Weight_goalsAvgAggregateInputType = {
    target_weight?: true
    start_weight?: true
  }

  export type Weight_goalsSumAggregateInputType = {
    target_weight?: true
    start_weight?: true
  }

  export type Weight_goalsMinAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    cat_id?: true
    goal_name?: true
    target_weight?: true
    target_date?: true
    start_weight?: true
    unit?: true
    status?: true
    notes?: true
    created_by?: true
  }

  export type Weight_goalsMaxAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    cat_id?: true
    goal_name?: true
    target_weight?: true
    target_date?: true
    start_weight?: true
    unit?: true
    status?: true
    notes?: true
    created_by?: true
  }

  export type Weight_goalsCountAggregateInputType = {
    id?: true
    created_at?: true
    updated_at?: true
    cat_id?: true
    goal_name?: true
    target_weight?: true
    target_date?: true
    start_weight?: true
    unit?: true
    status?: true
    notes?: true
    created_by?: true
    _all?: true
  }

  export type Weight_goalsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which weight_goals to aggregate.
     */
    where?: weight_goalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goals to fetch.
     */
    orderBy?: weight_goalsOrderByWithRelationInput | weight_goalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: weight_goalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned weight_goals
    **/
    _count?: true | Weight_goalsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Weight_goalsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Weight_goalsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Weight_goalsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Weight_goalsMaxAggregateInputType
  }

  export type GetWeight_goalsAggregateType<T extends Weight_goalsAggregateArgs> = {
        [P in keyof T & keyof AggregateWeight_goals]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWeight_goals[P]>
      : GetScalarType<T[P], AggregateWeight_goals[P]>
  }




  export type weight_goalsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: weight_goalsWhereInput
    orderBy?: weight_goalsOrderByWithAggregationInput | weight_goalsOrderByWithAggregationInput[]
    by: Weight_goalsScalarFieldEnum[] | Weight_goalsScalarFieldEnum
    having?: weight_goalsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Weight_goalsCountAggregateInputType | true
    _avg?: Weight_goalsAvgAggregateInputType
    _sum?: Weight_goalsSumAggregateInputType
    _min?: Weight_goalsMinAggregateInputType
    _max?: Weight_goalsMaxAggregateInputType
  }

  export type Weight_goalsGroupByOutputType = {
    id: string
    created_at: Date
    updated_at: Date
    cat_id: string
    goal_name: string
    target_weight: Decimal
    target_date: Date | null
    start_weight: Decimal | null
    unit: string
    status: string
    notes: string | null
    created_by: string
    _count: Weight_goalsCountAggregateOutputType | null
    _avg: Weight_goalsAvgAggregateOutputType | null
    _sum: Weight_goalsSumAggregateOutputType | null
    _min: Weight_goalsMinAggregateOutputType | null
    _max: Weight_goalsMaxAggregateOutputType | null
  }

  type GetWeight_goalsGroupByPayload<T extends weight_goalsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Weight_goalsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Weight_goalsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Weight_goalsGroupByOutputType[P]>
            : GetScalarType<T[P], Weight_goalsGroupByOutputType[P]>
        }
      >
    >


  export type weight_goalsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    goal_name?: boolean
    target_weight?: boolean
    target_date?: boolean
    start_weight?: boolean
    unit?: boolean
    status?: boolean
    notes?: boolean
    created_by?: boolean
    milestones?: boolean | weight_goals$milestonesArgs<ExtArgs>
    cat?: boolean | catsDefaultArgs<ExtArgs>
    createdBy?: boolean | profilesDefaultArgs<ExtArgs>
    _count?: boolean | Weight_goalsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["weight_goals"]>

  export type weight_goalsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    goal_name?: boolean
    target_weight?: boolean
    target_date?: boolean
    start_weight?: boolean
    unit?: boolean
    status?: boolean
    notes?: boolean
    created_by?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    createdBy?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["weight_goals"]>

  export type weight_goalsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    goal_name?: boolean
    target_weight?: boolean
    target_date?: boolean
    start_weight?: boolean
    unit?: boolean
    status?: boolean
    notes?: boolean
    created_by?: boolean
    cat?: boolean | catsDefaultArgs<ExtArgs>
    createdBy?: boolean | profilesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["weight_goals"]>

  export type weight_goalsSelectScalar = {
    id?: boolean
    created_at?: boolean
    updated_at?: boolean
    cat_id?: boolean
    goal_name?: boolean
    target_weight?: boolean
    target_date?: boolean
    start_weight?: boolean
    unit?: boolean
    status?: boolean
    notes?: boolean
    created_by?: boolean
  }

  export type weight_goalsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "updated_at" | "cat_id" | "goal_name" | "target_weight" | "target_date" | "start_weight" | "unit" | "status" | "notes" | "created_by", ExtArgs["result"]["weight_goals"]>
  export type weight_goalsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    milestones?: boolean | weight_goals$milestonesArgs<ExtArgs>
    cat?: boolean | catsDefaultArgs<ExtArgs>
    createdBy?: boolean | profilesDefaultArgs<ExtArgs>
    _count?: boolean | Weight_goalsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type weight_goalsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    createdBy?: boolean | profilesDefaultArgs<ExtArgs>
  }
  export type weight_goalsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cat?: boolean | catsDefaultArgs<ExtArgs>
    createdBy?: boolean | profilesDefaultArgs<ExtArgs>
  }

  export type $weight_goalsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "weight_goals"
    objects: {
      milestones: Prisma.$weight_goal_milestonesPayload<ExtArgs>[]
      cat: Prisma.$catsPayload<ExtArgs>
      createdBy: Prisma.$profilesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      updated_at: Date
      cat_id: string
      goal_name: string
      target_weight: Prisma.Decimal
      target_date: Date | null
      start_weight: Prisma.Decimal | null
      unit: string
      status: string
      notes: string | null
      created_by: string
    }, ExtArgs["result"]["weight_goals"]>
    composites: {}
  }

  type weight_goalsGetPayload<S extends boolean | null | undefined | weight_goalsDefaultArgs> = $Result.GetResult<Prisma.$weight_goalsPayload, S>

  type weight_goalsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<weight_goalsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Weight_goalsCountAggregateInputType | true
    }

  export interface weight_goalsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['weight_goals'], meta: { name: 'weight_goals' } }
    /**
     * Find zero or one Weight_goals that matches the filter.
     * @param {weight_goalsFindUniqueArgs} args - Arguments to find a Weight_goals
     * @example
     * // Get one Weight_goals
     * const weight_goals = await prisma.weight_goals.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends weight_goalsFindUniqueArgs>(args: SelectSubset<T, weight_goalsFindUniqueArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Weight_goals that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {weight_goalsFindUniqueOrThrowArgs} args - Arguments to find a Weight_goals
     * @example
     * // Get one Weight_goals
     * const weight_goals = await prisma.weight_goals.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends weight_goalsFindUniqueOrThrowArgs>(args: SelectSubset<T, weight_goalsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Weight_goals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goalsFindFirstArgs} args - Arguments to find a Weight_goals
     * @example
     * // Get one Weight_goals
     * const weight_goals = await prisma.weight_goals.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends weight_goalsFindFirstArgs>(args?: SelectSubset<T, weight_goalsFindFirstArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Weight_goals that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goalsFindFirstOrThrowArgs} args - Arguments to find a Weight_goals
     * @example
     * // Get one Weight_goals
     * const weight_goals = await prisma.weight_goals.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends weight_goalsFindFirstOrThrowArgs>(args?: SelectSubset<T, weight_goalsFindFirstOrThrowArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Weight_goals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goalsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Weight_goals
     * const weight_goals = await prisma.weight_goals.findMany()
     * 
     * // Get first 10 Weight_goals
     * const weight_goals = await prisma.weight_goals.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weight_goalsWithIdOnly = await prisma.weight_goals.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends weight_goalsFindManyArgs>(args?: SelectSubset<T, weight_goalsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Weight_goals.
     * @param {weight_goalsCreateArgs} args - Arguments to create a Weight_goals.
     * @example
     * // Create one Weight_goals
     * const Weight_goals = await prisma.weight_goals.create({
     *   data: {
     *     // ... data to create a Weight_goals
     *   }
     * })
     * 
     */
    create<T extends weight_goalsCreateArgs>(args: SelectSubset<T, weight_goalsCreateArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Weight_goals.
     * @param {weight_goalsCreateManyArgs} args - Arguments to create many Weight_goals.
     * @example
     * // Create many Weight_goals
     * const weight_goals = await prisma.weight_goals.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends weight_goalsCreateManyArgs>(args?: SelectSubset<T, weight_goalsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Weight_goals and returns the data saved in the database.
     * @param {weight_goalsCreateManyAndReturnArgs} args - Arguments to create many Weight_goals.
     * @example
     * // Create many Weight_goals
     * const weight_goals = await prisma.weight_goals.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Weight_goals and only return the `id`
     * const weight_goalsWithIdOnly = await prisma.weight_goals.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends weight_goalsCreateManyAndReturnArgs>(args?: SelectSubset<T, weight_goalsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Weight_goals.
     * @param {weight_goalsDeleteArgs} args - Arguments to delete one Weight_goals.
     * @example
     * // Delete one Weight_goals
     * const Weight_goals = await prisma.weight_goals.delete({
     *   where: {
     *     // ... filter to delete one Weight_goals
     *   }
     * })
     * 
     */
    delete<T extends weight_goalsDeleteArgs>(args: SelectSubset<T, weight_goalsDeleteArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Weight_goals.
     * @param {weight_goalsUpdateArgs} args - Arguments to update one Weight_goals.
     * @example
     * // Update one Weight_goals
     * const weight_goals = await prisma.weight_goals.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends weight_goalsUpdateArgs>(args: SelectSubset<T, weight_goalsUpdateArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Weight_goals.
     * @param {weight_goalsDeleteManyArgs} args - Arguments to filter Weight_goals to delete.
     * @example
     * // Delete a few Weight_goals
     * const { count } = await prisma.weight_goals.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends weight_goalsDeleteManyArgs>(args?: SelectSubset<T, weight_goalsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Weight_goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goalsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Weight_goals
     * const weight_goals = await prisma.weight_goals.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends weight_goalsUpdateManyArgs>(args: SelectSubset<T, weight_goalsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Weight_goals and returns the data updated in the database.
     * @param {weight_goalsUpdateManyAndReturnArgs} args - Arguments to update many Weight_goals.
     * @example
     * // Update many Weight_goals
     * const weight_goals = await prisma.weight_goals.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Weight_goals and only return the `id`
     * const weight_goalsWithIdOnly = await prisma.weight_goals.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends weight_goalsUpdateManyAndReturnArgs>(args: SelectSubset<T, weight_goalsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Weight_goals.
     * @param {weight_goalsUpsertArgs} args - Arguments to update or create a Weight_goals.
     * @example
     * // Update or create a Weight_goals
     * const weight_goals = await prisma.weight_goals.upsert({
     *   create: {
     *     // ... data to create a Weight_goals
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Weight_goals we want to update
     *   }
     * })
     */
    upsert<T extends weight_goalsUpsertArgs>(args: SelectSubset<T, weight_goalsUpsertArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Weight_goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goalsCountArgs} args - Arguments to filter Weight_goals to count.
     * @example
     * // Count the number of Weight_goals
     * const count = await prisma.weight_goals.count({
     *   where: {
     *     // ... the filter for the Weight_goals we want to count
     *   }
     * })
    **/
    count<T extends weight_goalsCountArgs>(
      args?: Subset<T, weight_goalsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Weight_goalsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Weight_goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Weight_goalsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Weight_goalsAggregateArgs>(args: Subset<T, Weight_goalsAggregateArgs>): Prisma.PrismaPromise<GetWeight_goalsAggregateType<T>>

    /**
     * Group by Weight_goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goalsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends weight_goalsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: weight_goalsGroupByArgs['orderBy'] }
        : { orderBy?: weight_goalsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, weight_goalsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWeight_goalsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the weight_goals model
   */
  readonly fields: weight_goalsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for weight_goals.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__weight_goalsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    milestones<T extends weight_goals$milestonesArgs<ExtArgs> = {}>(args?: Subset<T, weight_goals$milestonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cat<T extends catsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, catsDefaultArgs<ExtArgs>>): Prisma__catsClient<$Result.GetResult<Prisma.$catsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends profilesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, profilesDefaultArgs<ExtArgs>>): Prisma__profilesClient<$Result.GetResult<Prisma.$profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the weight_goals model
   */
  interface weight_goalsFieldRefs {
    readonly id: FieldRef<"weight_goals", 'String'>
    readonly created_at: FieldRef<"weight_goals", 'DateTime'>
    readonly updated_at: FieldRef<"weight_goals", 'DateTime'>
    readonly cat_id: FieldRef<"weight_goals", 'String'>
    readonly goal_name: FieldRef<"weight_goals", 'String'>
    readonly target_weight: FieldRef<"weight_goals", 'Decimal'>
    readonly target_date: FieldRef<"weight_goals", 'DateTime'>
    readonly start_weight: FieldRef<"weight_goals", 'Decimal'>
    readonly unit: FieldRef<"weight_goals", 'String'>
    readonly status: FieldRef<"weight_goals", 'String'>
    readonly notes: FieldRef<"weight_goals", 'String'>
    readonly created_by: FieldRef<"weight_goals", 'String'>
  }
    

  // Custom InputTypes
  /**
   * weight_goals findUnique
   */
  export type weight_goalsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * Filter, which weight_goals to fetch.
     */
    where: weight_goalsWhereUniqueInput
  }

  /**
   * weight_goals findUniqueOrThrow
   */
  export type weight_goalsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * Filter, which weight_goals to fetch.
     */
    where: weight_goalsWhereUniqueInput
  }

  /**
   * weight_goals findFirst
   */
  export type weight_goalsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * Filter, which weight_goals to fetch.
     */
    where?: weight_goalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goals to fetch.
     */
    orderBy?: weight_goalsOrderByWithRelationInput | weight_goalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for weight_goals.
     */
    cursor?: weight_goalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of weight_goals.
     */
    distinct?: Weight_goalsScalarFieldEnum | Weight_goalsScalarFieldEnum[]
  }

  /**
   * weight_goals findFirstOrThrow
   */
  export type weight_goalsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * Filter, which weight_goals to fetch.
     */
    where?: weight_goalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goals to fetch.
     */
    orderBy?: weight_goalsOrderByWithRelationInput | weight_goalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for weight_goals.
     */
    cursor?: weight_goalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of weight_goals.
     */
    distinct?: Weight_goalsScalarFieldEnum | Weight_goalsScalarFieldEnum[]
  }

  /**
   * weight_goals findMany
   */
  export type weight_goalsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * Filter, which weight_goals to fetch.
     */
    where?: weight_goalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goals to fetch.
     */
    orderBy?: weight_goalsOrderByWithRelationInput | weight_goalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing weight_goals.
     */
    cursor?: weight_goalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goals.
     */
    skip?: number
    distinct?: Weight_goalsScalarFieldEnum | Weight_goalsScalarFieldEnum[]
  }

  /**
   * weight_goals create
   */
  export type weight_goalsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * The data needed to create a weight_goals.
     */
    data: XOR<weight_goalsCreateInput, weight_goalsUncheckedCreateInput>
  }

  /**
   * weight_goals createMany
   */
  export type weight_goalsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many weight_goals.
     */
    data: weight_goalsCreateManyInput | weight_goalsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * weight_goals createManyAndReturn
   */
  export type weight_goalsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * The data used to create many weight_goals.
     */
    data: weight_goalsCreateManyInput | weight_goalsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * weight_goals update
   */
  export type weight_goalsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * The data needed to update a weight_goals.
     */
    data: XOR<weight_goalsUpdateInput, weight_goalsUncheckedUpdateInput>
    /**
     * Choose, which weight_goals to update.
     */
    where: weight_goalsWhereUniqueInput
  }

  /**
   * weight_goals updateMany
   */
  export type weight_goalsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update weight_goals.
     */
    data: XOR<weight_goalsUpdateManyMutationInput, weight_goalsUncheckedUpdateManyInput>
    /**
     * Filter which weight_goals to update
     */
    where?: weight_goalsWhereInput
    /**
     * Limit how many weight_goals to update.
     */
    limit?: number
  }

  /**
   * weight_goals updateManyAndReturn
   */
  export type weight_goalsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * The data used to update weight_goals.
     */
    data: XOR<weight_goalsUpdateManyMutationInput, weight_goalsUncheckedUpdateManyInput>
    /**
     * Filter which weight_goals to update
     */
    where?: weight_goalsWhereInput
    /**
     * Limit how many weight_goals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * weight_goals upsert
   */
  export type weight_goalsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * The filter to search for the weight_goals to update in case it exists.
     */
    where: weight_goalsWhereUniqueInput
    /**
     * In case the weight_goals found by the `where` argument doesn't exist, create a new weight_goals with this data.
     */
    create: XOR<weight_goalsCreateInput, weight_goalsUncheckedCreateInput>
    /**
     * In case the weight_goals was found with the provided `where` argument, update it with this data.
     */
    update: XOR<weight_goalsUpdateInput, weight_goalsUncheckedUpdateInput>
  }

  /**
   * weight_goals delete
   */
  export type weight_goalsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
    /**
     * Filter which weight_goals to delete.
     */
    where: weight_goalsWhereUniqueInput
  }

  /**
   * weight_goals deleteMany
   */
  export type weight_goalsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which weight_goals to delete
     */
    where?: weight_goalsWhereInput
    /**
     * Limit how many weight_goals to delete.
     */
    limit?: number
  }

  /**
   * weight_goals.milestones
   */
  export type weight_goals$milestonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    where?: weight_goal_milestonesWhereInput
    orderBy?: weight_goal_milestonesOrderByWithRelationInput | weight_goal_milestonesOrderByWithRelationInput[]
    cursor?: weight_goal_milestonesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Weight_goal_milestonesScalarFieldEnum | Weight_goal_milestonesScalarFieldEnum[]
  }

  /**
   * weight_goals without action
   */
  export type weight_goalsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goals
     */
    select?: weight_goalsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goals
     */
    omit?: weight_goalsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goalsInclude<ExtArgs> | null
  }


  /**
   * Model weight_goal_milestones
   */

  export type AggregateWeight_goal_milestones = {
    _count: Weight_goal_milestonesCountAggregateOutputType | null
    _avg: Weight_goal_milestonesAvgAggregateOutputType | null
    _sum: Weight_goal_milestonesSumAggregateOutputType | null
    _min: Weight_goal_milestonesMinAggregateOutputType | null
    _max: Weight_goal_milestonesMaxAggregateOutputType | null
  }

  export type Weight_goal_milestonesAvgAggregateOutputType = {
    weight: Decimal | null
  }

  export type Weight_goal_milestonesSumAggregateOutputType = {
    weight: Decimal | null
  }

  export type Weight_goal_milestonesMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    goal_id: string | null
    weight: Decimal | null
    date: Date | null
    notes: string | null
  }

  export type Weight_goal_milestonesMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    goal_id: string | null
    weight: Decimal | null
    date: Date | null
    notes: string | null
  }

  export type Weight_goal_milestonesCountAggregateOutputType = {
    id: number
    created_at: number
    goal_id: number
    weight: number
    date: number
    notes: number
    _all: number
  }


  export type Weight_goal_milestonesAvgAggregateInputType = {
    weight?: true
  }

  export type Weight_goal_milestonesSumAggregateInputType = {
    weight?: true
  }

  export type Weight_goal_milestonesMinAggregateInputType = {
    id?: true
    created_at?: true
    goal_id?: true
    weight?: true
    date?: true
    notes?: true
  }

  export type Weight_goal_milestonesMaxAggregateInputType = {
    id?: true
    created_at?: true
    goal_id?: true
    weight?: true
    date?: true
    notes?: true
  }

  export type Weight_goal_milestonesCountAggregateInputType = {
    id?: true
    created_at?: true
    goal_id?: true
    weight?: true
    date?: true
    notes?: true
    _all?: true
  }

  export type Weight_goal_milestonesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which weight_goal_milestones to aggregate.
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goal_milestones to fetch.
     */
    orderBy?: weight_goal_milestonesOrderByWithRelationInput | weight_goal_milestonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: weight_goal_milestonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goal_milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goal_milestones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned weight_goal_milestones
    **/
    _count?: true | Weight_goal_milestonesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Weight_goal_milestonesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Weight_goal_milestonesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Weight_goal_milestonesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Weight_goal_milestonesMaxAggregateInputType
  }

  export type GetWeight_goal_milestonesAggregateType<T extends Weight_goal_milestonesAggregateArgs> = {
        [P in keyof T & keyof AggregateWeight_goal_milestones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWeight_goal_milestones[P]>
      : GetScalarType<T[P], AggregateWeight_goal_milestones[P]>
  }




  export type weight_goal_milestonesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: weight_goal_milestonesWhereInput
    orderBy?: weight_goal_milestonesOrderByWithAggregationInput | weight_goal_milestonesOrderByWithAggregationInput[]
    by: Weight_goal_milestonesScalarFieldEnum[] | Weight_goal_milestonesScalarFieldEnum
    having?: weight_goal_milestonesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Weight_goal_milestonesCountAggregateInputType | true
    _avg?: Weight_goal_milestonesAvgAggregateInputType
    _sum?: Weight_goal_milestonesSumAggregateInputType
    _min?: Weight_goal_milestonesMinAggregateInputType
    _max?: Weight_goal_milestonesMaxAggregateInputType
  }

  export type Weight_goal_milestonesGroupByOutputType = {
    id: string
    created_at: Date
    goal_id: string
    weight: Decimal
    date: Date
    notes: string | null
    _count: Weight_goal_milestonesCountAggregateOutputType | null
    _avg: Weight_goal_milestonesAvgAggregateOutputType | null
    _sum: Weight_goal_milestonesSumAggregateOutputType | null
    _min: Weight_goal_milestonesMinAggregateOutputType | null
    _max: Weight_goal_milestonesMaxAggregateOutputType | null
  }

  type GetWeight_goal_milestonesGroupByPayload<T extends weight_goal_milestonesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Weight_goal_milestonesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Weight_goal_milestonesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Weight_goal_milestonesGroupByOutputType[P]>
            : GetScalarType<T[P], Weight_goal_milestonesGroupByOutputType[P]>
        }
      >
    >


  export type weight_goal_milestonesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    goal_id?: boolean
    weight?: boolean
    date?: boolean
    notes?: boolean
    goal?: boolean | weight_goalsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["weight_goal_milestones"]>

  export type weight_goal_milestonesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    goal_id?: boolean
    weight?: boolean
    date?: boolean
    notes?: boolean
    goal?: boolean | weight_goalsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["weight_goal_milestones"]>

  export type weight_goal_milestonesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    goal_id?: boolean
    weight?: boolean
    date?: boolean
    notes?: boolean
    goal?: boolean | weight_goalsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["weight_goal_milestones"]>

  export type weight_goal_milestonesSelectScalar = {
    id?: boolean
    created_at?: boolean
    goal_id?: boolean
    weight?: boolean
    date?: boolean
    notes?: boolean
  }

  export type weight_goal_milestonesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "goal_id" | "weight" | "date" | "notes", ExtArgs["result"]["weight_goal_milestones"]>
  export type weight_goal_milestonesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goal?: boolean | weight_goalsDefaultArgs<ExtArgs>
  }
  export type weight_goal_milestonesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goal?: boolean | weight_goalsDefaultArgs<ExtArgs>
  }
  export type weight_goal_milestonesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goal?: boolean | weight_goalsDefaultArgs<ExtArgs>
  }

  export type $weight_goal_milestonesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "weight_goal_milestones"
    objects: {
      goal: Prisma.$weight_goalsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      goal_id: string
      weight: Prisma.Decimal
      date: Date
      notes: string | null
    }, ExtArgs["result"]["weight_goal_milestones"]>
    composites: {}
  }

  type weight_goal_milestonesGetPayload<S extends boolean | null | undefined | weight_goal_milestonesDefaultArgs> = $Result.GetResult<Prisma.$weight_goal_milestonesPayload, S>

  type weight_goal_milestonesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<weight_goal_milestonesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Weight_goal_milestonesCountAggregateInputType | true
    }

  export interface weight_goal_milestonesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['weight_goal_milestones'], meta: { name: 'weight_goal_milestones' } }
    /**
     * Find zero or one Weight_goal_milestones that matches the filter.
     * @param {weight_goal_milestonesFindUniqueArgs} args - Arguments to find a Weight_goal_milestones
     * @example
     * // Get one Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends weight_goal_milestonesFindUniqueArgs>(args: SelectSubset<T, weight_goal_milestonesFindUniqueArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Weight_goal_milestones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {weight_goal_milestonesFindUniqueOrThrowArgs} args - Arguments to find a Weight_goal_milestones
     * @example
     * // Get one Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends weight_goal_milestonesFindUniqueOrThrowArgs>(args: SelectSubset<T, weight_goal_milestonesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Weight_goal_milestones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goal_milestonesFindFirstArgs} args - Arguments to find a Weight_goal_milestones
     * @example
     * // Get one Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends weight_goal_milestonesFindFirstArgs>(args?: SelectSubset<T, weight_goal_milestonesFindFirstArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Weight_goal_milestones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goal_milestonesFindFirstOrThrowArgs} args - Arguments to find a Weight_goal_milestones
     * @example
     * // Get one Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends weight_goal_milestonesFindFirstOrThrowArgs>(args?: SelectSubset<T, weight_goal_milestonesFindFirstOrThrowArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Weight_goal_milestones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goal_milestonesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.findMany()
     * 
     * // Get first 10 Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weight_goal_milestonesWithIdOnly = await prisma.weight_goal_milestones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends weight_goal_milestonesFindManyArgs>(args?: SelectSubset<T, weight_goal_milestonesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Weight_goal_milestones.
     * @param {weight_goal_milestonesCreateArgs} args - Arguments to create a Weight_goal_milestones.
     * @example
     * // Create one Weight_goal_milestones
     * const Weight_goal_milestones = await prisma.weight_goal_milestones.create({
     *   data: {
     *     // ... data to create a Weight_goal_milestones
     *   }
     * })
     * 
     */
    create<T extends weight_goal_milestonesCreateArgs>(args: SelectSubset<T, weight_goal_milestonesCreateArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Weight_goal_milestones.
     * @param {weight_goal_milestonesCreateManyArgs} args - Arguments to create many Weight_goal_milestones.
     * @example
     * // Create many Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends weight_goal_milestonesCreateManyArgs>(args?: SelectSubset<T, weight_goal_milestonesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Weight_goal_milestones and returns the data saved in the database.
     * @param {weight_goal_milestonesCreateManyAndReturnArgs} args - Arguments to create many Weight_goal_milestones.
     * @example
     * // Create many Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Weight_goal_milestones and only return the `id`
     * const weight_goal_milestonesWithIdOnly = await prisma.weight_goal_milestones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends weight_goal_milestonesCreateManyAndReturnArgs>(args?: SelectSubset<T, weight_goal_milestonesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Weight_goal_milestones.
     * @param {weight_goal_milestonesDeleteArgs} args - Arguments to delete one Weight_goal_milestones.
     * @example
     * // Delete one Weight_goal_milestones
     * const Weight_goal_milestones = await prisma.weight_goal_milestones.delete({
     *   where: {
     *     // ... filter to delete one Weight_goal_milestones
     *   }
     * })
     * 
     */
    delete<T extends weight_goal_milestonesDeleteArgs>(args: SelectSubset<T, weight_goal_milestonesDeleteArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Weight_goal_milestones.
     * @param {weight_goal_milestonesUpdateArgs} args - Arguments to update one Weight_goal_milestones.
     * @example
     * // Update one Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends weight_goal_milestonesUpdateArgs>(args: SelectSubset<T, weight_goal_milestonesUpdateArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Weight_goal_milestones.
     * @param {weight_goal_milestonesDeleteManyArgs} args - Arguments to filter Weight_goal_milestones to delete.
     * @example
     * // Delete a few Weight_goal_milestones
     * const { count } = await prisma.weight_goal_milestones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends weight_goal_milestonesDeleteManyArgs>(args?: SelectSubset<T, weight_goal_milestonesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Weight_goal_milestones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goal_milestonesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends weight_goal_milestonesUpdateManyArgs>(args: SelectSubset<T, weight_goal_milestonesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Weight_goal_milestones and returns the data updated in the database.
     * @param {weight_goal_milestonesUpdateManyAndReturnArgs} args - Arguments to update many Weight_goal_milestones.
     * @example
     * // Update many Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Weight_goal_milestones and only return the `id`
     * const weight_goal_milestonesWithIdOnly = await prisma.weight_goal_milestones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends weight_goal_milestonesUpdateManyAndReturnArgs>(args: SelectSubset<T, weight_goal_milestonesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Weight_goal_milestones.
     * @param {weight_goal_milestonesUpsertArgs} args - Arguments to update or create a Weight_goal_milestones.
     * @example
     * // Update or create a Weight_goal_milestones
     * const weight_goal_milestones = await prisma.weight_goal_milestones.upsert({
     *   create: {
     *     // ... data to create a Weight_goal_milestones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Weight_goal_milestones we want to update
     *   }
     * })
     */
    upsert<T extends weight_goal_milestonesUpsertArgs>(args: SelectSubset<T, weight_goal_milestonesUpsertArgs<ExtArgs>>): Prisma__weight_goal_milestonesClient<$Result.GetResult<Prisma.$weight_goal_milestonesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Weight_goal_milestones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goal_milestonesCountArgs} args - Arguments to filter Weight_goal_milestones to count.
     * @example
     * // Count the number of Weight_goal_milestones
     * const count = await prisma.weight_goal_milestones.count({
     *   where: {
     *     // ... the filter for the Weight_goal_milestones we want to count
     *   }
     * })
    **/
    count<T extends weight_goal_milestonesCountArgs>(
      args?: Subset<T, weight_goal_milestonesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Weight_goal_milestonesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Weight_goal_milestones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Weight_goal_milestonesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Weight_goal_milestonesAggregateArgs>(args: Subset<T, Weight_goal_milestonesAggregateArgs>): Prisma.PrismaPromise<GetWeight_goal_milestonesAggregateType<T>>

    /**
     * Group by Weight_goal_milestones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weight_goal_milestonesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends weight_goal_milestonesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: weight_goal_milestonesGroupByArgs['orderBy'] }
        : { orderBy?: weight_goal_milestonesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, weight_goal_milestonesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWeight_goal_milestonesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the weight_goal_milestones model
   */
  readonly fields: weight_goal_milestonesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for weight_goal_milestones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__weight_goal_milestonesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    goal<T extends weight_goalsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, weight_goalsDefaultArgs<ExtArgs>>): Prisma__weight_goalsClient<$Result.GetResult<Prisma.$weight_goalsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the weight_goal_milestones model
   */
  interface weight_goal_milestonesFieldRefs {
    readonly id: FieldRef<"weight_goal_milestones", 'String'>
    readonly created_at: FieldRef<"weight_goal_milestones", 'DateTime'>
    readonly goal_id: FieldRef<"weight_goal_milestones", 'String'>
    readonly weight: FieldRef<"weight_goal_milestones", 'Decimal'>
    readonly date: FieldRef<"weight_goal_milestones", 'DateTime'>
    readonly notes: FieldRef<"weight_goal_milestones", 'String'>
  }
    

  // Custom InputTypes
  /**
   * weight_goal_milestones findUnique
   */
  export type weight_goal_milestonesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * Filter, which weight_goal_milestones to fetch.
     */
    where: weight_goal_milestonesWhereUniqueInput
  }

  /**
   * weight_goal_milestones findUniqueOrThrow
   */
  export type weight_goal_milestonesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * Filter, which weight_goal_milestones to fetch.
     */
    where: weight_goal_milestonesWhereUniqueInput
  }

  /**
   * weight_goal_milestones findFirst
   */
  export type weight_goal_milestonesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * Filter, which weight_goal_milestones to fetch.
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goal_milestones to fetch.
     */
    orderBy?: weight_goal_milestonesOrderByWithRelationInput | weight_goal_milestonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for weight_goal_milestones.
     */
    cursor?: weight_goal_milestonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goal_milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goal_milestones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of weight_goal_milestones.
     */
    distinct?: Weight_goal_milestonesScalarFieldEnum | Weight_goal_milestonesScalarFieldEnum[]
  }

  /**
   * weight_goal_milestones findFirstOrThrow
   */
  export type weight_goal_milestonesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * Filter, which weight_goal_milestones to fetch.
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goal_milestones to fetch.
     */
    orderBy?: weight_goal_milestonesOrderByWithRelationInput | weight_goal_milestonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for weight_goal_milestones.
     */
    cursor?: weight_goal_milestonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goal_milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goal_milestones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of weight_goal_milestones.
     */
    distinct?: Weight_goal_milestonesScalarFieldEnum | Weight_goal_milestonesScalarFieldEnum[]
  }

  /**
   * weight_goal_milestones findMany
   */
  export type weight_goal_milestonesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * Filter, which weight_goal_milestones to fetch.
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weight_goal_milestones to fetch.
     */
    orderBy?: weight_goal_milestonesOrderByWithRelationInput | weight_goal_milestonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing weight_goal_milestones.
     */
    cursor?: weight_goal_milestonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weight_goal_milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weight_goal_milestones.
     */
    skip?: number
    distinct?: Weight_goal_milestonesScalarFieldEnum | Weight_goal_milestonesScalarFieldEnum[]
  }

  /**
   * weight_goal_milestones create
   */
  export type weight_goal_milestonesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * The data needed to create a weight_goal_milestones.
     */
    data: XOR<weight_goal_milestonesCreateInput, weight_goal_milestonesUncheckedCreateInput>
  }

  /**
   * weight_goal_milestones createMany
   */
  export type weight_goal_milestonesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many weight_goal_milestones.
     */
    data: weight_goal_milestonesCreateManyInput | weight_goal_milestonesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * weight_goal_milestones createManyAndReturn
   */
  export type weight_goal_milestonesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * The data used to create many weight_goal_milestones.
     */
    data: weight_goal_milestonesCreateManyInput | weight_goal_milestonesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * weight_goal_milestones update
   */
  export type weight_goal_milestonesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * The data needed to update a weight_goal_milestones.
     */
    data: XOR<weight_goal_milestonesUpdateInput, weight_goal_milestonesUncheckedUpdateInput>
    /**
     * Choose, which weight_goal_milestones to update.
     */
    where: weight_goal_milestonesWhereUniqueInput
  }

  /**
   * weight_goal_milestones updateMany
   */
  export type weight_goal_milestonesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update weight_goal_milestones.
     */
    data: XOR<weight_goal_milestonesUpdateManyMutationInput, weight_goal_milestonesUncheckedUpdateManyInput>
    /**
     * Filter which weight_goal_milestones to update
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * Limit how many weight_goal_milestones to update.
     */
    limit?: number
  }

  /**
   * weight_goal_milestones updateManyAndReturn
   */
  export type weight_goal_milestonesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * The data used to update weight_goal_milestones.
     */
    data: XOR<weight_goal_milestonesUpdateManyMutationInput, weight_goal_milestonesUncheckedUpdateManyInput>
    /**
     * Filter which weight_goal_milestones to update
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * Limit how many weight_goal_milestones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * weight_goal_milestones upsert
   */
  export type weight_goal_milestonesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * The filter to search for the weight_goal_milestones to update in case it exists.
     */
    where: weight_goal_milestonesWhereUniqueInput
    /**
     * In case the weight_goal_milestones found by the `where` argument doesn't exist, create a new weight_goal_milestones with this data.
     */
    create: XOR<weight_goal_milestonesCreateInput, weight_goal_milestonesUncheckedCreateInput>
    /**
     * In case the weight_goal_milestones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<weight_goal_milestonesUpdateInput, weight_goal_milestonesUncheckedUpdateInput>
  }

  /**
   * weight_goal_milestones delete
   */
  export type weight_goal_milestonesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
    /**
     * Filter which weight_goal_milestones to delete.
     */
    where: weight_goal_milestonesWhereUniqueInput
  }

  /**
   * weight_goal_milestones deleteMany
   */
  export type weight_goal_milestonesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which weight_goal_milestones to delete
     */
    where?: weight_goal_milestonesWhereInput
    /**
     * Limit how many weight_goal_milestones to delete.
     */
    limit?: number
  }

  /**
   * weight_goal_milestones without action
   */
  export type weight_goal_milestonesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weight_goal_milestones
     */
    select?: weight_goal_milestonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weight_goal_milestones
     */
    omit?: weight_goal_milestonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: weight_goal_milestonesInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CatsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    name: 'name',
    birth_date: 'birth_date',
    weight: 'weight',
    household_id: 'household_id',
    owner_id: 'owner_id',
    portion_size: 'portion_size',
    portion_unit: 'portion_unit',
    photo_url: 'photo_url',
    restrictions: 'restrictions',
    notes: 'notes',
    feeding_interval: 'feeding_interval'
  };

  export type CatsScalarFieldEnum = (typeof CatsScalarFieldEnum)[keyof typeof CatsScalarFieldEnum]


  export const Household_membersScalarFieldEnum: {
    id: 'id',
    household_id: 'household_id',
    user_id: 'user_id',
    role: 'role',
    created_at: 'created_at'
  };

  export type Household_membersScalarFieldEnum = (typeof Household_membersScalarFieldEnum)[keyof typeof Household_membersScalarFieldEnum]


  export const HouseholdsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    name: 'name',
    description: 'description',
    owner_id: 'owner_id',
    inviteCode: 'inviteCode'
  };

  export type HouseholdsScalarFieldEnum = (typeof HouseholdsScalarFieldEnum)[keyof typeof HouseholdsScalarFieldEnum]


  export const ProfilesScalarFieldEnum: {
    id: 'id',
    updated_at: 'updated_at',
    username: 'username',
    full_name: 'full_name',
    avatar_url: 'avatar_url',
    email: 'email',
    timezone: 'timezone'
  };

  export type ProfilesScalarFieldEnum = (typeof ProfilesScalarFieldEnum)[keyof typeof ProfilesScalarFieldEnum]


  export const NotificationsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    user_id: 'user_id',
    title: 'title',
    message: 'message',
    type: 'type',
    is_read: 'is_read',
    metadata: 'metadata'
  };

  export type NotificationsScalarFieldEnum = (typeof NotificationsScalarFieldEnum)[keyof typeof NotificationsScalarFieldEnum]


  export const SchedulesScalarFieldEnum: {
    id: 'id',
    cat_id: 'cat_id',
    type: 'type',
    interval: 'interval',
    times: 'times',
    enabled: 'enabled',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type SchedulesScalarFieldEnum = (typeof SchedulesScalarFieldEnum)[keyof typeof SchedulesScalarFieldEnum]


  export const Feeding_logsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    cat_id: 'cat_id',
    household_id: 'household_id',
    meal_type: 'meal_type',
    amount: 'amount',
    unit: 'unit',
    notes: 'notes',
    fed_by: 'fed_by',
    fed_at: 'fed_at'
  };

  export type Feeding_logsScalarFieldEnum = (typeof Feeding_logsScalarFieldEnum)[keyof typeof Feeding_logsScalarFieldEnum]


  export const Schema_migrationsScalarFieldEnum: {
    version: 'version',
    dirty: 'dirty',
    applied_at: 'applied_at'
  };

  export type Schema_migrationsScalarFieldEnum = (typeof Schema_migrationsScalarFieldEnum)[keyof typeof Schema_migrationsScalarFieldEnum]


  export const Cat_weight_logsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    weight: 'weight',
    date: 'date',
    cat_id: 'cat_id',
    notes: 'notes',
    measured_by: 'measured_by'
  };

  export type Cat_weight_logsScalarFieldEnum = (typeof Cat_weight_logsScalarFieldEnum)[keyof typeof Cat_weight_logsScalarFieldEnum]


  export const Weight_goalsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    cat_id: 'cat_id',
    goal_name: 'goal_name',
    target_weight: 'target_weight',
    target_date: 'target_date',
    start_weight: 'start_weight',
    unit: 'unit',
    status: 'status',
    notes: 'notes',
    created_by: 'created_by'
  };

  export type Weight_goalsScalarFieldEnum = (typeof Weight_goalsScalarFieldEnum)[keyof typeof Weight_goalsScalarFieldEnum]


  export const Weight_goal_milestonesScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    goal_id: 'goal_id',
    weight: 'weight',
    date: 'date',
    notes: 'notes'
  };

  export type Weight_goal_milestonesScalarFieldEnum = (typeof Weight_goal_milestonesScalarFieldEnum)[keyof typeof Weight_goal_milestonesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type catsWhereInput = {
    AND?: catsWhereInput | catsWhereInput[]
    OR?: catsWhereInput[]
    NOT?: catsWhereInput | catsWhereInput[]
    id?: UuidFilter<"cats"> | string
    created_at?: DateTimeFilter<"cats"> | Date | string
    updated_at?: DateTimeFilter<"cats"> | Date | string
    name?: StringFilter<"cats"> | string
    birth_date?: DateTimeNullableFilter<"cats"> | Date | string | null
    weight?: DecimalNullableFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    household_id?: UuidFilter<"cats"> | string
    owner_id?: UuidFilter<"cats"> | string
    portion_size?: DecimalNullableFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    portion_unit?: StringNullableFilter<"cats"> | string | null
    photo_url?: StringNullableFilter<"cats"> | string | null
    restrictions?: StringNullableFilter<"cats"> | string | null
    notes?: StringNullableFilter<"cats"> | string | null
    feeding_interval?: IntNullableFilter<"cats"> | number | null
    household?: XOR<HouseholdsScalarRelationFilter, householdsWhereInput>
    owner?: XOR<ProfilesScalarRelationFilter, profilesWhereInput>
    feeding_logs?: Feeding_logsListRelationFilter
    schedules?: SchedulesListRelationFilter
    weight_logs?: Cat_weight_logsListRelationFilter
    weight_goals?: Weight_goalsListRelationFilter
  }

  export type catsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    birth_date?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    household_id?: SortOrder
    owner_id?: SortOrder
    portion_size?: SortOrderInput | SortOrder
    portion_unit?: SortOrderInput | SortOrder
    photo_url?: SortOrderInput | SortOrder
    restrictions?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    feeding_interval?: SortOrderInput | SortOrder
    household?: householdsOrderByWithRelationInput
    owner?: profilesOrderByWithRelationInput
    feeding_logs?: feeding_logsOrderByRelationAggregateInput
    schedules?: schedulesOrderByRelationAggregateInput
    weight_logs?: cat_weight_logsOrderByRelationAggregateInput
    weight_goals?: weight_goalsOrderByRelationAggregateInput
  }

  export type catsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: catsWhereInput | catsWhereInput[]
    OR?: catsWhereInput[]
    NOT?: catsWhereInput | catsWhereInput[]
    created_at?: DateTimeFilter<"cats"> | Date | string
    updated_at?: DateTimeFilter<"cats"> | Date | string
    name?: StringFilter<"cats"> | string
    birth_date?: DateTimeNullableFilter<"cats"> | Date | string | null
    weight?: DecimalNullableFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    household_id?: UuidFilter<"cats"> | string
    owner_id?: UuidFilter<"cats"> | string
    portion_size?: DecimalNullableFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    portion_unit?: StringNullableFilter<"cats"> | string | null
    photo_url?: StringNullableFilter<"cats"> | string | null
    restrictions?: StringNullableFilter<"cats"> | string | null
    notes?: StringNullableFilter<"cats"> | string | null
    feeding_interval?: IntNullableFilter<"cats"> | number | null
    household?: XOR<HouseholdsScalarRelationFilter, householdsWhereInput>
    owner?: XOR<ProfilesScalarRelationFilter, profilesWhereInput>
    feeding_logs?: Feeding_logsListRelationFilter
    schedules?: SchedulesListRelationFilter
    weight_logs?: Cat_weight_logsListRelationFilter
    weight_goals?: Weight_goalsListRelationFilter
  }, "id">

  export type catsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    birth_date?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    household_id?: SortOrder
    owner_id?: SortOrder
    portion_size?: SortOrderInput | SortOrder
    portion_unit?: SortOrderInput | SortOrder
    photo_url?: SortOrderInput | SortOrder
    restrictions?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    feeding_interval?: SortOrderInput | SortOrder
    _count?: catsCountOrderByAggregateInput
    _avg?: catsAvgOrderByAggregateInput
    _max?: catsMaxOrderByAggregateInput
    _min?: catsMinOrderByAggregateInput
    _sum?: catsSumOrderByAggregateInput
  }

  export type catsScalarWhereWithAggregatesInput = {
    AND?: catsScalarWhereWithAggregatesInput | catsScalarWhereWithAggregatesInput[]
    OR?: catsScalarWhereWithAggregatesInput[]
    NOT?: catsScalarWhereWithAggregatesInput | catsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"cats"> | string
    created_at?: DateTimeWithAggregatesFilter<"cats"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"cats"> | Date | string
    name?: StringWithAggregatesFilter<"cats"> | string
    birth_date?: DateTimeNullableWithAggregatesFilter<"cats"> | Date | string | null
    weight?: DecimalNullableWithAggregatesFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    household_id?: UuidWithAggregatesFilter<"cats"> | string
    owner_id?: UuidWithAggregatesFilter<"cats"> | string
    portion_size?: DecimalNullableWithAggregatesFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    portion_unit?: StringNullableWithAggregatesFilter<"cats"> | string | null
    photo_url?: StringNullableWithAggregatesFilter<"cats"> | string | null
    restrictions?: StringNullableWithAggregatesFilter<"cats"> | string | null
    notes?: StringNullableWithAggregatesFilter<"cats"> | string | null
    feeding_interval?: IntNullableWithAggregatesFilter<"cats"> | number | null
  }

  export type household_membersWhereInput = {
    AND?: household_membersWhereInput | household_membersWhereInput[]
    OR?: household_membersWhereInput[]
    NOT?: household_membersWhereInput | household_membersWhereInput[]
    id?: UuidFilter<"household_members"> | string
    household_id?: UuidFilter<"household_members"> | string
    user_id?: UuidFilter<"household_members"> | string
    role?: StringFilter<"household_members"> | string
    created_at?: DateTimeFilter<"household_members"> | Date | string
    household?: XOR<HouseholdsScalarRelationFilter, householdsWhereInput>
    user?: XOR<ProfilesScalarRelationFilter, profilesWhereInput>
  }

  export type household_membersOrderByWithRelationInput = {
    id?: SortOrder
    household_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    household?: householdsOrderByWithRelationInput
    user?: profilesOrderByWithRelationInput
  }

  export type household_membersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    household_id_user_id?: household_membersHousehold_idUser_idCompoundUniqueInput
    AND?: household_membersWhereInput | household_membersWhereInput[]
    OR?: household_membersWhereInput[]
    NOT?: household_membersWhereInput | household_membersWhereInput[]
    household_id?: UuidFilter<"household_members"> | string
    user_id?: UuidFilter<"household_members"> | string
    role?: StringFilter<"household_members"> | string
    created_at?: DateTimeFilter<"household_members"> | Date | string
    household?: XOR<HouseholdsScalarRelationFilter, householdsWhereInput>
    user?: XOR<ProfilesScalarRelationFilter, profilesWhereInput>
  }, "id" | "household_id_user_id">

  export type household_membersOrderByWithAggregationInput = {
    id?: SortOrder
    household_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    _count?: household_membersCountOrderByAggregateInput
    _max?: household_membersMaxOrderByAggregateInput
    _min?: household_membersMinOrderByAggregateInput
  }

  export type household_membersScalarWhereWithAggregatesInput = {
    AND?: household_membersScalarWhereWithAggregatesInput | household_membersScalarWhereWithAggregatesInput[]
    OR?: household_membersScalarWhereWithAggregatesInput[]
    NOT?: household_membersScalarWhereWithAggregatesInput | household_membersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"household_members"> | string
    household_id?: UuidWithAggregatesFilter<"household_members"> | string
    user_id?: UuidWithAggregatesFilter<"household_members"> | string
    role?: StringWithAggregatesFilter<"household_members"> | string
    created_at?: DateTimeWithAggregatesFilter<"household_members"> | Date | string
  }

  export type householdsWhereInput = {
    AND?: householdsWhereInput | householdsWhereInput[]
    OR?: householdsWhereInput[]
    NOT?: householdsWhereInput | householdsWhereInput[]
    id?: UuidFilter<"households"> | string
    created_at?: DateTimeFilter<"households"> | Date | string
    updated_at?: DateTimeFilter<"households"> | Date | string
    name?: StringFilter<"households"> | string
    description?: StringNullableFilter<"households"> | string | null
    owner_id?: UuidFilter<"households"> | string
    inviteCode?: StringNullableFilter<"households"> | string | null
    cats?: CatsListRelationFilter
    feeding_logs?: Feeding_logsListRelationFilter
    household_members?: Household_membersListRelationFilter
  }

  export type householdsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    owner_id?: SortOrder
    inviteCode?: SortOrderInput | SortOrder
    cats?: catsOrderByRelationAggregateInput
    feeding_logs?: feeding_logsOrderByRelationAggregateInput
    household_members?: household_membersOrderByRelationAggregateInput
  }

  export type householdsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    inviteCode?: string
    AND?: householdsWhereInput | householdsWhereInput[]
    OR?: householdsWhereInput[]
    NOT?: householdsWhereInput | householdsWhereInput[]
    created_at?: DateTimeFilter<"households"> | Date | string
    updated_at?: DateTimeFilter<"households"> | Date | string
    name?: StringFilter<"households"> | string
    description?: StringNullableFilter<"households"> | string | null
    owner_id?: UuidFilter<"households"> | string
    cats?: CatsListRelationFilter
    feeding_logs?: Feeding_logsListRelationFilter
    household_members?: Household_membersListRelationFilter
  }, "id" | "inviteCode">

  export type householdsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    owner_id?: SortOrder
    inviteCode?: SortOrderInput | SortOrder
    _count?: householdsCountOrderByAggregateInput
    _max?: householdsMaxOrderByAggregateInput
    _min?: householdsMinOrderByAggregateInput
  }

  export type householdsScalarWhereWithAggregatesInput = {
    AND?: householdsScalarWhereWithAggregatesInput | householdsScalarWhereWithAggregatesInput[]
    OR?: householdsScalarWhereWithAggregatesInput[]
    NOT?: householdsScalarWhereWithAggregatesInput | householdsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"households"> | string
    created_at?: DateTimeWithAggregatesFilter<"households"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"households"> | Date | string
    name?: StringWithAggregatesFilter<"households"> | string
    description?: StringNullableWithAggregatesFilter<"households"> | string | null
    owner_id?: UuidWithAggregatesFilter<"households"> | string
    inviteCode?: StringNullableWithAggregatesFilter<"households"> | string | null
  }

  export type profilesWhereInput = {
    AND?: profilesWhereInput | profilesWhereInput[]
    OR?: profilesWhereInput[]
    NOT?: profilesWhereInput | profilesWhereInput[]
    id?: UuidFilter<"profiles"> | string
    updated_at?: DateTimeNullableFilter<"profiles"> | Date | string | null
    username?: StringNullableFilter<"profiles"> | string | null
    full_name?: StringNullableFilter<"profiles"> | string | null
    avatar_url?: StringNullableFilter<"profiles"> | string | null
    email?: StringNullableFilter<"profiles"> | string | null
    timezone?: StringNullableFilter<"profiles"> | string | null
    owned_cats?: CatsListRelationFilter
    feeding_logs_fed?: Feeding_logsListRelationFilter
    household_members?: Household_membersListRelationFilter
    weight_logs_measured?: Cat_weight_logsListRelationFilter
    created_weight_goals?: Weight_goalsListRelationFilter
  }

  export type profilesOrderByWithRelationInput = {
    id?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    full_name?: SortOrderInput | SortOrder
    avatar_url?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    owned_cats?: catsOrderByRelationAggregateInput
    feeding_logs_fed?: feeding_logsOrderByRelationAggregateInput
    household_members?: household_membersOrderByRelationAggregateInput
    weight_logs_measured?: cat_weight_logsOrderByRelationAggregateInput
    created_weight_goals?: weight_goalsOrderByRelationAggregateInput
  }

  export type profilesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    AND?: profilesWhereInput | profilesWhereInput[]
    OR?: profilesWhereInput[]
    NOT?: profilesWhereInput | profilesWhereInput[]
    updated_at?: DateTimeNullableFilter<"profiles"> | Date | string | null
    full_name?: StringNullableFilter<"profiles"> | string | null
    avatar_url?: StringNullableFilter<"profiles"> | string | null
    email?: StringNullableFilter<"profiles"> | string | null
    timezone?: StringNullableFilter<"profiles"> | string | null
    owned_cats?: CatsListRelationFilter
    feeding_logs_fed?: Feeding_logsListRelationFilter
    household_members?: Household_membersListRelationFilter
    weight_logs_measured?: Cat_weight_logsListRelationFilter
    created_weight_goals?: Weight_goalsListRelationFilter
  }, "id" | "username">

  export type profilesOrderByWithAggregationInput = {
    id?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    full_name?: SortOrderInput | SortOrder
    avatar_url?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    _count?: profilesCountOrderByAggregateInput
    _max?: profilesMaxOrderByAggregateInput
    _min?: profilesMinOrderByAggregateInput
  }

  export type profilesScalarWhereWithAggregatesInput = {
    AND?: profilesScalarWhereWithAggregatesInput | profilesScalarWhereWithAggregatesInput[]
    OR?: profilesScalarWhereWithAggregatesInput[]
    NOT?: profilesScalarWhereWithAggregatesInput | profilesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"profiles"> | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"profiles"> | Date | string | null
    username?: StringNullableWithAggregatesFilter<"profiles"> | string | null
    full_name?: StringNullableWithAggregatesFilter<"profiles"> | string | null
    avatar_url?: StringNullableWithAggregatesFilter<"profiles"> | string | null
    email?: StringNullableWithAggregatesFilter<"profiles"> | string | null
    timezone?: StringNullableWithAggregatesFilter<"profiles"> | string | null
  }

  export type notificationsWhereInput = {
    AND?: notificationsWhereInput | notificationsWhereInput[]
    OR?: notificationsWhereInput[]
    NOT?: notificationsWhereInput | notificationsWhereInput[]
    id?: UuidFilter<"notifications"> | string
    created_at?: DateTimeFilter<"notifications"> | Date | string
    updated_at?: DateTimeFilter<"notifications"> | Date | string
    user_id?: UuidFilter<"notifications"> | string
    title?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    type?: StringFilter<"notifications"> | string
    is_read?: BoolFilter<"notifications"> | boolean
    metadata?: JsonFilter<"notifications">
  }

  export type notificationsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    metadata?: SortOrder
  }

  export type notificationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: notificationsWhereInput | notificationsWhereInput[]
    OR?: notificationsWhereInput[]
    NOT?: notificationsWhereInput | notificationsWhereInput[]
    created_at?: DateTimeFilter<"notifications"> | Date | string
    updated_at?: DateTimeFilter<"notifications"> | Date | string
    user_id?: UuidFilter<"notifications"> | string
    title?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    type?: StringFilter<"notifications"> | string
    is_read?: BoolFilter<"notifications"> | boolean
    metadata?: JsonFilter<"notifications">
  }, "id">

  export type notificationsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    metadata?: SortOrder
    _count?: notificationsCountOrderByAggregateInput
    _max?: notificationsMaxOrderByAggregateInput
    _min?: notificationsMinOrderByAggregateInput
  }

  export type notificationsScalarWhereWithAggregatesInput = {
    AND?: notificationsScalarWhereWithAggregatesInput | notificationsScalarWhereWithAggregatesInput[]
    OR?: notificationsScalarWhereWithAggregatesInput[]
    NOT?: notificationsScalarWhereWithAggregatesInput | notificationsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"notifications"> | string
    created_at?: DateTimeWithAggregatesFilter<"notifications"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"notifications"> | Date | string
    user_id?: UuidWithAggregatesFilter<"notifications"> | string
    title?: StringWithAggregatesFilter<"notifications"> | string
    message?: StringWithAggregatesFilter<"notifications"> | string
    type?: StringWithAggregatesFilter<"notifications"> | string
    is_read?: BoolWithAggregatesFilter<"notifications"> | boolean
    metadata?: JsonWithAggregatesFilter<"notifications">
  }

  export type schedulesWhereInput = {
    AND?: schedulesWhereInput | schedulesWhereInput[]
    OR?: schedulesWhereInput[]
    NOT?: schedulesWhereInput | schedulesWhereInput[]
    id?: UuidFilter<"schedules"> | string
    cat_id?: UuidFilter<"schedules"> | string
    type?: StringFilter<"schedules"> | string
    interval?: IntNullableFilter<"schedules"> | number | null
    times?: StringNullableListFilter<"schedules">
    enabled?: BoolFilter<"schedules"> | boolean
    created_at?: DateTimeFilter<"schedules"> | Date | string
    updated_at?: DateTimeFilter<"schedules"> | Date | string
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
  }

  export type schedulesOrderByWithRelationInput = {
    id?: SortOrder
    cat_id?: SortOrder
    type?: SortOrder
    interval?: SortOrderInput | SortOrder
    times?: SortOrder
    enabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat?: catsOrderByWithRelationInput
  }

  export type schedulesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: schedulesWhereInput | schedulesWhereInput[]
    OR?: schedulesWhereInput[]
    NOT?: schedulesWhereInput | schedulesWhereInput[]
    cat_id?: UuidFilter<"schedules"> | string
    type?: StringFilter<"schedules"> | string
    interval?: IntNullableFilter<"schedules"> | number | null
    times?: StringNullableListFilter<"schedules">
    enabled?: BoolFilter<"schedules"> | boolean
    created_at?: DateTimeFilter<"schedules"> | Date | string
    updated_at?: DateTimeFilter<"schedules"> | Date | string
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
  }, "id">

  export type schedulesOrderByWithAggregationInput = {
    id?: SortOrder
    cat_id?: SortOrder
    type?: SortOrder
    interval?: SortOrderInput | SortOrder
    times?: SortOrder
    enabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: schedulesCountOrderByAggregateInput
    _avg?: schedulesAvgOrderByAggregateInput
    _max?: schedulesMaxOrderByAggregateInput
    _min?: schedulesMinOrderByAggregateInput
    _sum?: schedulesSumOrderByAggregateInput
  }

  export type schedulesScalarWhereWithAggregatesInput = {
    AND?: schedulesScalarWhereWithAggregatesInput | schedulesScalarWhereWithAggregatesInput[]
    OR?: schedulesScalarWhereWithAggregatesInput[]
    NOT?: schedulesScalarWhereWithAggregatesInput | schedulesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"schedules"> | string
    cat_id?: UuidWithAggregatesFilter<"schedules"> | string
    type?: StringWithAggregatesFilter<"schedules"> | string
    interval?: IntNullableWithAggregatesFilter<"schedules"> | number | null
    times?: StringNullableListFilter<"schedules">
    enabled?: BoolWithAggregatesFilter<"schedules"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"schedules"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"schedules"> | Date | string
  }

  export type feeding_logsWhereInput = {
    AND?: feeding_logsWhereInput | feeding_logsWhereInput[]
    OR?: feeding_logsWhereInput[]
    NOT?: feeding_logsWhereInput | feeding_logsWhereInput[]
    id?: UuidFilter<"feeding_logs"> | string
    created_at?: DateTimeFilter<"feeding_logs"> | Date | string
    updated_at?: DateTimeFilter<"feeding_logs"> | Date | string
    cat_id?: UuidFilter<"feeding_logs"> | string
    household_id?: UuidFilter<"feeding_logs"> | string
    meal_type?: StringFilter<"feeding_logs"> | string
    amount?: DecimalFilter<"feeding_logs"> | Decimal | DecimalJsLike | number | string
    unit?: StringFilter<"feeding_logs"> | string
    notes?: StringNullableFilter<"feeding_logs"> | string | null
    fed_by?: UuidNullableFilter<"feeding_logs"> | string | null
    fed_at?: DateTimeFilter<"feeding_logs"> | Date | string
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
    feeder?: XOR<ProfilesNullableScalarRelationFilter, profilesWhereInput> | null
    household?: XOR<HouseholdsScalarRelationFilter, householdsWhereInput>
  }

  export type feeding_logsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    household_id?: SortOrder
    meal_type?: SortOrder
    amount?: SortOrder
    unit?: SortOrder
    notes?: SortOrderInput | SortOrder
    fed_by?: SortOrderInput | SortOrder
    fed_at?: SortOrder
    cat?: catsOrderByWithRelationInput
    feeder?: profilesOrderByWithRelationInput
    household?: householdsOrderByWithRelationInput
  }

  export type feeding_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: feeding_logsWhereInput | feeding_logsWhereInput[]
    OR?: feeding_logsWhereInput[]
    NOT?: feeding_logsWhereInput | feeding_logsWhereInput[]
    created_at?: DateTimeFilter<"feeding_logs"> | Date | string
    updated_at?: DateTimeFilter<"feeding_logs"> | Date | string
    cat_id?: UuidFilter<"feeding_logs"> | string
    household_id?: UuidFilter<"feeding_logs"> | string
    meal_type?: StringFilter<"feeding_logs"> | string
    amount?: DecimalFilter<"feeding_logs"> | Decimal | DecimalJsLike | number | string
    unit?: StringFilter<"feeding_logs"> | string
    notes?: StringNullableFilter<"feeding_logs"> | string | null
    fed_by?: UuidNullableFilter<"feeding_logs"> | string | null
    fed_at?: DateTimeFilter<"feeding_logs"> | Date | string
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
    feeder?: XOR<ProfilesNullableScalarRelationFilter, profilesWhereInput> | null
    household?: XOR<HouseholdsScalarRelationFilter, householdsWhereInput>
  }, "id">

  export type feeding_logsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    household_id?: SortOrder
    meal_type?: SortOrder
    amount?: SortOrder
    unit?: SortOrder
    notes?: SortOrderInput | SortOrder
    fed_by?: SortOrderInput | SortOrder
    fed_at?: SortOrder
    _count?: feeding_logsCountOrderByAggregateInput
    _avg?: feeding_logsAvgOrderByAggregateInput
    _max?: feeding_logsMaxOrderByAggregateInput
    _min?: feeding_logsMinOrderByAggregateInput
    _sum?: feeding_logsSumOrderByAggregateInput
  }

  export type feeding_logsScalarWhereWithAggregatesInput = {
    AND?: feeding_logsScalarWhereWithAggregatesInput | feeding_logsScalarWhereWithAggregatesInput[]
    OR?: feeding_logsScalarWhereWithAggregatesInput[]
    NOT?: feeding_logsScalarWhereWithAggregatesInput | feeding_logsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"feeding_logs"> | string
    created_at?: DateTimeWithAggregatesFilter<"feeding_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"feeding_logs"> | Date | string
    cat_id?: UuidWithAggregatesFilter<"feeding_logs"> | string
    household_id?: UuidWithAggregatesFilter<"feeding_logs"> | string
    meal_type?: StringWithAggregatesFilter<"feeding_logs"> | string
    amount?: DecimalWithAggregatesFilter<"feeding_logs"> | Decimal | DecimalJsLike | number | string
    unit?: StringWithAggregatesFilter<"feeding_logs"> | string
    notes?: StringNullableWithAggregatesFilter<"feeding_logs"> | string | null
    fed_by?: UuidNullableWithAggregatesFilter<"feeding_logs"> | string | null
    fed_at?: DateTimeWithAggregatesFilter<"feeding_logs"> | Date | string
  }

  export type schema_migrationsWhereInput = {
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    version?: StringFilter<"schema_migrations"> | string
    dirty?: BoolFilter<"schema_migrations"> | boolean
    applied_at?: DateTimeFilter<"schema_migrations"> | Date | string
  }

  export type schema_migrationsOrderByWithRelationInput = {
    version?: SortOrder
    dirty?: SortOrder
    applied_at?: SortOrder
  }

  export type schema_migrationsWhereUniqueInput = Prisma.AtLeast<{
    version?: string
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    dirty?: BoolFilter<"schema_migrations"> | boolean
    applied_at?: DateTimeFilter<"schema_migrations"> | Date | string
  }, "version" | "version">

  export type schema_migrationsOrderByWithAggregationInput = {
    version?: SortOrder
    dirty?: SortOrder
    applied_at?: SortOrder
    _count?: schema_migrationsCountOrderByAggregateInput
    _max?: schema_migrationsMaxOrderByAggregateInput
    _min?: schema_migrationsMinOrderByAggregateInput
  }

  export type schema_migrationsScalarWhereWithAggregatesInput = {
    AND?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    OR?: schema_migrationsScalarWhereWithAggregatesInput[]
    NOT?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    version?: StringWithAggregatesFilter<"schema_migrations"> | string
    dirty?: BoolWithAggregatesFilter<"schema_migrations"> | boolean
    applied_at?: DateTimeWithAggregatesFilter<"schema_migrations"> | Date | string
  }

  export type cat_weight_logsWhereInput = {
    AND?: cat_weight_logsWhereInput | cat_weight_logsWhereInput[]
    OR?: cat_weight_logsWhereInput[]
    NOT?: cat_weight_logsWhereInput | cat_weight_logsWhereInput[]
    id?: UuidFilter<"cat_weight_logs"> | string
    created_at?: DateTimeFilter<"cat_weight_logs"> | Date | string
    updated_at?: DateTimeFilter<"cat_weight_logs"> | Date | string
    weight?: DecimalFilter<"cat_weight_logs"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"cat_weight_logs"> | Date | string
    cat_id?: UuidFilter<"cat_weight_logs"> | string
    notes?: StringNullableFilter<"cat_weight_logs"> | string | null
    measured_by?: UuidNullableFilter<"cat_weight_logs"> | string | null
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
    measuredBy?: XOR<ProfilesNullableScalarRelationFilter, profilesWhereInput> | null
  }

  export type cat_weight_logsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    cat_id?: SortOrder
    notes?: SortOrderInput | SortOrder
    measured_by?: SortOrderInput | SortOrder
    cat?: catsOrderByWithRelationInput
    measuredBy?: profilesOrderByWithRelationInput
  }

  export type cat_weight_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cat_weight_logsWhereInput | cat_weight_logsWhereInput[]
    OR?: cat_weight_logsWhereInput[]
    NOT?: cat_weight_logsWhereInput | cat_weight_logsWhereInput[]
    created_at?: DateTimeFilter<"cat_weight_logs"> | Date | string
    updated_at?: DateTimeFilter<"cat_weight_logs"> | Date | string
    weight?: DecimalFilter<"cat_weight_logs"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"cat_weight_logs"> | Date | string
    cat_id?: UuidFilter<"cat_weight_logs"> | string
    notes?: StringNullableFilter<"cat_weight_logs"> | string | null
    measured_by?: UuidNullableFilter<"cat_weight_logs"> | string | null
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
    measuredBy?: XOR<ProfilesNullableScalarRelationFilter, profilesWhereInput> | null
  }, "id">

  export type cat_weight_logsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    cat_id?: SortOrder
    notes?: SortOrderInput | SortOrder
    measured_by?: SortOrderInput | SortOrder
    _count?: cat_weight_logsCountOrderByAggregateInput
    _avg?: cat_weight_logsAvgOrderByAggregateInput
    _max?: cat_weight_logsMaxOrderByAggregateInput
    _min?: cat_weight_logsMinOrderByAggregateInput
    _sum?: cat_weight_logsSumOrderByAggregateInput
  }

  export type cat_weight_logsScalarWhereWithAggregatesInput = {
    AND?: cat_weight_logsScalarWhereWithAggregatesInput | cat_weight_logsScalarWhereWithAggregatesInput[]
    OR?: cat_weight_logsScalarWhereWithAggregatesInput[]
    NOT?: cat_weight_logsScalarWhereWithAggregatesInput | cat_weight_logsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"cat_weight_logs"> | string
    created_at?: DateTimeWithAggregatesFilter<"cat_weight_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"cat_weight_logs"> | Date | string
    weight?: DecimalWithAggregatesFilter<"cat_weight_logs"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeWithAggregatesFilter<"cat_weight_logs"> | Date | string
    cat_id?: UuidWithAggregatesFilter<"cat_weight_logs"> | string
    notes?: StringNullableWithAggregatesFilter<"cat_weight_logs"> | string | null
    measured_by?: UuidNullableWithAggregatesFilter<"cat_weight_logs"> | string | null
  }

  export type weight_goalsWhereInput = {
    AND?: weight_goalsWhereInput | weight_goalsWhereInput[]
    OR?: weight_goalsWhereInput[]
    NOT?: weight_goalsWhereInput | weight_goalsWhereInput[]
    id?: UuidFilter<"weight_goals"> | string
    created_at?: DateTimeFilter<"weight_goals"> | Date | string
    updated_at?: DateTimeFilter<"weight_goals"> | Date | string
    cat_id?: UuidFilter<"weight_goals"> | string
    goal_name?: StringFilter<"weight_goals"> | string
    target_weight?: DecimalFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string
    target_date?: DateTimeNullableFilter<"weight_goals"> | Date | string | null
    start_weight?: DecimalNullableFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string | null
    unit?: StringFilter<"weight_goals"> | string
    status?: StringFilter<"weight_goals"> | string
    notes?: StringNullableFilter<"weight_goals"> | string | null
    created_by?: UuidFilter<"weight_goals"> | string
    milestones?: Weight_goal_milestonesListRelationFilter
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
    createdBy?: XOR<ProfilesScalarRelationFilter, profilesWhereInput>
  }

  export type weight_goalsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    goal_name?: SortOrder
    target_weight?: SortOrder
    target_date?: SortOrderInput | SortOrder
    start_weight?: SortOrderInput | SortOrder
    unit?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_by?: SortOrder
    milestones?: weight_goal_milestonesOrderByRelationAggregateInput
    cat?: catsOrderByWithRelationInput
    createdBy?: profilesOrderByWithRelationInput
  }

  export type weight_goalsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: weight_goalsWhereInput | weight_goalsWhereInput[]
    OR?: weight_goalsWhereInput[]
    NOT?: weight_goalsWhereInput | weight_goalsWhereInput[]
    created_at?: DateTimeFilter<"weight_goals"> | Date | string
    updated_at?: DateTimeFilter<"weight_goals"> | Date | string
    cat_id?: UuidFilter<"weight_goals"> | string
    goal_name?: StringFilter<"weight_goals"> | string
    target_weight?: DecimalFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string
    target_date?: DateTimeNullableFilter<"weight_goals"> | Date | string | null
    start_weight?: DecimalNullableFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string | null
    unit?: StringFilter<"weight_goals"> | string
    status?: StringFilter<"weight_goals"> | string
    notes?: StringNullableFilter<"weight_goals"> | string | null
    created_by?: UuidFilter<"weight_goals"> | string
    milestones?: Weight_goal_milestonesListRelationFilter
    cat?: XOR<CatsScalarRelationFilter, catsWhereInput>
    createdBy?: XOR<ProfilesScalarRelationFilter, profilesWhereInput>
  }, "id">

  export type weight_goalsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    goal_name?: SortOrder
    target_weight?: SortOrder
    target_date?: SortOrderInput | SortOrder
    start_weight?: SortOrderInput | SortOrder
    unit?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_by?: SortOrder
    _count?: weight_goalsCountOrderByAggregateInput
    _avg?: weight_goalsAvgOrderByAggregateInput
    _max?: weight_goalsMaxOrderByAggregateInput
    _min?: weight_goalsMinOrderByAggregateInput
    _sum?: weight_goalsSumOrderByAggregateInput
  }

  export type weight_goalsScalarWhereWithAggregatesInput = {
    AND?: weight_goalsScalarWhereWithAggregatesInput | weight_goalsScalarWhereWithAggregatesInput[]
    OR?: weight_goalsScalarWhereWithAggregatesInput[]
    NOT?: weight_goalsScalarWhereWithAggregatesInput | weight_goalsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"weight_goals"> | string
    created_at?: DateTimeWithAggregatesFilter<"weight_goals"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"weight_goals"> | Date | string
    cat_id?: UuidWithAggregatesFilter<"weight_goals"> | string
    goal_name?: StringWithAggregatesFilter<"weight_goals"> | string
    target_weight?: DecimalWithAggregatesFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string
    target_date?: DateTimeNullableWithAggregatesFilter<"weight_goals"> | Date | string | null
    start_weight?: DecimalNullableWithAggregatesFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string | null
    unit?: StringWithAggregatesFilter<"weight_goals"> | string
    status?: StringWithAggregatesFilter<"weight_goals"> | string
    notes?: StringNullableWithAggregatesFilter<"weight_goals"> | string | null
    created_by?: UuidWithAggregatesFilter<"weight_goals"> | string
  }

  export type weight_goal_milestonesWhereInput = {
    AND?: weight_goal_milestonesWhereInput | weight_goal_milestonesWhereInput[]
    OR?: weight_goal_milestonesWhereInput[]
    NOT?: weight_goal_milestonesWhereInput | weight_goal_milestonesWhereInput[]
    id?: UuidFilter<"weight_goal_milestones"> | string
    created_at?: DateTimeFilter<"weight_goal_milestones"> | Date | string
    goal_id?: UuidFilter<"weight_goal_milestones"> | string
    weight?: DecimalFilter<"weight_goal_milestones"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"weight_goal_milestones"> | Date | string
    notes?: StringNullableFilter<"weight_goal_milestones"> | string | null
    goal?: XOR<Weight_goalsScalarRelationFilter, weight_goalsWhereInput>
  }

  export type weight_goal_milestonesOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    goal_id?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    notes?: SortOrderInput | SortOrder
    goal?: weight_goalsOrderByWithRelationInput
  }

  export type weight_goal_milestonesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: weight_goal_milestonesWhereInput | weight_goal_milestonesWhereInput[]
    OR?: weight_goal_milestonesWhereInput[]
    NOT?: weight_goal_milestonesWhereInput | weight_goal_milestonesWhereInput[]
    created_at?: DateTimeFilter<"weight_goal_milestones"> | Date | string
    goal_id?: UuidFilter<"weight_goal_milestones"> | string
    weight?: DecimalFilter<"weight_goal_milestones"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"weight_goal_milestones"> | Date | string
    notes?: StringNullableFilter<"weight_goal_milestones"> | string | null
    goal?: XOR<Weight_goalsScalarRelationFilter, weight_goalsWhereInput>
  }, "id">

  export type weight_goal_milestonesOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    goal_id?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: weight_goal_milestonesCountOrderByAggregateInput
    _avg?: weight_goal_milestonesAvgOrderByAggregateInput
    _max?: weight_goal_milestonesMaxOrderByAggregateInput
    _min?: weight_goal_milestonesMinOrderByAggregateInput
    _sum?: weight_goal_milestonesSumOrderByAggregateInput
  }

  export type weight_goal_milestonesScalarWhereWithAggregatesInput = {
    AND?: weight_goal_milestonesScalarWhereWithAggregatesInput | weight_goal_milestonesScalarWhereWithAggregatesInput[]
    OR?: weight_goal_milestonesScalarWhereWithAggregatesInput[]
    NOT?: weight_goal_milestonesScalarWhereWithAggregatesInput | weight_goal_milestonesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"weight_goal_milestones"> | string
    created_at?: DateTimeWithAggregatesFilter<"weight_goal_milestones"> | Date | string
    goal_id?: UuidWithAggregatesFilter<"weight_goal_milestones"> | string
    weight?: DecimalWithAggregatesFilter<"weight_goal_milestones"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeWithAggregatesFilter<"weight_goal_milestones"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"weight_goal_milestones"> | string | null
  }

  export type catsCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    household: householdsCreateNestedOneWithoutCatsInput
    owner: profilesCreateNestedOneWithoutOwned_catsInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutCatInput
    schedules?: schedulesCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutCatInput
    schedules?: schedulesUncheckedCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsUncheckedCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    household?: householdsUpdateOneRequiredWithoutCatsNestedInput
    owner?: profilesUpdateOneRequiredWithoutOwned_catsNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutCatNestedInput
    schedules?: schedulesUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutCatNestedInput
    schedules?: schedulesUncheckedUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type catsCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
  }

  export type catsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type catsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type household_membersCreateInput = {
    id?: string
    role: string
    created_at?: Date | string
    household: householdsCreateNestedOneWithoutHousehold_membersInput
    user: profilesCreateNestedOneWithoutHousehold_membersInput
  }

  export type household_membersUncheckedCreateInput = {
    id?: string
    household_id: string
    user_id: string
    role: string
    created_at?: Date | string
  }

  export type household_membersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    household?: householdsUpdateOneRequiredWithoutHousehold_membersNestedInput
    user?: profilesUpdateOneRequiredWithoutHousehold_membersNestedInput
  }

  export type household_membersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type household_membersCreateManyInput = {
    id?: string
    household_id: string
    user_id: string
    role: string
    created_at?: Date | string
  }

  export type household_membersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type household_membersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type householdsCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    cats?: catsCreateNestedManyWithoutHouseholdInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutHouseholdInput
    household_members?: household_membersCreateNestedManyWithoutHouseholdInput
  }

  export type householdsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    cats?: catsUncheckedCreateNestedManyWithoutHouseholdInput
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutHouseholdInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutHouseholdInput
  }

  export type householdsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    cats?: catsUpdateManyWithoutHouseholdNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutHouseholdNestedInput
    household_members?: household_membersUpdateManyWithoutHouseholdNestedInput
  }

  export type householdsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    cats?: catsUncheckedUpdateManyWithoutHouseholdNestedInput
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutHouseholdNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutHouseholdNestedInput
  }

  export type householdsCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
  }

  export type householdsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type householdsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type profilesCreateInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsCreateNestedManyWithoutFeederInput
    household_members?: household_membersCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsCreateNestedManyWithoutCreatedByInput
  }

  export type profilesUncheckedCreateInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsUncheckedCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsUncheckedCreateNestedManyWithoutFeederInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsUncheckedCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type profilesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUpdateManyWithoutCreatedByNestedInput
  }

  export type profilesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUncheckedUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUncheckedUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUncheckedUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type profilesCreateManyInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
  }

  export type profilesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type profilesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationsCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    title: string
    message: string
    type: string
    is_read?: boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type notificationsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    title: string
    message: string
    type: string
    is_read?: boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type notificationsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type notificationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type notificationsCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    title: string
    message: string
    type: string
    is_read?: boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type notificationsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type notificationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    metadata?: JsonNullValueInput | InputJsonValue
  }

  export type schedulesCreateInput = {
    id?: string
    type: string
    interval?: number | null
    times?: schedulesCreatetimesInput | string[]
    enabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cat: catsCreateNestedOneWithoutSchedulesInput
  }

  export type schedulesUncheckedCreateInput = {
    id?: string
    cat_id: string
    type: string
    interval?: number | null
    times?: schedulesCreatetimesInput | string[]
    enabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type schedulesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat?: catsUpdateOneRequiredWithoutSchedulesNestedInput
  }

  export type schedulesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cat_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schedulesCreateManyInput = {
    id?: string
    cat_id: string
    type: string
    interval?: number | null
    times?: schedulesCreatetimesInput | string[]
    enabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type schedulesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schedulesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cat_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feeding_logsCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_at: Date | string
    cat: catsCreateNestedOneWithoutFeeding_logsInput
    feeder?: profilesCreateNestedOneWithoutFeeding_logs_fedInput
    household: householdsCreateNestedOneWithoutFeeding_logsInput
  }

  export type feeding_logsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    household_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_by?: string | null
    fed_at: Date | string
  }

  export type feeding_logsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat?: catsUpdateOneRequiredWithoutFeeding_logsNestedInput
    feeder?: profilesUpdateOneWithoutFeeding_logs_fedNestedInput
    household?: householdsUpdateOneRequiredWithoutFeeding_logsNestedInput
  }

  export type feeding_logsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_by?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feeding_logsCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    household_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_by?: string | null
    fed_at: Date | string
  }

  export type feeding_logsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feeding_logsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_by?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schema_migrationsCreateInput = {
    version: string
    dirty?: boolean
    applied_at?: Date | string
  }

  export type schema_migrationsUncheckedCreateInput = {
    version: string
    dirty?: boolean
    applied_at?: Date | string
  }

  export type schema_migrationsUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
    dirty?: BoolFieldUpdateOperationsInput | boolean
    applied_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schema_migrationsUncheckedUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
    dirty?: BoolFieldUpdateOperationsInput | boolean
    applied_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schema_migrationsCreateManyInput = {
    version: string
    dirty?: boolean
    applied_at?: Date | string
  }

  export type schema_migrationsUpdateManyMutationInput = {
    version?: StringFieldUpdateOperationsInput | string
    dirty?: BoolFieldUpdateOperationsInput | boolean
    applied_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schema_migrationsUncheckedUpdateManyInput = {
    version?: StringFieldUpdateOperationsInput | string
    dirty?: BoolFieldUpdateOperationsInput | boolean
    applied_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cat_weight_logsCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
    cat: catsCreateNestedOneWithoutWeight_logsInput
    measuredBy?: profilesCreateNestedOneWithoutWeight_logs_measuredInput
  }

  export type cat_weight_logsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    cat_id: string
    notes?: string | null
    measured_by?: string | null
  }

  export type cat_weight_logsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cat?: catsUpdateOneRequiredWithoutWeight_logsNestedInput
    measuredBy?: profilesUpdateOneWithoutWeight_logs_measuredNestedInput
  }

  export type cat_weight_logsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    measured_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cat_weight_logsCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    cat_id: string
    notes?: string | null
    measured_by?: string | null
  }

  export type cat_weight_logsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cat_weight_logsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    measured_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goalsCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    milestones?: weight_goal_milestonesCreateNestedManyWithoutGoalInput
    cat: catsCreateNestedOneWithoutWeight_goalsInput
    createdBy: profilesCreateNestedOneWithoutCreated_weight_goalsInput
  }

  export type weight_goalsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    created_by: string
    milestones?: weight_goal_milestonesUncheckedCreateNestedManyWithoutGoalInput
  }

  export type weight_goalsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: weight_goal_milestonesUpdateManyWithoutGoalNestedInput
    cat?: catsUpdateOneRequiredWithoutWeight_goalsNestedInput
    createdBy?: profilesUpdateOneRequiredWithoutCreated_weight_goalsNestedInput
  }

  export type weight_goalsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    milestones?: weight_goal_milestonesUncheckedUpdateManyWithoutGoalNestedInput
  }

  export type weight_goalsCreateManyInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    created_by: string
  }

  export type weight_goalsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goalsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type weight_goal_milestonesCreateInput = {
    id?: string
    created_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
    goal: weight_goalsCreateNestedOneWithoutMilestonesInput
  }

  export type weight_goal_milestonesUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    goal_id: string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
  }

  export type weight_goal_milestonesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    goal?: weight_goalsUpdateOneRequiredWithoutMilestonesNestedInput
  }

  export type weight_goal_milestonesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_id?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goal_milestonesCreateManyInput = {
    id?: string
    created_at?: Date | string
    goal_id: string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
  }

  export type weight_goal_milestonesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goal_milestonesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_id?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type HouseholdsScalarRelationFilter = {
    is?: householdsWhereInput
    isNot?: householdsWhereInput
  }

  export type ProfilesScalarRelationFilter = {
    is?: profilesWhereInput
    isNot?: profilesWhereInput
  }

  export type Feeding_logsListRelationFilter = {
    every?: feeding_logsWhereInput
    some?: feeding_logsWhereInput
    none?: feeding_logsWhereInput
  }

  export type SchedulesListRelationFilter = {
    every?: schedulesWhereInput
    some?: schedulesWhereInput
    none?: schedulesWhereInput
  }

  export type Cat_weight_logsListRelationFilter = {
    every?: cat_weight_logsWhereInput
    some?: cat_weight_logsWhereInput
    none?: cat_weight_logsWhereInput
  }

  export type Weight_goalsListRelationFilter = {
    every?: weight_goalsWhereInput
    some?: weight_goalsWhereInput
    none?: weight_goalsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type feeding_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type schedulesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cat_weight_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type weight_goalsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type catsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    birth_date?: SortOrder
    weight?: SortOrder
    household_id?: SortOrder
    owner_id?: SortOrder
    portion_size?: SortOrder
    portion_unit?: SortOrder
    photo_url?: SortOrder
    restrictions?: SortOrder
    notes?: SortOrder
    feeding_interval?: SortOrder
  }

  export type catsAvgOrderByAggregateInput = {
    weight?: SortOrder
    portion_size?: SortOrder
    feeding_interval?: SortOrder
  }

  export type catsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    birth_date?: SortOrder
    weight?: SortOrder
    household_id?: SortOrder
    owner_id?: SortOrder
    portion_size?: SortOrder
    portion_unit?: SortOrder
    photo_url?: SortOrder
    restrictions?: SortOrder
    notes?: SortOrder
    feeding_interval?: SortOrder
  }

  export type catsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    birth_date?: SortOrder
    weight?: SortOrder
    household_id?: SortOrder
    owner_id?: SortOrder
    portion_size?: SortOrder
    portion_unit?: SortOrder
    photo_url?: SortOrder
    restrictions?: SortOrder
    notes?: SortOrder
    feeding_interval?: SortOrder
  }

  export type catsSumOrderByAggregateInput = {
    weight?: SortOrder
    portion_size?: SortOrder
    feeding_interval?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type household_membersHousehold_idUser_idCompoundUniqueInput = {
    household_id: string
    user_id: string
  }

  export type household_membersCountOrderByAggregateInput = {
    id?: SortOrder
    household_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type household_membersMaxOrderByAggregateInput = {
    id?: SortOrder
    household_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type household_membersMinOrderByAggregateInput = {
    id?: SortOrder
    household_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type CatsListRelationFilter = {
    every?: catsWhereInput
    some?: catsWhereInput
    none?: catsWhereInput
  }

  export type Household_membersListRelationFilter = {
    every?: household_membersWhereInput
    some?: household_membersWhereInput
    none?: household_membersWhereInput
  }

  export type catsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type household_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type householdsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    description?: SortOrder
    owner_id?: SortOrder
    inviteCode?: SortOrder
  }

  export type householdsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    description?: SortOrder
    owner_id?: SortOrder
    inviteCode?: SortOrder
  }

  export type householdsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name?: SortOrder
    description?: SortOrder
    owner_id?: SortOrder
    inviteCode?: SortOrder
  }

  export type profilesCountOrderByAggregateInput = {
    id?: SortOrder
    updated_at?: SortOrder
    username?: SortOrder
    full_name?: SortOrder
    avatar_url?: SortOrder
    email?: SortOrder
    timezone?: SortOrder
  }

  export type profilesMaxOrderByAggregateInput = {
    id?: SortOrder
    updated_at?: SortOrder
    username?: SortOrder
    full_name?: SortOrder
    avatar_url?: SortOrder
    email?: SortOrder
    timezone?: SortOrder
  }

  export type profilesMinOrderByAggregateInput = {
    id?: SortOrder
    updated_at?: SortOrder
    username?: SortOrder
    full_name?: SortOrder
    avatar_url?: SortOrder
    email?: SortOrder
    timezone?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type notificationsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    metadata?: SortOrder
  }

  export type notificationsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
  }

  export type notificationsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type CatsScalarRelationFilter = {
    is?: catsWhereInput
    isNot?: catsWhereInput
  }

  export type schedulesCountOrderByAggregateInput = {
    id?: SortOrder
    cat_id?: SortOrder
    type?: SortOrder
    interval?: SortOrder
    times?: SortOrder
    enabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type schedulesAvgOrderByAggregateInput = {
    interval?: SortOrder
  }

  export type schedulesMaxOrderByAggregateInput = {
    id?: SortOrder
    cat_id?: SortOrder
    type?: SortOrder
    interval?: SortOrder
    enabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type schedulesMinOrderByAggregateInput = {
    id?: SortOrder
    cat_id?: SortOrder
    type?: SortOrder
    interval?: SortOrder
    enabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type schedulesSumOrderByAggregateInput = {
    interval?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type ProfilesNullableScalarRelationFilter = {
    is?: profilesWhereInput | null
    isNot?: profilesWhereInput | null
  }

  export type feeding_logsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    household_id?: SortOrder
    meal_type?: SortOrder
    amount?: SortOrder
    unit?: SortOrder
    notes?: SortOrder
    fed_by?: SortOrder
    fed_at?: SortOrder
  }

  export type feeding_logsAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type feeding_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    household_id?: SortOrder
    meal_type?: SortOrder
    amount?: SortOrder
    unit?: SortOrder
    notes?: SortOrder
    fed_by?: SortOrder
    fed_at?: SortOrder
  }

  export type feeding_logsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    household_id?: SortOrder
    meal_type?: SortOrder
    amount?: SortOrder
    unit?: SortOrder
    notes?: SortOrder
    fed_by?: SortOrder
    fed_at?: SortOrder
  }

  export type feeding_logsSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type schema_migrationsCountOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
    applied_at?: SortOrder
  }

  export type schema_migrationsMaxOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
    applied_at?: SortOrder
  }

  export type schema_migrationsMinOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
    applied_at?: SortOrder
  }

  export type cat_weight_logsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    cat_id?: SortOrder
    notes?: SortOrder
    measured_by?: SortOrder
  }

  export type cat_weight_logsAvgOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type cat_weight_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    cat_id?: SortOrder
    notes?: SortOrder
    measured_by?: SortOrder
  }

  export type cat_weight_logsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    cat_id?: SortOrder
    notes?: SortOrder
    measured_by?: SortOrder
  }

  export type cat_weight_logsSumOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type Weight_goal_milestonesListRelationFilter = {
    every?: weight_goal_milestonesWhereInput
    some?: weight_goal_milestonesWhereInput
    none?: weight_goal_milestonesWhereInput
  }

  export type weight_goal_milestonesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type weight_goalsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    goal_name?: SortOrder
    target_weight?: SortOrder
    target_date?: SortOrder
    start_weight?: SortOrder
    unit?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    created_by?: SortOrder
  }

  export type weight_goalsAvgOrderByAggregateInput = {
    target_weight?: SortOrder
    start_weight?: SortOrder
  }

  export type weight_goalsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    goal_name?: SortOrder
    target_weight?: SortOrder
    target_date?: SortOrder
    start_weight?: SortOrder
    unit?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    created_by?: SortOrder
  }

  export type weight_goalsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    cat_id?: SortOrder
    goal_name?: SortOrder
    target_weight?: SortOrder
    target_date?: SortOrder
    start_weight?: SortOrder
    unit?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    created_by?: SortOrder
  }

  export type weight_goalsSumOrderByAggregateInput = {
    target_weight?: SortOrder
    start_weight?: SortOrder
  }

  export type Weight_goalsScalarRelationFilter = {
    is?: weight_goalsWhereInput
    isNot?: weight_goalsWhereInput
  }

  export type weight_goal_milestonesCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    goal_id?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    notes?: SortOrder
  }

  export type weight_goal_milestonesAvgOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type weight_goal_milestonesMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    goal_id?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    notes?: SortOrder
  }

  export type weight_goal_milestonesMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    goal_id?: SortOrder
    weight?: SortOrder
    date?: SortOrder
    notes?: SortOrder
  }

  export type weight_goal_milestonesSumOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type householdsCreateNestedOneWithoutCatsInput = {
    create?: XOR<householdsCreateWithoutCatsInput, householdsUncheckedCreateWithoutCatsInput>
    connectOrCreate?: householdsCreateOrConnectWithoutCatsInput
    connect?: householdsWhereUniqueInput
  }

  export type profilesCreateNestedOneWithoutOwned_catsInput = {
    create?: XOR<profilesCreateWithoutOwned_catsInput, profilesUncheckedCreateWithoutOwned_catsInput>
    connectOrCreate?: profilesCreateOrConnectWithoutOwned_catsInput
    connect?: profilesWhereUniqueInput
  }

  export type feeding_logsCreateNestedManyWithoutCatInput = {
    create?: XOR<feeding_logsCreateWithoutCatInput, feeding_logsUncheckedCreateWithoutCatInput> | feeding_logsCreateWithoutCatInput[] | feeding_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutCatInput | feeding_logsCreateOrConnectWithoutCatInput[]
    createMany?: feeding_logsCreateManyCatInputEnvelope
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
  }

  export type schedulesCreateNestedManyWithoutCatInput = {
    create?: XOR<schedulesCreateWithoutCatInput, schedulesUncheckedCreateWithoutCatInput> | schedulesCreateWithoutCatInput[] | schedulesUncheckedCreateWithoutCatInput[]
    connectOrCreate?: schedulesCreateOrConnectWithoutCatInput | schedulesCreateOrConnectWithoutCatInput[]
    createMany?: schedulesCreateManyCatInputEnvelope
    connect?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
  }

  export type cat_weight_logsCreateNestedManyWithoutCatInput = {
    create?: XOR<cat_weight_logsCreateWithoutCatInput, cat_weight_logsUncheckedCreateWithoutCatInput> | cat_weight_logsCreateWithoutCatInput[] | cat_weight_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutCatInput | cat_weight_logsCreateOrConnectWithoutCatInput[]
    createMany?: cat_weight_logsCreateManyCatInputEnvelope
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
  }

  export type weight_goalsCreateNestedManyWithoutCatInput = {
    create?: XOR<weight_goalsCreateWithoutCatInput, weight_goalsUncheckedCreateWithoutCatInput> | weight_goalsCreateWithoutCatInput[] | weight_goalsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCatInput | weight_goalsCreateOrConnectWithoutCatInput[]
    createMany?: weight_goalsCreateManyCatInputEnvelope
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
  }

  export type feeding_logsUncheckedCreateNestedManyWithoutCatInput = {
    create?: XOR<feeding_logsCreateWithoutCatInput, feeding_logsUncheckedCreateWithoutCatInput> | feeding_logsCreateWithoutCatInput[] | feeding_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutCatInput | feeding_logsCreateOrConnectWithoutCatInput[]
    createMany?: feeding_logsCreateManyCatInputEnvelope
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
  }

  export type schedulesUncheckedCreateNestedManyWithoutCatInput = {
    create?: XOR<schedulesCreateWithoutCatInput, schedulesUncheckedCreateWithoutCatInput> | schedulesCreateWithoutCatInput[] | schedulesUncheckedCreateWithoutCatInput[]
    connectOrCreate?: schedulesCreateOrConnectWithoutCatInput | schedulesCreateOrConnectWithoutCatInput[]
    createMany?: schedulesCreateManyCatInputEnvelope
    connect?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
  }

  export type cat_weight_logsUncheckedCreateNestedManyWithoutCatInput = {
    create?: XOR<cat_weight_logsCreateWithoutCatInput, cat_weight_logsUncheckedCreateWithoutCatInput> | cat_weight_logsCreateWithoutCatInput[] | cat_weight_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutCatInput | cat_weight_logsCreateOrConnectWithoutCatInput[]
    createMany?: cat_weight_logsCreateManyCatInputEnvelope
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
  }

  export type weight_goalsUncheckedCreateNestedManyWithoutCatInput = {
    create?: XOR<weight_goalsCreateWithoutCatInput, weight_goalsUncheckedCreateWithoutCatInput> | weight_goalsCreateWithoutCatInput[] | weight_goalsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCatInput | weight_goalsCreateOrConnectWithoutCatInput[]
    createMany?: weight_goalsCreateManyCatInputEnvelope
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type householdsUpdateOneRequiredWithoutCatsNestedInput = {
    create?: XOR<householdsCreateWithoutCatsInput, householdsUncheckedCreateWithoutCatsInput>
    connectOrCreate?: householdsCreateOrConnectWithoutCatsInput
    upsert?: householdsUpsertWithoutCatsInput
    connect?: householdsWhereUniqueInput
    update?: XOR<XOR<householdsUpdateToOneWithWhereWithoutCatsInput, householdsUpdateWithoutCatsInput>, householdsUncheckedUpdateWithoutCatsInput>
  }

  export type profilesUpdateOneRequiredWithoutOwned_catsNestedInput = {
    create?: XOR<profilesCreateWithoutOwned_catsInput, profilesUncheckedCreateWithoutOwned_catsInput>
    connectOrCreate?: profilesCreateOrConnectWithoutOwned_catsInput
    upsert?: profilesUpsertWithoutOwned_catsInput
    connect?: profilesWhereUniqueInput
    update?: XOR<XOR<profilesUpdateToOneWithWhereWithoutOwned_catsInput, profilesUpdateWithoutOwned_catsInput>, profilesUncheckedUpdateWithoutOwned_catsInput>
  }

  export type feeding_logsUpdateManyWithoutCatNestedInput = {
    create?: XOR<feeding_logsCreateWithoutCatInput, feeding_logsUncheckedCreateWithoutCatInput> | feeding_logsCreateWithoutCatInput[] | feeding_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutCatInput | feeding_logsCreateOrConnectWithoutCatInput[]
    upsert?: feeding_logsUpsertWithWhereUniqueWithoutCatInput | feeding_logsUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: feeding_logsCreateManyCatInputEnvelope
    set?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    disconnect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    delete?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    update?: feeding_logsUpdateWithWhereUniqueWithoutCatInput | feeding_logsUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: feeding_logsUpdateManyWithWhereWithoutCatInput | feeding_logsUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
  }

  export type schedulesUpdateManyWithoutCatNestedInput = {
    create?: XOR<schedulesCreateWithoutCatInput, schedulesUncheckedCreateWithoutCatInput> | schedulesCreateWithoutCatInput[] | schedulesUncheckedCreateWithoutCatInput[]
    connectOrCreate?: schedulesCreateOrConnectWithoutCatInput | schedulesCreateOrConnectWithoutCatInput[]
    upsert?: schedulesUpsertWithWhereUniqueWithoutCatInput | schedulesUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: schedulesCreateManyCatInputEnvelope
    set?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    disconnect?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    delete?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    connect?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    update?: schedulesUpdateWithWhereUniqueWithoutCatInput | schedulesUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: schedulesUpdateManyWithWhereWithoutCatInput | schedulesUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: schedulesScalarWhereInput | schedulesScalarWhereInput[]
  }

  export type cat_weight_logsUpdateManyWithoutCatNestedInput = {
    create?: XOR<cat_weight_logsCreateWithoutCatInput, cat_weight_logsUncheckedCreateWithoutCatInput> | cat_weight_logsCreateWithoutCatInput[] | cat_weight_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutCatInput | cat_weight_logsCreateOrConnectWithoutCatInput[]
    upsert?: cat_weight_logsUpsertWithWhereUniqueWithoutCatInput | cat_weight_logsUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: cat_weight_logsCreateManyCatInputEnvelope
    set?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    disconnect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    delete?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    update?: cat_weight_logsUpdateWithWhereUniqueWithoutCatInput | cat_weight_logsUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: cat_weight_logsUpdateManyWithWhereWithoutCatInput | cat_weight_logsUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: cat_weight_logsScalarWhereInput | cat_weight_logsScalarWhereInput[]
  }

  export type weight_goalsUpdateManyWithoutCatNestedInput = {
    create?: XOR<weight_goalsCreateWithoutCatInput, weight_goalsUncheckedCreateWithoutCatInput> | weight_goalsCreateWithoutCatInput[] | weight_goalsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCatInput | weight_goalsCreateOrConnectWithoutCatInput[]
    upsert?: weight_goalsUpsertWithWhereUniqueWithoutCatInput | weight_goalsUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: weight_goalsCreateManyCatInputEnvelope
    set?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    disconnect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    delete?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    update?: weight_goalsUpdateWithWhereUniqueWithoutCatInput | weight_goalsUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: weight_goalsUpdateManyWithWhereWithoutCatInput | weight_goalsUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: weight_goalsScalarWhereInput | weight_goalsScalarWhereInput[]
  }

  export type feeding_logsUncheckedUpdateManyWithoutCatNestedInput = {
    create?: XOR<feeding_logsCreateWithoutCatInput, feeding_logsUncheckedCreateWithoutCatInput> | feeding_logsCreateWithoutCatInput[] | feeding_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutCatInput | feeding_logsCreateOrConnectWithoutCatInput[]
    upsert?: feeding_logsUpsertWithWhereUniqueWithoutCatInput | feeding_logsUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: feeding_logsCreateManyCatInputEnvelope
    set?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    disconnect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    delete?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    update?: feeding_logsUpdateWithWhereUniqueWithoutCatInput | feeding_logsUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: feeding_logsUpdateManyWithWhereWithoutCatInput | feeding_logsUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
  }

  export type schedulesUncheckedUpdateManyWithoutCatNestedInput = {
    create?: XOR<schedulesCreateWithoutCatInput, schedulesUncheckedCreateWithoutCatInput> | schedulesCreateWithoutCatInput[] | schedulesUncheckedCreateWithoutCatInput[]
    connectOrCreate?: schedulesCreateOrConnectWithoutCatInput | schedulesCreateOrConnectWithoutCatInput[]
    upsert?: schedulesUpsertWithWhereUniqueWithoutCatInput | schedulesUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: schedulesCreateManyCatInputEnvelope
    set?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    disconnect?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    delete?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    connect?: schedulesWhereUniqueInput | schedulesWhereUniqueInput[]
    update?: schedulesUpdateWithWhereUniqueWithoutCatInput | schedulesUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: schedulesUpdateManyWithWhereWithoutCatInput | schedulesUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: schedulesScalarWhereInput | schedulesScalarWhereInput[]
  }

  export type cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput = {
    create?: XOR<cat_weight_logsCreateWithoutCatInput, cat_weight_logsUncheckedCreateWithoutCatInput> | cat_weight_logsCreateWithoutCatInput[] | cat_weight_logsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutCatInput | cat_weight_logsCreateOrConnectWithoutCatInput[]
    upsert?: cat_weight_logsUpsertWithWhereUniqueWithoutCatInput | cat_weight_logsUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: cat_weight_logsCreateManyCatInputEnvelope
    set?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    disconnect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    delete?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    update?: cat_weight_logsUpdateWithWhereUniqueWithoutCatInput | cat_weight_logsUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: cat_weight_logsUpdateManyWithWhereWithoutCatInput | cat_weight_logsUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: cat_weight_logsScalarWhereInput | cat_weight_logsScalarWhereInput[]
  }

  export type weight_goalsUncheckedUpdateManyWithoutCatNestedInput = {
    create?: XOR<weight_goalsCreateWithoutCatInput, weight_goalsUncheckedCreateWithoutCatInput> | weight_goalsCreateWithoutCatInput[] | weight_goalsUncheckedCreateWithoutCatInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCatInput | weight_goalsCreateOrConnectWithoutCatInput[]
    upsert?: weight_goalsUpsertWithWhereUniqueWithoutCatInput | weight_goalsUpsertWithWhereUniqueWithoutCatInput[]
    createMany?: weight_goalsCreateManyCatInputEnvelope
    set?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    disconnect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    delete?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    update?: weight_goalsUpdateWithWhereUniqueWithoutCatInput | weight_goalsUpdateWithWhereUniqueWithoutCatInput[]
    updateMany?: weight_goalsUpdateManyWithWhereWithoutCatInput | weight_goalsUpdateManyWithWhereWithoutCatInput[]
    deleteMany?: weight_goalsScalarWhereInput | weight_goalsScalarWhereInput[]
  }

  export type householdsCreateNestedOneWithoutHousehold_membersInput = {
    create?: XOR<householdsCreateWithoutHousehold_membersInput, householdsUncheckedCreateWithoutHousehold_membersInput>
    connectOrCreate?: householdsCreateOrConnectWithoutHousehold_membersInput
    connect?: householdsWhereUniqueInput
  }

  export type profilesCreateNestedOneWithoutHousehold_membersInput = {
    create?: XOR<profilesCreateWithoutHousehold_membersInput, profilesUncheckedCreateWithoutHousehold_membersInput>
    connectOrCreate?: profilesCreateOrConnectWithoutHousehold_membersInput
    connect?: profilesWhereUniqueInput
  }

  export type householdsUpdateOneRequiredWithoutHousehold_membersNestedInput = {
    create?: XOR<householdsCreateWithoutHousehold_membersInput, householdsUncheckedCreateWithoutHousehold_membersInput>
    connectOrCreate?: householdsCreateOrConnectWithoutHousehold_membersInput
    upsert?: householdsUpsertWithoutHousehold_membersInput
    connect?: householdsWhereUniqueInput
    update?: XOR<XOR<householdsUpdateToOneWithWhereWithoutHousehold_membersInput, householdsUpdateWithoutHousehold_membersInput>, householdsUncheckedUpdateWithoutHousehold_membersInput>
  }

  export type profilesUpdateOneRequiredWithoutHousehold_membersNestedInput = {
    create?: XOR<profilesCreateWithoutHousehold_membersInput, profilesUncheckedCreateWithoutHousehold_membersInput>
    connectOrCreate?: profilesCreateOrConnectWithoutHousehold_membersInput
    upsert?: profilesUpsertWithoutHousehold_membersInput
    connect?: profilesWhereUniqueInput
    update?: XOR<XOR<profilesUpdateToOneWithWhereWithoutHousehold_membersInput, profilesUpdateWithoutHousehold_membersInput>, profilesUncheckedUpdateWithoutHousehold_membersInput>
  }

  export type catsCreateNestedManyWithoutHouseholdInput = {
    create?: XOR<catsCreateWithoutHouseholdInput, catsUncheckedCreateWithoutHouseholdInput> | catsCreateWithoutHouseholdInput[] | catsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: catsCreateOrConnectWithoutHouseholdInput | catsCreateOrConnectWithoutHouseholdInput[]
    createMany?: catsCreateManyHouseholdInputEnvelope
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
  }

  export type feeding_logsCreateNestedManyWithoutHouseholdInput = {
    create?: XOR<feeding_logsCreateWithoutHouseholdInput, feeding_logsUncheckedCreateWithoutHouseholdInput> | feeding_logsCreateWithoutHouseholdInput[] | feeding_logsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutHouseholdInput | feeding_logsCreateOrConnectWithoutHouseholdInput[]
    createMany?: feeding_logsCreateManyHouseholdInputEnvelope
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
  }

  export type household_membersCreateNestedManyWithoutHouseholdInput = {
    create?: XOR<household_membersCreateWithoutHouseholdInput, household_membersUncheckedCreateWithoutHouseholdInput> | household_membersCreateWithoutHouseholdInput[] | household_membersUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutHouseholdInput | household_membersCreateOrConnectWithoutHouseholdInput[]
    createMany?: household_membersCreateManyHouseholdInputEnvelope
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
  }

  export type catsUncheckedCreateNestedManyWithoutHouseholdInput = {
    create?: XOR<catsCreateWithoutHouseholdInput, catsUncheckedCreateWithoutHouseholdInput> | catsCreateWithoutHouseholdInput[] | catsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: catsCreateOrConnectWithoutHouseholdInput | catsCreateOrConnectWithoutHouseholdInput[]
    createMany?: catsCreateManyHouseholdInputEnvelope
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
  }

  export type feeding_logsUncheckedCreateNestedManyWithoutHouseholdInput = {
    create?: XOR<feeding_logsCreateWithoutHouseholdInput, feeding_logsUncheckedCreateWithoutHouseholdInput> | feeding_logsCreateWithoutHouseholdInput[] | feeding_logsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutHouseholdInput | feeding_logsCreateOrConnectWithoutHouseholdInput[]
    createMany?: feeding_logsCreateManyHouseholdInputEnvelope
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
  }

  export type household_membersUncheckedCreateNestedManyWithoutHouseholdInput = {
    create?: XOR<household_membersCreateWithoutHouseholdInput, household_membersUncheckedCreateWithoutHouseholdInput> | household_membersCreateWithoutHouseholdInput[] | household_membersUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutHouseholdInput | household_membersCreateOrConnectWithoutHouseholdInput[]
    createMany?: household_membersCreateManyHouseholdInputEnvelope
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
  }

  export type catsUpdateManyWithoutHouseholdNestedInput = {
    create?: XOR<catsCreateWithoutHouseholdInput, catsUncheckedCreateWithoutHouseholdInput> | catsCreateWithoutHouseholdInput[] | catsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: catsCreateOrConnectWithoutHouseholdInput | catsCreateOrConnectWithoutHouseholdInput[]
    upsert?: catsUpsertWithWhereUniqueWithoutHouseholdInput | catsUpsertWithWhereUniqueWithoutHouseholdInput[]
    createMany?: catsCreateManyHouseholdInputEnvelope
    set?: catsWhereUniqueInput | catsWhereUniqueInput[]
    disconnect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    delete?: catsWhereUniqueInput | catsWhereUniqueInput[]
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    update?: catsUpdateWithWhereUniqueWithoutHouseholdInput | catsUpdateWithWhereUniqueWithoutHouseholdInput[]
    updateMany?: catsUpdateManyWithWhereWithoutHouseholdInput | catsUpdateManyWithWhereWithoutHouseholdInput[]
    deleteMany?: catsScalarWhereInput | catsScalarWhereInput[]
  }

  export type feeding_logsUpdateManyWithoutHouseholdNestedInput = {
    create?: XOR<feeding_logsCreateWithoutHouseholdInput, feeding_logsUncheckedCreateWithoutHouseholdInput> | feeding_logsCreateWithoutHouseholdInput[] | feeding_logsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutHouseholdInput | feeding_logsCreateOrConnectWithoutHouseholdInput[]
    upsert?: feeding_logsUpsertWithWhereUniqueWithoutHouseholdInput | feeding_logsUpsertWithWhereUniqueWithoutHouseholdInput[]
    createMany?: feeding_logsCreateManyHouseholdInputEnvelope
    set?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    disconnect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    delete?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    update?: feeding_logsUpdateWithWhereUniqueWithoutHouseholdInput | feeding_logsUpdateWithWhereUniqueWithoutHouseholdInput[]
    updateMany?: feeding_logsUpdateManyWithWhereWithoutHouseholdInput | feeding_logsUpdateManyWithWhereWithoutHouseholdInput[]
    deleteMany?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
  }

  export type household_membersUpdateManyWithoutHouseholdNestedInput = {
    create?: XOR<household_membersCreateWithoutHouseholdInput, household_membersUncheckedCreateWithoutHouseholdInput> | household_membersCreateWithoutHouseholdInput[] | household_membersUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutHouseholdInput | household_membersCreateOrConnectWithoutHouseholdInput[]
    upsert?: household_membersUpsertWithWhereUniqueWithoutHouseholdInput | household_membersUpsertWithWhereUniqueWithoutHouseholdInput[]
    createMany?: household_membersCreateManyHouseholdInputEnvelope
    set?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    disconnect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    delete?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    update?: household_membersUpdateWithWhereUniqueWithoutHouseholdInput | household_membersUpdateWithWhereUniqueWithoutHouseholdInput[]
    updateMany?: household_membersUpdateManyWithWhereWithoutHouseholdInput | household_membersUpdateManyWithWhereWithoutHouseholdInput[]
    deleteMany?: household_membersScalarWhereInput | household_membersScalarWhereInput[]
  }

  export type catsUncheckedUpdateManyWithoutHouseholdNestedInput = {
    create?: XOR<catsCreateWithoutHouseholdInput, catsUncheckedCreateWithoutHouseholdInput> | catsCreateWithoutHouseholdInput[] | catsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: catsCreateOrConnectWithoutHouseholdInput | catsCreateOrConnectWithoutHouseholdInput[]
    upsert?: catsUpsertWithWhereUniqueWithoutHouseholdInput | catsUpsertWithWhereUniqueWithoutHouseholdInput[]
    createMany?: catsCreateManyHouseholdInputEnvelope
    set?: catsWhereUniqueInput | catsWhereUniqueInput[]
    disconnect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    delete?: catsWhereUniqueInput | catsWhereUniqueInput[]
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    update?: catsUpdateWithWhereUniqueWithoutHouseholdInput | catsUpdateWithWhereUniqueWithoutHouseholdInput[]
    updateMany?: catsUpdateManyWithWhereWithoutHouseholdInput | catsUpdateManyWithWhereWithoutHouseholdInput[]
    deleteMany?: catsScalarWhereInput | catsScalarWhereInput[]
  }

  export type feeding_logsUncheckedUpdateManyWithoutHouseholdNestedInput = {
    create?: XOR<feeding_logsCreateWithoutHouseholdInput, feeding_logsUncheckedCreateWithoutHouseholdInput> | feeding_logsCreateWithoutHouseholdInput[] | feeding_logsUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutHouseholdInput | feeding_logsCreateOrConnectWithoutHouseholdInput[]
    upsert?: feeding_logsUpsertWithWhereUniqueWithoutHouseholdInput | feeding_logsUpsertWithWhereUniqueWithoutHouseholdInput[]
    createMany?: feeding_logsCreateManyHouseholdInputEnvelope
    set?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    disconnect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    delete?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    update?: feeding_logsUpdateWithWhereUniqueWithoutHouseholdInput | feeding_logsUpdateWithWhereUniqueWithoutHouseholdInput[]
    updateMany?: feeding_logsUpdateManyWithWhereWithoutHouseholdInput | feeding_logsUpdateManyWithWhereWithoutHouseholdInput[]
    deleteMany?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
  }

  export type household_membersUncheckedUpdateManyWithoutHouseholdNestedInput = {
    create?: XOR<household_membersCreateWithoutHouseholdInput, household_membersUncheckedCreateWithoutHouseholdInput> | household_membersCreateWithoutHouseholdInput[] | household_membersUncheckedCreateWithoutHouseholdInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutHouseholdInput | household_membersCreateOrConnectWithoutHouseholdInput[]
    upsert?: household_membersUpsertWithWhereUniqueWithoutHouseholdInput | household_membersUpsertWithWhereUniqueWithoutHouseholdInput[]
    createMany?: household_membersCreateManyHouseholdInputEnvelope
    set?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    disconnect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    delete?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    update?: household_membersUpdateWithWhereUniqueWithoutHouseholdInput | household_membersUpdateWithWhereUniqueWithoutHouseholdInput[]
    updateMany?: household_membersUpdateManyWithWhereWithoutHouseholdInput | household_membersUpdateManyWithWhereWithoutHouseholdInput[]
    deleteMany?: household_membersScalarWhereInput | household_membersScalarWhereInput[]
  }

  export type catsCreateNestedManyWithoutOwnerInput = {
    create?: XOR<catsCreateWithoutOwnerInput, catsUncheckedCreateWithoutOwnerInput> | catsCreateWithoutOwnerInput[] | catsUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: catsCreateOrConnectWithoutOwnerInput | catsCreateOrConnectWithoutOwnerInput[]
    createMany?: catsCreateManyOwnerInputEnvelope
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
  }

  export type feeding_logsCreateNestedManyWithoutFeederInput = {
    create?: XOR<feeding_logsCreateWithoutFeederInput, feeding_logsUncheckedCreateWithoutFeederInput> | feeding_logsCreateWithoutFeederInput[] | feeding_logsUncheckedCreateWithoutFeederInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutFeederInput | feeding_logsCreateOrConnectWithoutFeederInput[]
    createMany?: feeding_logsCreateManyFeederInputEnvelope
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
  }

  export type household_membersCreateNestedManyWithoutUserInput = {
    create?: XOR<household_membersCreateWithoutUserInput, household_membersUncheckedCreateWithoutUserInput> | household_membersCreateWithoutUserInput[] | household_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutUserInput | household_membersCreateOrConnectWithoutUserInput[]
    createMany?: household_membersCreateManyUserInputEnvelope
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
  }

  export type cat_weight_logsCreateNestedManyWithoutMeasuredByInput = {
    create?: XOR<cat_weight_logsCreateWithoutMeasuredByInput, cat_weight_logsUncheckedCreateWithoutMeasuredByInput> | cat_weight_logsCreateWithoutMeasuredByInput[] | cat_weight_logsUncheckedCreateWithoutMeasuredByInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutMeasuredByInput | cat_weight_logsCreateOrConnectWithoutMeasuredByInput[]
    createMany?: cat_weight_logsCreateManyMeasuredByInputEnvelope
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
  }

  export type weight_goalsCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<weight_goalsCreateWithoutCreatedByInput, weight_goalsUncheckedCreateWithoutCreatedByInput> | weight_goalsCreateWithoutCreatedByInput[] | weight_goalsUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCreatedByInput | weight_goalsCreateOrConnectWithoutCreatedByInput[]
    createMany?: weight_goalsCreateManyCreatedByInputEnvelope
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
  }

  export type catsUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<catsCreateWithoutOwnerInput, catsUncheckedCreateWithoutOwnerInput> | catsCreateWithoutOwnerInput[] | catsUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: catsCreateOrConnectWithoutOwnerInput | catsCreateOrConnectWithoutOwnerInput[]
    createMany?: catsCreateManyOwnerInputEnvelope
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
  }

  export type feeding_logsUncheckedCreateNestedManyWithoutFeederInput = {
    create?: XOR<feeding_logsCreateWithoutFeederInput, feeding_logsUncheckedCreateWithoutFeederInput> | feeding_logsCreateWithoutFeederInput[] | feeding_logsUncheckedCreateWithoutFeederInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutFeederInput | feeding_logsCreateOrConnectWithoutFeederInput[]
    createMany?: feeding_logsCreateManyFeederInputEnvelope
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
  }

  export type household_membersUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<household_membersCreateWithoutUserInput, household_membersUncheckedCreateWithoutUserInput> | household_membersCreateWithoutUserInput[] | household_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutUserInput | household_membersCreateOrConnectWithoutUserInput[]
    createMany?: household_membersCreateManyUserInputEnvelope
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
  }

  export type cat_weight_logsUncheckedCreateNestedManyWithoutMeasuredByInput = {
    create?: XOR<cat_weight_logsCreateWithoutMeasuredByInput, cat_weight_logsUncheckedCreateWithoutMeasuredByInput> | cat_weight_logsCreateWithoutMeasuredByInput[] | cat_weight_logsUncheckedCreateWithoutMeasuredByInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutMeasuredByInput | cat_weight_logsCreateOrConnectWithoutMeasuredByInput[]
    createMany?: cat_weight_logsCreateManyMeasuredByInputEnvelope
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
  }

  export type weight_goalsUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<weight_goalsCreateWithoutCreatedByInput, weight_goalsUncheckedCreateWithoutCreatedByInput> | weight_goalsCreateWithoutCreatedByInput[] | weight_goalsUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCreatedByInput | weight_goalsCreateOrConnectWithoutCreatedByInput[]
    createMany?: weight_goalsCreateManyCreatedByInputEnvelope
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
  }

  export type catsUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<catsCreateWithoutOwnerInput, catsUncheckedCreateWithoutOwnerInput> | catsCreateWithoutOwnerInput[] | catsUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: catsCreateOrConnectWithoutOwnerInput | catsCreateOrConnectWithoutOwnerInput[]
    upsert?: catsUpsertWithWhereUniqueWithoutOwnerInput | catsUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: catsCreateManyOwnerInputEnvelope
    set?: catsWhereUniqueInput | catsWhereUniqueInput[]
    disconnect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    delete?: catsWhereUniqueInput | catsWhereUniqueInput[]
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    update?: catsUpdateWithWhereUniqueWithoutOwnerInput | catsUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: catsUpdateManyWithWhereWithoutOwnerInput | catsUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: catsScalarWhereInput | catsScalarWhereInput[]
  }

  export type feeding_logsUpdateManyWithoutFeederNestedInput = {
    create?: XOR<feeding_logsCreateWithoutFeederInput, feeding_logsUncheckedCreateWithoutFeederInput> | feeding_logsCreateWithoutFeederInput[] | feeding_logsUncheckedCreateWithoutFeederInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutFeederInput | feeding_logsCreateOrConnectWithoutFeederInput[]
    upsert?: feeding_logsUpsertWithWhereUniqueWithoutFeederInput | feeding_logsUpsertWithWhereUniqueWithoutFeederInput[]
    createMany?: feeding_logsCreateManyFeederInputEnvelope
    set?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    disconnect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    delete?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    update?: feeding_logsUpdateWithWhereUniqueWithoutFeederInput | feeding_logsUpdateWithWhereUniqueWithoutFeederInput[]
    updateMany?: feeding_logsUpdateManyWithWhereWithoutFeederInput | feeding_logsUpdateManyWithWhereWithoutFeederInput[]
    deleteMany?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
  }

  export type household_membersUpdateManyWithoutUserNestedInput = {
    create?: XOR<household_membersCreateWithoutUserInput, household_membersUncheckedCreateWithoutUserInput> | household_membersCreateWithoutUserInput[] | household_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutUserInput | household_membersCreateOrConnectWithoutUserInput[]
    upsert?: household_membersUpsertWithWhereUniqueWithoutUserInput | household_membersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: household_membersCreateManyUserInputEnvelope
    set?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    disconnect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    delete?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    update?: household_membersUpdateWithWhereUniqueWithoutUserInput | household_membersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: household_membersUpdateManyWithWhereWithoutUserInput | household_membersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: household_membersScalarWhereInput | household_membersScalarWhereInput[]
  }

  export type cat_weight_logsUpdateManyWithoutMeasuredByNestedInput = {
    create?: XOR<cat_weight_logsCreateWithoutMeasuredByInput, cat_weight_logsUncheckedCreateWithoutMeasuredByInput> | cat_weight_logsCreateWithoutMeasuredByInput[] | cat_weight_logsUncheckedCreateWithoutMeasuredByInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutMeasuredByInput | cat_weight_logsCreateOrConnectWithoutMeasuredByInput[]
    upsert?: cat_weight_logsUpsertWithWhereUniqueWithoutMeasuredByInput | cat_weight_logsUpsertWithWhereUniqueWithoutMeasuredByInput[]
    createMany?: cat_weight_logsCreateManyMeasuredByInputEnvelope
    set?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    disconnect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    delete?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    update?: cat_weight_logsUpdateWithWhereUniqueWithoutMeasuredByInput | cat_weight_logsUpdateWithWhereUniqueWithoutMeasuredByInput[]
    updateMany?: cat_weight_logsUpdateManyWithWhereWithoutMeasuredByInput | cat_weight_logsUpdateManyWithWhereWithoutMeasuredByInput[]
    deleteMany?: cat_weight_logsScalarWhereInput | cat_weight_logsScalarWhereInput[]
  }

  export type weight_goalsUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<weight_goalsCreateWithoutCreatedByInput, weight_goalsUncheckedCreateWithoutCreatedByInput> | weight_goalsCreateWithoutCreatedByInput[] | weight_goalsUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCreatedByInput | weight_goalsCreateOrConnectWithoutCreatedByInput[]
    upsert?: weight_goalsUpsertWithWhereUniqueWithoutCreatedByInput | weight_goalsUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: weight_goalsCreateManyCreatedByInputEnvelope
    set?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    disconnect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    delete?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    update?: weight_goalsUpdateWithWhereUniqueWithoutCreatedByInput | weight_goalsUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: weight_goalsUpdateManyWithWhereWithoutCreatedByInput | weight_goalsUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: weight_goalsScalarWhereInput | weight_goalsScalarWhereInput[]
  }

  export type catsUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<catsCreateWithoutOwnerInput, catsUncheckedCreateWithoutOwnerInput> | catsCreateWithoutOwnerInput[] | catsUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: catsCreateOrConnectWithoutOwnerInput | catsCreateOrConnectWithoutOwnerInput[]
    upsert?: catsUpsertWithWhereUniqueWithoutOwnerInput | catsUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: catsCreateManyOwnerInputEnvelope
    set?: catsWhereUniqueInput | catsWhereUniqueInput[]
    disconnect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    delete?: catsWhereUniqueInput | catsWhereUniqueInput[]
    connect?: catsWhereUniqueInput | catsWhereUniqueInput[]
    update?: catsUpdateWithWhereUniqueWithoutOwnerInput | catsUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: catsUpdateManyWithWhereWithoutOwnerInput | catsUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: catsScalarWhereInput | catsScalarWhereInput[]
  }

  export type feeding_logsUncheckedUpdateManyWithoutFeederNestedInput = {
    create?: XOR<feeding_logsCreateWithoutFeederInput, feeding_logsUncheckedCreateWithoutFeederInput> | feeding_logsCreateWithoutFeederInput[] | feeding_logsUncheckedCreateWithoutFeederInput[]
    connectOrCreate?: feeding_logsCreateOrConnectWithoutFeederInput | feeding_logsCreateOrConnectWithoutFeederInput[]
    upsert?: feeding_logsUpsertWithWhereUniqueWithoutFeederInput | feeding_logsUpsertWithWhereUniqueWithoutFeederInput[]
    createMany?: feeding_logsCreateManyFeederInputEnvelope
    set?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    disconnect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    delete?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    connect?: feeding_logsWhereUniqueInput | feeding_logsWhereUniqueInput[]
    update?: feeding_logsUpdateWithWhereUniqueWithoutFeederInput | feeding_logsUpdateWithWhereUniqueWithoutFeederInput[]
    updateMany?: feeding_logsUpdateManyWithWhereWithoutFeederInput | feeding_logsUpdateManyWithWhereWithoutFeederInput[]
    deleteMany?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
  }

  export type household_membersUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<household_membersCreateWithoutUserInput, household_membersUncheckedCreateWithoutUserInput> | household_membersCreateWithoutUserInput[] | household_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: household_membersCreateOrConnectWithoutUserInput | household_membersCreateOrConnectWithoutUserInput[]
    upsert?: household_membersUpsertWithWhereUniqueWithoutUserInput | household_membersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: household_membersCreateManyUserInputEnvelope
    set?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    disconnect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    delete?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    connect?: household_membersWhereUniqueInput | household_membersWhereUniqueInput[]
    update?: household_membersUpdateWithWhereUniqueWithoutUserInput | household_membersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: household_membersUpdateManyWithWhereWithoutUserInput | household_membersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: household_membersScalarWhereInput | household_membersScalarWhereInput[]
  }

  export type cat_weight_logsUncheckedUpdateManyWithoutMeasuredByNestedInput = {
    create?: XOR<cat_weight_logsCreateWithoutMeasuredByInput, cat_weight_logsUncheckedCreateWithoutMeasuredByInput> | cat_weight_logsCreateWithoutMeasuredByInput[] | cat_weight_logsUncheckedCreateWithoutMeasuredByInput[]
    connectOrCreate?: cat_weight_logsCreateOrConnectWithoutMeasuredByInput | cat_weight_logsCreateOrConnectWithoutMeasuredByInput[]
    upsert?: cat_weight_logsUpsertWithWhereUniqueWithoutMeasuredByInput | cat_weight_logsUpsertWithWhereUniqueWithoutMeasuredByInput[]
    createMany?: cat_weight_logsCreateManyMeasuredByInputEnvelope
    set?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    disconnect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    delete?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    connect?: cat_weight_logsWhereUniqueInput | cat_weight_logsWhereUniqueInput[]
    update?: cat_weight_logsUpdateWithWhereUniqueWithoutMeasuredByInput | cat_weight_logsUpdateWithWhereUniqueWithoutMeasuredByInput[]
    updateMany?: cat_weight_logsUpdateManyWithWhereWithoutMeasuredByInput | cat_weight_logsUpdateManyWithWhereWithoutMeasuredByInput[]
    deleteMany?: cat_weight_logsScalarWhereInput | cat_weight_logsScalarWhereInput[]
  }

  export type weight_goalsUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<weight_goalsCreateWithoutCreatedByInput, weight_goalsUncheckedCreateWithoutCreatedByInput> | weight_goalsCreateWithoutCreatedByInput[] | weight_goalsUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: weight_goalsCreateOrConnectWithoutCreatedByInput | weight_goalsCreateOrConnectWithoutCreatedByInput[]
    upsert?: weight_goalsUpsertWithWhereUniqueWithoutCreatedByInput | weight_goalsUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: weight_goalsCreateManyCreatedByInputEnvelope
    set?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    disconnect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    delete?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    connect?: weight_goalsWhereUniqueInput | weight_goalsWhereUniqueInput[]
    update?: weight_goalsUpdateWithWhereUniqueWithoutCreatedByInput | weight_goalsUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: weight_goalsUpdateManyWithWhereWithoutCreatedByInput | weight_goalsUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: weight_goalsScalarWhereInput | weight_goalsScalarWhereInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type schedulesCreatetimesInput = {
    set: string[]
  }

  export type catsCreateNestedOneWithoutSchedulesInput = {
    create?: XOR<catsCreateWithoutSchedulesInput, catsUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: catsCreateOrConnectWithoutSchedulesInput
    connect?: catsWhereUniqueInput
  }

  export type schedulesUpdatetimesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type catsUpdateOneRequiredWithoutSchedulesNestedInput = {
    create?: XOR<catsCreateWithoutSchedulesInput, catsUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: catsCreateOrConnectWithoutSchedulesInput
    upsert?: catsUpsertWithoutSchedulesInput
    connect?: catsWhereUniqueInput
    update?: XOR<XOR<catsUpdateToOneWithWhereWithoutSchedulesInput, catsUpdateWithoutSchedulesInput>, catsUncheckedUpdateWithoutSchedulesInput>
  }

  export type catsCreateNestedOneWithoutFeeding_logsInput = {
    create?: XOR<catsCreateWithoutFeeding_logsInput, catsUncheckedCreateWithoutFeeding_logsInput>
    connectOrCreate?: catsCreateOrConnectWithoutFeeding_logsInput
    connect?: catsWhereUniqueInput
  }

  export type profilesCreateNestedOneWithoutFeeding_logs_fedInput = {
    create?: XOR<profilesCreateWithoutFeeding_logs_fedInput, profilesUncheckedCreateWithoutFeeding_logs_fedInput>
    connectOrCreate?: profilesCreateOrConnectWithoutFeeding_logs_fedInput
    connect?: profilesWhereUniqueInput
  }

  export type householdsCreateNestedOneWithoutFeeding_logsInput = {
    create?: XOR<householdsCreateWithoutFeeding_logsInput, householdsUncheckedCreateWithoutFeeding_logsInput>
    connectOrCreate?: householdsCreateOrConnectWithoutFeeding_logsInput
    connect?: householdsWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type catsUpdateOneRequiredWithoutFeeding_logsNestedInput = {
    create?: XOR<catsCreateWithoutFeeding_logsInput, catsUncheckedCreateWithoutFeeding_logsInput>
    connectOrCreate?: catsCreateOrConnectWithoutFeeding_logsInput
    upsert?: catsUpsertWithoutFeeding_logsInput
    connect?: catsWhereUniqueInput
    update?: XOR<XOR<catsUpdateToOneWithWhereWithoutFeeding_logsInput, catsUpdateWithoutFeeding_logsInput>, catsUncheckedUpdateWithoutFeeding_logsInput>
  }

  export type profilesUpdateOneWithoutFeeding_logs_fedNestedInput = {
    create?: XOR<profilesCreateWithoutFeeding_logs_fedInput, profilesUncheckedCreateWithoutFeeding_logs_fedInput>
    connectOrCreate?: profilesCreateOrConnectWithoutFeeding_logs_fedInput
    upsert?: profilesUpsertWithoutFeeding_logs_fedInput
    disconnect?: profilesWhereInput | boolean
    delete?: profilesWhereInput | boolean
    connect?: profilesWhereUniqueInput
    update?: XOR<XOR<profilesUpdateToOneWithWhereWithoutFeeding_logs_fedInput, profilesUpdateWithoutFeeding_logs_fedInput>, profilesUncheckedUpdateWithoutFeeding_logs_fedInput>
  }

  export type householdsUpdateOneRequiredWithoutFeeding_logsNestedInput = {
    create?: XOR<householdsCreateWithoutFeeding_logsInput, householdsUncheckedCreateWithoutFeeding_logsInput>
    connectOrCreate?: householdsCreateOrConnectWithoutFeeding_logsInput
    upsert?: householdsUpsertWithoutFeeding_logsInput
    connect?: householdsWhereUniqueInput
    update?: XOR<XOR<householdsUpdateToOneWithWhereWithoutFeeding_logsInput, householdsUpdateWithoutFeeding_logsInput>, householdsUncheckedUpdateWithoutFeeding_logsInput>
  }

  export type catsCreateNestedOneWithoutWeight_logsInput = {
    create?: XOR<catsCreateWithoutWeight_logsInput, catsUncheckedCreateWithoutWeight_logsInput>
    connectOrCreate?: catsCreateOrConnectWithoutWeight_logsInput
    connect?: catsWhereUniqueInput
  }

  export type profilesCreateNestedOneWithoutWeight_logs_measuredInput = {
    create?: XOR<profilesCreateWithoutWeight_logs_measuredInput, profilesUncheckedCreateWithoutWeight_logs_measuredInput>
    connectOrCreate?: profilesCreateOrConnectWithoutWeight_logs_measuredInput
    connect?: profilesWhereUniqueInput
  }

  export type catsUpdateOneRequiredWithoutWeight_logsNestedInput = {
    create?: XOR<catsCreateWithoutWeight_logsInput, catsUncheckedCreateWithoutWeight_logsInput>
    connectOrCreate?: catsCreateOrConnectWithoutWeight_logsInput
    upsert?: catsUpsertWithoutWeight_logsInput
    connect?: catsWhereUniqueInput
    update?: XOR<XOR<catsUpdateToOneWithWhereWithoutWeight_logsInput, catsUpdateWithoutWeight_logsInput>, catsUncheckedUpdateWithoutWeight_logsInput>
  }

  export type profilesUpdateOneWithoutWeight_logs_measuredNestedInput = {
    create?: XOR<profilesCreateWithoutWeight_logs_measuredInput, profilesUncheckedCreateWithoutWeight_logs_measuredInput>
    connectOrCreate?: profilesCreateOrConnectWithoutWeight_logs_measuredInput
    upsert?: profilesUpsertWithoutWeight_logs_measuredInput
    disconnect?: profilesWhereInput | boolean
    delete?: profilesWhereInput | boolean
    connect?: profilesWhereUniqueInput
    update?: XOR<XOR<profilesUpdateToOneWithWhereWithoutWeight_logs_measuredInput, profilesUpdateWithoutWeight_logs_measuredInput>, profilesUncheckedUpdateWithoutWeight_logs_measuredInput>
  }

  export type weight_goal_milestonesCreateNestedManyWithoutGoalInput = {
    create?: XOR<weight_goal_milestonesCreateWithoutGoalInput, weight_goal_milestonesUncheckedCreateWithoutGoalInput> | weight_goal_milestonesCreateWithoutGoalInput[] | weight_goal_milestonesUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: weight_goal_milestonesCreateOrConnectWithoutGoalInput | weight_goal_milestonesCreateOrConnectWithoutGoalInput[]
    createMany?: weight_goal_milestonesCreateManyGoalInputEnvelope
    connect?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
  }

  export type catsCreateNestedOneWithoutWeight_goalsInput = {
    create?: XOR<catsCreateWithoutWeight_goalsInput, catsUncheckedCreateWithoutWeight_goalsInput>
    connectOrCreate?: catsCreateOrConnectWithoutWeight_goalsInput
    connect?: catsWhereUniqueInput
  }

  export type profilesCreateNestedOneWithoutCreated_weight_goalsInput = {
    create?: XOR<profilesCreateWithoutCreated_weight_goalsInput, profilesUncheckedCreateWithoutCreated_weight_goalsInput>
    connectOrCreate?: profilesCreateOrConnectWithoutCreated_weight_goalsInput
    connect?: profilesWhereUniqueInput
  }

  export type weight_goal_milestonesUncheckedCreateNestedManyWithoutGoalInput = {
    create?: XOR<weight_goal_milestonesCreateWithoutGoalInput, weight_goal_milestonesUncheckedCreateWithoutGoalInput> | weight_goal_milestonesCreateWithoutGoalInput[] | weight_goal_milestonesUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: weight_goal_milestonesCreateOrConnectWithoutGoalInput | weight_goal_milestonesCreateOrConnectWithoutGoalInput[]
    createMany?: weight_goal_milestonesCreateManyGoalInputEnvelope
    connect?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
  }

  export type weight_goal_milestonesUpdateManyWithoutGoalNestedInput = {
    create?: XOR<weight_goal_milestonesCreateWithoutGoalInput, weight_goal_milestonesUncheckedCreateWithoutGoalInput> | weight_goal_milestonesCreateWithoutGoalInput[] | weight_goal_milestonesUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: weight_goal_milestonesCreateOrConnectWithoutGoalInput | weight_goal_milestonesCreateOrConnectWithoutGoalInput[]
    upsert?: weight_goal_milestonesUpsertWithWhereUniqueWithoutGoalInput | weight_goal_milestonesUpsertWithWhereUniqueWithoutGoalInput[]
    createMany?: weight_goal_milestonesCreateManyGoalInputEnvelope
    set?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    disconnect?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    delete?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    connect?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    update?: weight_goal_milestonesUpdateWithWhereUniqueWithoutGoalInput | weight_goal_milestonesUpdateWithWhereUniqueWithoutGoalInput[]
    updateMany?: weight_goal_milestonesUpdateManyWithWhereWithoutGoalInput | weight_goal_milestonesUpdateManyWithWhereWithoutGoalInput[]
    deleteMany?: weight_goal_milestonesScalarWhereInput | weight_goal_milestonesScalarWhereInput[]
  }

  export type catsUpdateOneRequiredWithoutWeight_goalsNestedInput = {
    create?: XOR<catsCreateWithoutWeight_goalsInput, catsUncheckedCreateWithoutWeight_goalsInput>
    connectOrCreate?: catsCreateOrConnectWithoutWeight_goalsInput
    upsert?: catsUpsertWithoutWeight_goalsInput
    connect?: catsWhereUniqueInput
    update?: XOR<XOR<catsUpdateToOneWithWhereWithoutWeight_goalsInput, catsUpdateWithoutWeight_goalsInput>, catsUncheckedUpdateWithoutWeight_goalsInput>
  }

  export type profilesUpdateOneRequiredWithoutCreated_weight_goalsNestedInput = {
    create?: XOR<profilesCreateWithoutCreated_weight_goalsInput, profilesUncheckedCreateWithoutCreated_weight_goalsInput>
    connectOrCreate?: profilesCreateOrConnectWithoutCreated_weight_goalsInput
    upsert?: profilesUpsertWithoutCreated_weight_goalsInput
    connect?: profilesWhereUniqueInput
    update?: XOR<XOR<profilesUpdateToOneWithWhereWithoutCreated_weight_goalsInput, profilesUpdateWithoutCreated_weight_goalsInput>, profilesUncheckedUpdateWithoutCreated_weight_goalsInput>
  }

  export type weight_goal_milestonesUncheckedUpdateManyWithoutGoalNestedInput = {
    create?: XOR<weight_goal_milestonesCreateWithoutGoalInput, weight_goal_milestonesUncheckedCreateWithoutGoalInput> | weight_goal_milestonesCreateWithoutGoalInput[] | weight_goal_milestonesUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: weight_goal_milestonesCreateOrConnectWithoutGoalInput | weight_goal_milestonesCreateOrConnectWithoutGoalInput[]
    upsert?: weight_goal_milestonesUpsertWithWhereUniqueWithoutGoalInput | weight_goal_milestonesUpsertWithWhereUniqueWithoutGoalInput[]
    createMany?: weight_goal_milestonesCreateManyGoalInputEnvelope
    set?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    disconnect?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    delete?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    connect?: weight_goal_milestonesWhereUniqueInput | weight_goal_milestonesWhereUniqueInput[]
    update?: weight_goal_milestonesUpdateWithWhereUniqueWithoutGoalInput | weight_goal_milestonesUpdateWithWhereUniqueWithoutGoalInput[]
    updateMany?: weight_goal_milestonesUpdateManyWithWhereWithoutGoalInput | weight_goal_milestonesUpdateManyWithWhereWithoutGoalInput[]
    deleteMany?: weight_goal_milestonesScalarWhereInput | weight_goal_milestonesScalarWhereInput[]
  }

  export type weight_goalsCreateNestedOneWithoutMilestonesInput = {
    create?: XOR<weight_goalsCreateWithoutMilestonesInput, weight_goalsUncheckedCreateWithoutMilestonesInput>
    connectOrCreate?: weight_goalsCreateOrConnectWithoutMilestonesInput
    connect?: weight_goalsWhereUniqueInput
  }

  export type weight_goalsUpdateOneRequiredWithoutMilestonesNestedInput = {
    create?: XOR<weight_goalsCreateWithoutMilestonesInput, weight_goalsUncheckedCreateWithoutMilestonesInput>
    connectOrCreate?: weight_goalsCreateOrConnectWithoutMilestonesInput
    upsert?: weight_goalsUpsertWithoutMilestonesInput
    connect?: weight_goalsWhereUniqueInput
    update?: XOR<XOR<weight_goalsUpdateToOneWithWhereWithoutMilestonesInput, weight_goalsUpdateWithoutMilestonesInput>, weight_goalsUncheckedUpdateWithoutMilestonesInput>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type householdsCreateWithoutCatsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    feeding_logs?: feeding_logsCreateNestedManyWithoutHouseholdInput
    household_members?: household_membersCreateNestedManyWithoutHouseholdInput
  }

  export type householdsUncheckedCreateWithoutCatsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutHouseholdInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutHouseholdInput
  }

  export type householdsCreateOrConnectWithoutCatsInput = {
    where: householdsWhereUniqueInput
    create: XOR<householdsCreateWithoutCatsInput, householdsUncheckedCreateWithoutCatsInput>
  }

  export type profilesCreateWithoutOwned_catsInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    feeding_logs_fed?: feeding_logsCreateNestedManyWithoutFeederInput
    household_members?: household_membersCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsCreateNestedManyWithoutCreatedByInput
  }

  export type profilesUncheckedCreateWithoutOwned_catsInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    feeding_logs_fed?: feeding_logsUncheckedCreateNestedManyWithoutFeederInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsUncheckedCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type profilesCreateOrConnectWithoutOwned_catsInput = {
    where: profilesWhereUniqueInput
    create: XOR<profilesCreateWithoutOwned_catsInput, profilesUncheckedCreateWithoutOwned_catsInput>
  }

  export type feeding_logsCreateWithoutCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_at: Date | string
    feeder?: profilesCreateNestedOneWithoutFeeding_logs_fedInput
    household: householdsCreateNestedOneWithoutFeeding_logsInput
  }

  export type feeding_logsUncheckedCreateWithoutCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    household_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_by?: string | null
    fed_at: Date | string
  }

  export type feeding_logsCreateOrConnectWithoutCatInput = {
    where: feeding_logsWhereUniqueInput
    create: XOR<feeding_logsCreateWithoutCatInput, feeding_logsUncheckedCreateWithoutCatInput>
  }

  export type feeding_logsCreateManyCatInputEnvelope = {
    data: feeding_logsCreateManyCatInput | feeding_logsCreateManyCatInput[]
    skipDuplicates?: boolean
  }

  export type schedulesCreateWithoutCatInput = {
    id?: string
    type: string
    interval?: number | null
    times?: schedulesCreatetimesInput | string[]
    enabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type schedulesUncheckedCreateWithoutCatInput = {
    id?: string
    type: string
    interval?: number | null
    times?: schedulesCreatetimesInput | string[]
    enabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type schedulesCreateOrConnectWithoutCatInput = {
    where: schedulesWhereUniqueInput
    create: XOR<schedulesCreateWithoutCatInput, schedulesUncheckedCreateWithoutCatInput>
  }

  export type schedulesCreateManyCatInputEnvelope = {
    data: schedulesCreateManyCatInput | schedulesCreateManyCatInput[]
    skipDuplicates?: boolean
  }

  export type cat_weight_logsCreateWithoutCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
    measuredBy?: profilesCreateNestedOneWithoutWeight_logs_measuredInput
  }

  export type cat_weight_logsUncheckedCreateWithoutCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
    measured_by?: string | null
  }

  export type cat_weight_logsCreateOrConnectWithoutCatInput = {
    where: cat_weight_logsWhereUniqueInput
    create: XOR<cat_weight_logsCreateWithoutCatInput, cat_weight_logsUncheckedCreateWithoutCatInput>
  }

  export type cat_weight_logsCreateManyCatInputEnvelope = {
    data: cat_weight_logsCreateManyCatInput | cat_weight_logsCreateManyCatInput[]
    skipDuplicates?: boolean
  }

  export type weight_goalsCreateWithoutCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    milestones?: weight_goal_milestonesCreateNestedManyWithoutGoalInput
    createdBy: profilesCreateNestedOneWithoutCreated_weight_goalsInput
  }

  export type weight_goalsUncheckedCreateWithoutCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    created_by: string
    milestones?: weight_goal_milestonesUncheckedCreateNestedManyWithoutGoalInput
  }

  export type weight_goalsCreateOrConnectWithoutCatInput = {
    where: weight_goalsWhereUniqueInput
    create: XOR<weight_goalsCreateWithoutCatInput, weight_goalsUncheckedCreateWithoutCatInput>
  }

  export type weight_goalsCreateManyCatInputEnvelope = {
    data: weight_goalsCreateManyCatInput | weight_goalsCreateManyCatInput[]
    skipDuplicates?: boolean
  }

  export type householdsUpsertWithoutCatsInput = {
    update: XOR<householdsUpdateWithoutCatsInput, householdsUncheckedUpdateWithoutCatsInput>
    create: XOR<householdsCreateWithoutCatsInput, householdsUncheckedCreateWithoutCatsInput>
    where?: householdsWhereInput
  }

  export type householdsUpdateToOneWithWhereWithoutCatsInput = {
    where?: householdsWhereInput
    data: XOR<householdsUpdateWithoutCatsInput, householdsUncheckedUpdateWithoutCatsInput>
  }

  export type householdsUpdateWithoutCatsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_logs?: feeding_logsUpdateManyWithoutHouseholdNestedInput
    household_members?: household_membersUpdateManyWithoutHouseholdNestedInput
  }

  export type householdsUncheckedUpdateWithoutCatsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutHouseholdNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutHouseholdNestedInput
  }

  export type profilesUpsertWithoutOwned_catsInput = {
    update: XOR<profilesUpdateWithoutOwned_catsInput, profilesUncheckedUpdateWithoutOwned_catsInput>
    create: XOR<profilesCreateWithoutOwned_catsInput, profilesUncheckedCreateWithoutOwned_catsInput>
    where?: profilesWhereInput
  }

  export type profilesUpdateToOneWithWhereWithoutOwned_catsInput = {
    where?: profilesWhereInput
    data: XOR<profilesUpdateWithoutOwned_catsInput, profilesUncheckedUpdateWithoutOwned_catsInput>
  }

  export type profilesUpdateWithoutOwned_catsInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_logs_fed?: feeding_logsUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUpdateManyWithoutCreatedByNestedInput
  }

  export type profilesUncheckedUpdateWithoutOwned_catsInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_logs_fed?: feeding_logsUncheckedUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUncheckedUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type feeding_logsUpsertWithWhereUniqueWithoutCatInput = {
    where: feeding_logsWhereUniqueInput
    update: XOR<feeding_logsUpdateWithoutCatInput, feeding_logsUncheckedUpdateWithoutCatInput>
    create: XOR<feeding_logsCreateWithoutCatInput, feeding_logsUncheckedCreateWithoutCatInput>
  }

  export type feeding_logsUpdateWithWhereUniqueWithoutCatInput = {
    where: feeding_logsWhereUniqueInput
    data: XOR<feeding_logsUpdateWithoutCatInput, feeding_logsUncheckedUpdateWithoutCatInput>
  }

  export type feeding_logsUpdateManyWithWhereWithoutCatInput = {
    where: feeding_logsScalarWhereInput
    data: XOR<feeding_logsUpdateManyMutationInput, feeding_logsUncheckedUpdateManyWithoutCatInput>
  }

  export type feeding_logsScalarWhereInput = {
    AND?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
    OR?: feeding_logsScalarWhereInput[]
    NOT?: feeding_logsScalarWhereInput | feeding_logsScalarWhereInput[]
    id?: UuidFilter<"feeding_logs"> | string
    created_at?: DateTimeFilter<"feeding_logs"> | Date | string
    updated_at?: DateTimeFilter<"feeding_logs"> | Date | string
    cat_id?: UuidFilter<"feeding_logs"> | string
    household_id?: UuidFilter<"feeding_logs"> | string
    meal_type?: StringFilter<"feeding_logs"> | string
    amount?: DecimalFilter<"feeding_logs"> | Decimal | DecimalJsLike | number | string
    unit?: StringFilter<"feeding_logs"> | string
    notes?: StringNullableFilter<"feeding_logs"> | string | null
    fed_by?: UuidNullableFilter<"feeding_logs"> | string | null
    fed_at?: DateTimeFilter<"feeding_logs"> | Date | string
  }

  export type schedulesUpsertWithWhereUniqueWithoutCatInput = {
    where: schedulesWhereUniqueInput
    update: XOR<schedulesUpdateWithoutCatInput, schedulesUncheckedUpdateWithoutCatInput>
    create: XOR<schedulesCreateWithoutCatInput, schedulesUncheckedCreateWithoutCatInput>
  }

  export type schedulesUpdateWithWhereUniqueWithoutCatInput = {
    where: schedulesWhereUniqueInput
    data: XOR<schedulesUpdateWithoutCatInput, schedulesUncheckedUpdateWithoutCatInput>
  }

  export type schedulesUpdateManyWithWhereWithoutCatInput = {
    where: schedulesScalarWhereInput
    data: XOR<schedulesUpdateManyMutationInput, schedulesUncheckedUpdateManyWithoutCatInput>
  }

  export type schedulesScalarWhereInput = {
    AND?: schedulesScalarWhereInput | schedulesScalarWhereInput[]
    OR?: schedulesScalarWhereInput[]
    NOT?: schedulesScalarWhereInput | schedulesScalarWhereInput[]
    id?: UuidFilter<"schedules"> | string
    cat_id?: UuidFilter<"schedules"> | string
    type?: StringFilter<"schedules"> | string
    interval?: IntNullableFilter<"schedules"> | number | null
    times?: StringNullableListFilter<"schedules">
    enabled?: BoolFilter<"schedules"> | boolean
    created_at?: DateTimeFilter<"schedules"> | Date | string
    updated_at?: DateTimeFilter<"schedules"> | Date | string
  }

  export type cat_weight_logsUpsertWithWhereUniqueWithoutCatInput = {
    where: cat_weight_logsWhereUniqueInput
    update: XOR<cat_weight_logsUpdateWithoutCatInput, cat_weight_logsUncheckedUpdateWithoutCatInput>
    create: XOR<cat_weight_logsCreateWithoutCatInput, cat_weight_logsUncheckedCreateWithoutCatInput>
  }

  export type cat_weight_logsUpdateWithWhereUniqueWithoutCatInput = {
    where: cat_weight_logsWhereUniqueInput
    data: XOR<cat_weight_logsUpdateWithoutCatInput, cat_weight_logsUncheckedUpdateWithoutCatInput>
  }

  export type cat_weight_logsUpdateManyWithWhereWithoutCatInput = {
    where: cat_weight_logsScalarWhereInput
    data: XOR<cat_weight_logsUpdateManyMutationInput, cat_weight_logsUncheckedUpdateManyWithoutCatInput>
  }

  export type cat_weight_logsScalarWhereInput = {
    AND?: cat_weight_logsScalarWhereInput | cat_weight_logsScalarWhereInput[]
    OR?: cat_weight_logsScalarWhereInput[]
    NOT?: cat_weight_logsScalarWhereInput | cat_weight_logsScalarWhereInput[]
    id?: UuidFilter<"cat_weight_logs"> | string
    created_at?: DateTimeFilter<"cat_weight_logs"> | Date | string
    updated_at?: DateTimeFilter<"cat_weight_logs"> | Date | string
    weight?: DecimalFilter<"cat_weight_logs"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"cat_weight_logs"> | Date | string
    cat_id?: UuidFilter<"cat_weight_logs"> | string
    notes?: StringNullableFilter<"cat_weight_logs"> | string | null
    measured_by?: UuidNullableFilter<"cat_weight_logs"> | string | null
  }

  export type weight_goalsUpsertWithWhereUniqueWithoutCatInput = {
    where: weight_goalsWhereUniqueInput
    update: XOR<weight_goalsUpdateWithoutCatInput, weight_goalsUncheckedUpdateWithoutCatInput>
    create: XOR<weight_goalsCreateWithoutCatInput, weight_goalsUncheckedCreateWithoutCatInput>
  }

  export type weight_goalsUpdateWithWhereUniqueWithoutCatInput = {
    where: weight_goalsWhereUniqueInput
    data: XOR<weight_goalsUpdateWithoutCatInput, weight_goalsUncheckedUpdateWithoutCatInput>
  }

  export type weight_goalsUpdateManyWithWhereWithoutCatInput = {
    where: weight_goalsScalarWhereInput
    data: XOR<weight_goalsUpdateManyMutationInput, weight_goalsUncheckedUpdateManyWithoutCatInput>
  }

  export type weight_goalsScalarWhereInput = {
    AND?: weight_goalsScalarWhereInput | weight_goalsScalarWhereInput[]
    OR?: weight_goalsScalarWhereInput[]
    NOT?: weight_goalsScalarWhereInput | weight_goalsScalarWhereInput[]
    id?: UuidFilter<"weight_goals"> | string
    created_at?: DateTimeFilter<"weight_goals"> | Date | string
    updated_at?: DateTimeFilter<"weight_goals"> | Date | string
    cat_id?: UuidFilter<"weight_goals"> | string
    goal_name?: StringFilter<"weight_goals"> | string
    target_weight?: DecimalFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string
    target_date?: DateTimeNullableFilter<"weight_goals"> | Date | string | null
    start_weight?: DecimalNullableFilter<"weight_goals"> | Decimal | DecimalJsLike | number | string | null
    unit?: StringFilter<"weight_goals"> | string
    status?: StringFilter<"weight_goals"> | string
    notes?: StringNullableFilter<"weight_goals"> | string | null
    created_by?: UuidFilter<"weight_goals"> | string
  }

  export type householdsCreateWithoutHousehold_membersInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    cats?: catsCreateNestedManyWithoutHouseholdInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutHouseholdInput
  }

  export type householdsUncheckedCreateWithoutHousehold_membersInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    cats?: catsUncheckedCreateNestedManyWithoutHouseholdInput
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutHouseholdInput
  }

  export type householdsCreateOrConnectWithoutHousehold_membersInput = {
    where: householdsWhereUniqueInput
    create: XOR<householdsCreateWithoutHousehold_membersInput, householdsUncheckedCreateWithoutHousehold_membersInput>
  }

  export type profilesCreateWithoutHousehold_membersInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsCreateNestedManyWithoutFeederInput
    weight_logs_measured?: cat_weight_logsCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsCreateNestedManyWithoutCreatedByInput
  }

  export type profilesUncheckedCreateWithoutHousehold_membersInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsUncheckedCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsUncheckedCreateNestedManyWithoutFeederInput
    weight_logs_measured?: cat_weight_logsUncheckedCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type profilesCreateOrConnectWithoutHousehold_membersInput = {
    where: profilesWhereUniqueInput
    create: XOR<profilesCreateWithoutHousehold_membersInput, profilesUncheckedCreateWithoutHousehold_membersInput>
  }

  export type householdsUpsertWithoutHousehold_membersInput = {
    update: XOR<householdsUpdateWithoutHousehold_membersInput, householdsUncheckedUpdateWithoutHousehold_membersInput>
    create: XOR<householdsCreateWithoutHousehold_membersInput, householdsUncheckedCreateWithoutHousehold_membersInput>
    where?: householdsWhereInput
  }

  export type householdsUpdateToOneWithWhereWithoutHousehold_membersInput = {
    where?: householdsWhereInput
    data: XOR<householdsUpdateWithoutHousehold_membersInput, householdsUncheckedUpdateWithoutHousehold_membersInput>
  }

  export type householdsUpdateWithoutHousehold_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    cats?: catsUpdateManyWithoutHouseholdNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutHouseholdNestedInput
  }

  export type householdsUncheckedUpdateWithoutHousehold_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    cats?: catsUncheckedUpdateManyWithoutHouseholdNestedInput
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutHouseholdNestedInput
  }

  export type profilesUpsertWithoutHousehold_membersInput = {
    update: XOR<profilesUpdateWithoutHousehold_membersInput, profilesUncheckedUpdateWithoutHousehold_membersInput>
    create: XOR<profilesCreateWithoutHousehold_membersInput, profilesUncheckedCreateWithoutHousehold_membersInput>
    where?: profilesWhereInput
  }

  export type profilesUpdateToOneWithWhereWithoutHousehold_membersInput = {
    where?: profilesWhereInput
    data: XOR<profilesUpdateWithoutHousehold_membersInput, profilesUncheckedUpdateWithoutHousehold_membersInput>
  }

  export type profilesUpdateWithoutHousehold_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUpdateManyWithoutFeederNestedInput
    weight_logs_measured?: cat_weight_logsUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUpdateManyWithoutCreatedByNestedInput
  }

  export type profilesUncheckedUpdateWithoutHousehold_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUncheckedUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUncheckedUpdateManyWithoutFeederNestedInput
    weight_logs_measured?: cat_weight_logsUncheckedUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type catsCreateWithoutHouseholdInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    owner: profilesCreateNestedOneWithoutOwned_catsInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutCatInput
    schedules?: schedulesCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateWithoutHouseholdInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutCatInput
    schedules?: schedulesUncheckedCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsUncheckedCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsCreateOrConnectWithoutHouseholdInput = {
    where: catsWhereUniqueInput
    create: XOR<catsCreateWithoutHouseholdInput, catsUncheckedCreateWithoutHouseholdInput>
  }

  export type catsCreateManyHouseholdInputEnvelope = {
    data: catsCreateManyHouseholdInput | catsCreateManyHouseholdInput[]
    skipDuplicates?: boolean
  }

  export type feeding_logsCreateWithoutHouseholdInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_at: Date | string
    cat: catsCreateNestedOneWithoutFeeding_logsInput
    feeder?: profilesCreateNestedOneWithoutFeeding_logs_fedInput
  }

  export type feeding_logsUncheckedCreateWithoutHouseholdInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_by?: string | null
    fed_at: Date | string
  }

  export type feeding_logsCreateOrConnectWithoutHouseholdInput = {
    where: feeding_logsWhereUniqueInput
    create: XOR<feeding_logsCreateWithoutHouseholdInput, feeding_logsUncheckedCreateWithoutHouseholdInput>
  }

  export type feeding_logsCreateManyHouseholdInputEnvelope = {
    data: feeding_logsCreateManyHouseholdInput | feeding_logsCreateManyHouseholdInput[]
    skipDuplicates?: boolean
  }

  export type household_membersCreateWithoutHouseholdInput = {
    id?: string
    role: string
    created_at?: Date | string
    user: profilesCreateNestedOneWithoutHousehold_membersInput
  }

  export type household_membersUncheckedCreateWithoutHouseholdInput = {
    id?: string
    user_id: string
    role: string
    created_at?: Date | string
  }

  export type household_membersCreateOrConnectWithoutHouseholdInput = {
    where: household_membersWhereUniqueInput
    create: XOR<household_membersCreateWithoutHouseholdInput, household_membersUncheckedCreateWithoutHouseholdInput>
  }

  export type household_membersCreateManyHouseholdInputEnvelope = {
    data: household_membersCreateManyHouseholdInput | household_membersCreateManyHouseholdInput[]
    skipDuplicates?: boolean
  }

  export type catsUpsertWithWhereUniqueWithoutHouseholdInput = {
    where: catsWhereUniqueInput
    update: XOR<catsUpdateWithoutHouseholdInput, catsUncheckedUpdateWithoutHouseholdInput>
    create: XOR<catsCreateWithoutHouseholdInput, catsUncheckedCreateWithoutHouseholdInput>
  }

  export type catsUpdateWithWhereUniqueWithoutHouseholdInput = {
    where: catsWhereUniqueInput
    data: XOR<catsUpdateWithoutHouseholdInput, catsUncheckedUpdateWithoutHouseholdInput>
  }

  export type catsUpdateManyWithWhereWithoutHouseholdInput = {
    where: catsScalarWhereInput
    data: XOR<catsUpdateManyMutationInput, catsUncheckedUpdateManyWithoutHouseholdInput>
  }

  export type catsScalarWhereInput = {
    AND?: catsScalarWhereInput | catsScalarWhereInput[]
    OR?: catsScalarWhereInput[]
    NOT?: catsScalarWhereInput | catsScalarWhereInput[]
    id?: UuidFilter<"cats"> | string
    created_at?: DateTimeFilter<"cats"> | Date | string
    updated_at?: DateTimeFilter<"cats"> | Date | string
    name?: StringFilter<"cats"> | string
    birth_date?: DateTimeNullableFilter<"cats"> | Date | string | null
    weight?: DecimalNullableFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    household_id?: UuidFilter<"cats"> | string
    owner_id?: UuidFilter<"cats"> | string
    portion_size?: DecimalNullableFilter<"cats"> | Decimal | DecimalJsLike | number | string | null
    portion_unit?: StringNullableFilter<"cats"> | string | null
    photo_url?: StringNullableFilter<"cats"> | string | null
    restrictions?: StringNullableFilter<"cats"> | string | null
    notes?: StringNullableFilter<"cats"> | string | null
    feeding_interval?: IntNullableFilter<"cats"> | number | null
  }

  export type feeding_logsUpsertWithWhereUniqueWithoutHouseholdInput = {
    where: feeding_logsWhereUniqueInput
    update: XOR<feeding_logsUpdateWithoutHouseholdInput, feeding_logsUncheckedUpdateWithoutHouseholdInput>
    create: XOR<feeding_logsCreateWithoutHouseholdInput, feeding_logsUncheckedCreateWithoutHouseholdInput>
  }

  export type feeding_logsUpdateWithWhereUniqueWithoutHouseholdInput = {
    where: feeding_logsWhereUniqueInput
    data: XOR<feeding_logsUpdateWithoutHouseholdInput, feeding_logsUncheckedUpdateWithoutHouseholdInput>
  }

  export type feeding_logsUpdateManyWithWhereWithoutHouseholdInput = {
    where: feeding_logsScalarWhereInput
    data: XOR<feeding_logsUpdateManyMutationInput, feeding_logsUncheckedUpdateManyWithoutHouseholdInput>
  }

  export type household_membersUpsertWithWhereUniqueWithoutHouseholdInput = {
    where: household_membersWhereUniqueInput
    update: XOR<household_membersUpdateWithoutHouseholdInput, household_membersUncheckedUpdateWithoutHouseholdInput>
    create: XOR<household_membersCreateWithoutHouseholdInput, household_membersUncheckedCreateWithoutHouseholdInput>
  }

  export type household_membersUpdateWithWhereUniqueWithoutHouseholdInput = {
    where: household_membersWhereUniqueInput
    data: XOR<household_membersUpdateWithoutHouseholdInput, household_membersUncheckedUpdateWithoutHouseholdInput>
  }

  export type household_membersUpdateManyWithWhereWithoutHouseholdInput = {
    where: household_membersScalarWhereInput
    data: XOR<household_membersUpdateManyMutationInput, household_membersUncheckedUpdateManyWithoutHouseholdInput>
  }

  export type household_membersScalarWhereInput = {
    AND?: household_membersScalarWhereInput | household_membersScalarWhereInput[]
    OR?: household_membersScalarWhereInput[]
    NOT?: household_membersScalarWhereInput | household_membersScalarWhereInput[]
    id?: UuidFilter<"household_members"> | string
    household_id?: UuidFilter<"household_members"> | string
    user_id?: UuidFilter<"household_members"> | string
    role?: StringFilter<"household_members"> | string
    created_at?: DateTimeFilter<"household_members"> | Date | string
  }

  export type catsCreateWithoutOwnerInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    household: householdsCreateNestedOneWithoutCatsInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutCatInput
    schedules?: schedulesCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateWithoutOwnerInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutCatInput
    schedules?: schedulesUncheckedCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsUncheckedCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsCreateOrConnectWithoutOwnerInput = {
    where: catsWhereUniqueInput
    create: XOR<catsCreateWithoutOwnerInput, catsUncheckedCreateWithoutOwnerInput>
  }

  export type catsCreateManyOwnerInputEnvelope = {
    data: catsCreateManyOwnerInput | catsCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type feeding_logsCreateWithoutFeederInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_at: Date | string
    cat: catsCreateNestedOneWithoutFeeding_logsInput
    household: householdsCreateNestedOneWithoutFeeding_logsInput
  }

  export type feeding_logsUncheckedCreateWithoutFeederInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    household_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_at: Date | string
  }

  export type feeding_logsCreateOrConnectWithoutFeederInput = {
    where: feeding_logsWhereUniqueInput
    create: XOR<feeding_logsCreateWithoutFeederInput, feeding_logsUncheckedCreateWithoutFeederInput>
  }

  export type feeding_logsCreateManyFeederInputEnvelope = {
    data: feeding_logsCreateManyFeederInput | feeding_logsCreateManyFeederInput[]
    skipDuplicates?: boolean
  }

  export type household_membersCreateWithoutUserInput = {
    id?: string
    role: string
    created_at?: Date | string
    household: householdsCreateNestedOneWithoutHousehold_membersInput
  }

  export type household_membersUncheckedCreateWithoutUserInput = {
    id?: string
    household_id: string
    role: string
    created_at?: Date | string
  }

  export type household_membersCreateOrConnectWithoutUserInput = {
    where: household_membersWhereUniqueInput
    create: XOR<household_membersCreateWithoutUserInput, household_membersUncheckedCreateWithoutUserInput>
  }

  export type household_membersCreateManyUserInputEnvelope = {
    data: household_membersCreateManyUserInput | household_membersCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type cat_weight_logsCreateWithoutMeasuredByInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
    cat: catsCreateNestedOneWithoutWeight_logsInput
  }

  export type cat_weight_logsUncheckedCreateWithoutMeasuredByInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    cat_id: string
    notes?: string | null
  }

  export type cat_weight_logsCreateOrConnectWithoutMeasuredByInput = {
    where: cat_weight_logsWhereUniqueInput
    create: XOR<cat_weight_logsCreateWithoutMeasuredByInput, cat_weight_logsUncheckedCreateWithoutMeasuredByInput>
  }

  export type cat_weight_logsCreateManyMeasuredByInputEnvelope = {
    data: cat_weight_logsCreateManyMeasuredByInput | cat_weight_logsCreateManyMeasuredByInput[]
    skipDuplicates?: boolean
  }

  export type weight_goalsCreateWithoutCreatedByInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    milestones?: weight_goal_milestonesCreateNestedManyWithoutGoalInput
    cat: catsCreateNestedOneWithoutWeight_goalsInput
  }

  export type weight_goalsUncheckedCreateWithoutCreatedByInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    milestones?: weight_goal_milestonesUncheckedCreateNestedManyWithoutGoalInput
  }

  export type weight_goalsCreateOrConnectWithoutCreatedByInput = {
    where: weight_goalsWhereUniqueInput
    create: XOR<weight_goalsCreateWithoutCreatedByInput, weight_goalsUncheckedCreateWithoutCreatedByInput>
  }

  export type weight_goalsCreateManyCreatedByInputEnvelope = {
    data: weight_goalsCreateManyCreatedByInput | weight_goalsCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type catsUpsertWithWhereUniqueWithoutOwnerInput = {
    where: catsWhereUniqueInput
    update: XOR<catsUpdateWithoutOwnerInput, catsUncheckedUpdateWithoutOwnerInput>
    create: XOR<catsCreateWithoutOwnerInput, catsUncheckedCreateWithoutOwnerInput>
  }

  export type catsUpdateWithWhereUniqueWithoutOwnerInput = {
    where: catsWhereUniqueInput
    data: XOR<catsUpdateWithoutOwnerInput, catsUncheckedUpdateWithoutOwnerInput>
  }

  export type catsUpdateManyWithWhereWithoutOwnerInput = {
    where: catsScalarWhereInput
    data: XOR<catsUpdateManyMutationInput, catsUncheckedUpdateManyWithoutOwnerInput>
  }

  export type feeding_logsUpsertWithWhereUniqueWithoutFeederInput = {
    where: feeding_logsWhereUniqueInput
    update: XOR<feeding_logsUpdateWithoutFeederInput, feeding_logsUncheckedUpdateWithoutFeederInput>
    create: XOR<feeding_logsCreateWithoutFeederInput, feeding_logsUncheckedCreateWithoutFeederInput>
  }

  export type feeding_logsUpdateWithWhereUniqueWithoutFeederInput = {
    where: feeding_logsWhereUniqueInput
    data: XOR<feeding_logsUpdateWithoutFeederInput, feeding_logsUncheckedUpdateWithoutFeederInput>
  }

  export type feeding_logsUpdateManyWithWhereWithoutFeederInput = {
    where: feeding_logsScalarWhereInput
    data: XOR<feeding_logsUpdateManyMutationInput, feeding_logsUncheckedUpdateManyWithoutFeederInput>
  }

  export type household_membersUpsertWithWhereUniqueWithoutUserInput = {
    where: household_membersWhereUniqueInput
    update: XOR<household_membersUpdateWithoutUserInput, household_membersUncheckedUpdateWithoutUserInput>
    create: XOR<household_membersCreateWithoutUserInput, household_membersUncheckedCreateWithoutUserInput>
  }

  export type household_membersUpdateWithWhereUniqueWithoutUserInput = {
    where: household_membersWhereUniqueInput
    data: XOR<household_membersUpdateWithoutUserInput, household_membersUncheckedUpdateWithoutUserInput>
  }

  export type household_membersUpdateManyWithWhereWithoutUserInput = {
    where: household_membersScalarWhereInput
    data: XOR<household_membersUpdateManyMutationInput, household_membersUncheckedUpdateManyWithoutUserInput>
  }

  export type cat_weight_logsUpsertWithWhereUniqueWithoutMeasuredByInput = {
    where: cat_weight_logsWhereUniqueInput
    update: XOR<cat_weight_logsUpdateWithoutMeasuredByInput, cat_weight_logsUncheckedUpdateWithoutMeasuredByInput>
    create: XOR<cat_weight_logsCreateWithoutMeasuredByInput, cat_weight_logsUncheckedCreateWithoutMeasuredByInput>
  }

  export type cat_weight_logsUpdateWithWhereUniqueWithoutMeasuredByInput = {
    where: cat_weight_logsWhereUniqueInput
    data: XOR<cat_weight_logsUpdateWithoutMeasuredByInput, cat_weight_logsUncheckedUpdateWithoutMeasuredByInput>
  }

  export type cat_weight_logsUpdateManyWithWhereWithoutMeasuredByInput = {
    where: cat_weight_logsScalarWhereInput
    data: XOR<cat_weight_logsUpdateManyMutationInput, cat_weight_logsUncheckedUpdateManyWithoutMeasuredByInput>
  }

  export type weight_goalsUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: weight_goalsWhereUniqueInput
    update: XOR<weight_goalsUpdateWithoutCreatedByInput, weight_goalsUncheckedUpdateWithoutCreatedByInput>
    create: XOR<weight_goalsCreateWithoutCreatedByInput, weight_goalsUncheckedCreateWithoutCreatedByInput>
  }

  export type weight_goalsUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: weight_goalsWhereUniqueInput
    data: XOR<weight_goalsUpdateWithoutCreatedByInput, weight_goalsUncheckedUpdateWithoutCreatedByInput>
  }

  export type weight_goalsUpdateManyWithWhereWithoutCreatedByInput = {
    where: weight_goalsScalarWhereInput
    data: XOR<weight_goalsUpdateManyMutationInput, weight_goalsUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type catsCreateWithoutSchedulesInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    household: householdsCreateNestedOneWithoutCatsInput
    owner: profilesCreateNestedOneWithoutOwned_catsInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateWithoutSchedulesInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsUncheckedCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsCreateOrConnectWithoutSchedulesInput = {
    where: catsWhereUniqueInput
    create: XOR<catsCreateWithoutSchedulesInput, catsUncheckedCreateWithoutSchedulesInput>
  }

  export type catsUpsertWithoutSchedulesInput = {
    update: XOR<catsUpdateWithoutSchedulesInput, catsUncheckedUpdateWithoutSchedulesInput>
    create: XOR<catsCreateWithoutSchedulesInput, catsUncheckedCreateWithoutSchedulesInput>
    where?: catsWhereInput
  }

  export type catsUpdateToOneWithWhereWithoutSchedulesInput = {
    where?: catsWhereInput
    data: XOR<catsUpdateWithoutSchedulesInput, catsUncheckedUpdateWithoutSchedulesInput>
  }

  export type catsUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    household?: householdsUpdateOneRequiredWithoutCatsNestedInput
    owner?: profilesUpdateOneRequiredWithoutOwned_catsNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type catsCreateWithoutFeeding_logsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    household: householdsCreateNestedOneWithoutCatsInput
    owner: profilesCreateNestedOneWithoutOwned_catsInput
    schedules?: schedulesCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateWithoutFeeding_logsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    schedules?: schedulesUncheckedCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsUncheckedCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsCreateOrConnectWithoutFeeding_logsInput = {
    where: catsWhereUniqueInput
    create: XOR<catsCreateWithoutFeeding_logsInput, catsUncheckedCreateWithoutFeeding_logsInput>
  }

  export type profilesCreateWithoutFeeding_logs_fedInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsCreateNestedManyWithoutOwnerInput
    household_members?: household_membersCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsCreateNestedManyWithoutCreatedByInput
  }

  export type profilesUncheckedCreateWithoutFeeding_logs_fedInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsUncheckedCreateNestedManyWithoutOwnerInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsUncheckedCreateNestedManyWithoutMeasuredByInput
    created_weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type profilesCreateOrConnectWithoutFeeding_logs_fedInput = {
    where: profilesWhereUniqueInput
    create: XOR<profilesCreateWithoutFeeding_logs_fedInput, profilesUncheckedCreateWithoutFeeding_logs_fedInput>
  }

  export type householdsCreateWithoutFeeding_logsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    cats?: catsCreateNestedManyWithoutHouseholdInput
    household_members?: household_membersCreateNestedManyWithoutHouseholdInput
  }

  export type householdsUncheckedCreateWithoutFeeding_logsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    description?: string | null
    owner_id: string
    inviteCode?: string | null
    cats?: catsUncheckedCreateNestedManyWithoutHouseholdInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutHouseholdInput
  }

  export type householdsCreateOrConnectWithoutFeeding_logsInput = {
    where: householdsWhereUniqueInput
    create: XOR<householdsCreateWithoutFeeding_logsInput, householdsUncheckedCreateWithoutFeeding_logsInput>
  }

  export type catsUpsertWithoutFeeding_logsInput = {
    update: XOR<catsUpdateWithoutFeeding_logsInput, catsUncheckedUpdateWithoutFeeding_logsInput>
    create: XOR<catsCreateWithoutFeeding_logsInput, catsUncheckedCreateWithoutFeeding_logsInput>
    where?: catsWhereInput
  }

  export type catsUpdateToOneWithWhereWithoutFeeding_logsInput = {
    where?: catsWhereInput
    data: XOR<catsUpdateWithoutFeeding_logsInput, catsUncheckedUpdateWithoutFeeding_logsInput>
  }

  export type catsUpdateWithoutFeeding_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    household?: householdsUpdateOneRequiredWithoutCatsNestedInput
    owner?: profilesUpdateOneRequiredWithoutOwned_catsNestedInput
    schedules?: schedulesUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateWithoutFeeding_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    schedules?: schedulesUncheckedUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type profilesUpsertWithoutFeeding_logs_fedInput = {
    update: XOR<profilesUpdateWithoutFeeding_logs_fedInput, profilesUncheckedUpdateWithoutFeeding_logs_fedInput>
    create: XOR<profilesCreateWithoutFeeding_logs_fedInput, profilesUncheckedCreateWithoutFeeding_logs_fedInput>
    where?: profilesWhereInput
  }

  export type profilesUpdateToOneWithWhereWithoutFeeding_logs_fedInput = {
    where?: profilesWhereInput
    data: XOR<profilesUpdateWithoutFeeding_logs_fedInput, profilesUncheckedUpdateWithoutFeeding_logs_fedInput>
  }

  export type profilesUpdateWithoutFeeding_logs_fedInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUpdateManyWithoutOwnerNestedInput
    household_members?: household_membersUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUpdateManyWithoutCreatedByNestedInput
  }

  export type profilesUncheckedUpdateWithoutFeeding_logs_fedInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUncheckedUpdateManyWithoutOwnerNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUncheckedUpdateManyWithoutMeasuredByNestedInput
    created_weight_goals?: weight_goalsUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type householdsUpsertWithoutFeeding_logsInput = {
    update: XOR<householdsUpdateWithoutFeeding_logsInput, householdsUncheckedUpdateWithoutFeeding_logsInput>
    create: XOR<householdsCreateWithoutFeeding_logsInput, householdsUncheckedCreateWithoutFeeding_logsInput>
    where?: householdsWhereInput
  }

  export type householdsUpdateToOneWithWhereWithoutFeeding_logsInput = {
    where?: householdsWhereInput
    data: XOR<householdsUpdateWithoutFeeding_logsInput, householdsUncheckedUpdateWithoutFeeding_logsInput>
  }

  export type householdsUpdateWithoutFeeding_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    cats?: catsUpdateManyWithoutHouseholdNestedInput
    household_members?: household_membersUpdateManyWithoutHouseholdNestedInput
  }

  export type householdsUncheckedUpdateWithoutFeeding_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    cats?: catsUncheckedUpdateManyWithoutHouseholdNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutHouseholdNestedInput
  }

  export type catsCreateWithoutWeight_logsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    household: householdsCreateNestedOneWithoutCatsInput
    owner: profilesCreateNestedOneWithoutOwned_catsInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutCatInput
    schedules?: schedulesCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateWithoutWeight_logsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutCatInput
    schedules?: schedulesUncheckedCreateNestedManyWithoutCatInput
    weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsCreateOrConnectWithoutWeight_logsInput = {
    where: catsWhereUniqueInput
    create: XOR<catsCreateWithoutWeight_logsInput, catsUncheckedCreateWithoutWeight_logsInput>
  }

  export type profilesCreateWithoutWeight_logs_measuredInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsCreateNestedManyWithoutFeederInput
    household_members?: household_membersCreateNestedManyWithoutUserInput
    created_weight_goals?: weight_goalsCreateNestedManyWithoutCreatedByInput
  }

  export type profilesUncheckedCreateWithoutWeight_logs_measuredInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsUncheckedCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsUncheckedCreateNestedManyWithoutFeederInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutUserInput
    created_weight_goals?: weight_goalsUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type profilesCreateOrConnectWithoutWeight_logs_measuredInput = {
    where: profilesWhereUniqueInput
    create: XOR<profilesCreateWithoutWeight_logs_measuredInput, profilesUncheckedCreateWithoutWeight_logs_measuredInput>
  }

  export type catsUpsertWithoutWeight_logsInput = {
    update: XOR<catsUpdateWithoutWeight_logsInput, catsUncheckedUpdateWithoutWeight_logsInput>
    create: XOR<catsCreateWithoutWeight_logsInput, catsUncheckedCreateWithoutWeight_logsInput>
    where?: catsWhereInput
  }

  export type catsUpdateToOneWithWhereWithoutWeight_logsInput = {
    where?: catsWhereInput
    data: XOR<catsUpdateWithoutWeight_logsInput, catsUncheckedUpdateWithoutWeight_logsInput>
  }

  export type catsUpdateWithoutWeight_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    household?: householdsUpdateOneRequiredWithoutCatsNestedInput
    owner?: profilesUpdateOneRequiredWithoutOwned_catsNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutCatNestedInput
    schedules?: schedulesUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateWithoutWeight_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutCatNestedInput
    schedules?: schedulesUncheckedUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type profilesUpsertWithoutWeight_logs_measuredInput = {
    update: XOR<profilesUpdateWithoutWeight_logs_measuredInput, profilesUncheckedUpdateWithoutWeight_logs_measuredInput>
    create: XOR<profilesCreateWithoutWeight_logs_measuredInput, profilesUncheckedCreateWithoutWeight_logs_measuredInput>
    where?: profilesWhereInput
  }

  export type profilesUpdateToOneWithWhereWithoutWeight_logs_measuredInput = {
    where?: profilesWhereInput
    data: XOR<profilesUpdateWithoutWeight_logs_measuredInput, profilesUncheckedUpdateWithoutWeight_logs_measuredInput>
  }

  export type profilesUpdateWithoutWeight_logs_measuredInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUpdateManyWithoutUserNestedInput
    created_weight_goals?: weight_goalsUpdateManyWithoutCreatedByNestedInput
  }

  export type profilesUncheckedUpdateWithoutWeight_logs_measuredInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUncheckedUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUncheckedUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutUserNestedInput
    created_weight_goals?: weight_goalsUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type weight_goal_milestonesCreateWithoutGoalInput = {
    id?: string
    created_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
  }

  export type weight_goal_milestonesUncheckedCreateWithoutGoalInput = {
    id?: string
    created_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
  }

  export type weight_goal_milestonesCreateOrConnectWithoutGoalInput = {
    where: weight_goal_milestonesWhereUniqueInput
    create: XOR<weight_goal_milestonesCreateWithoutGoalInput, weight_goal_milestonesUncheckedCreateWithoutGoalInput>
  }

  export type weight_goal_milestonesCreateManyGoalInputEnvelope = {
    data: weight_goal_milestonesCreateManyGoalInput | weight_goal_milestonesCreateManyGoalInput[]
    skipDuplicates?: boolean
  }

  export type catsCreateWithoutWeight_goalsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    household: householdsCreateNestedOneWithoutCatsInput
    owner: profilesCreateNestedOneWithoutOwned_catsInput
    feeding_logs?: feeding_logsCreateNestedManyWithoutCatInput
    schedules?: schedulesCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsCreateNestedManyWithoutCatInput
  }

  export type catsUncheckedCreateWithoutWeight_goalsInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
    feeding_logs?: feeding_logsUncheckedCreateNestedManyWithoutCatInput
    schedules?: schedulesUncheckedCreateNestedManyWithoutCatInput
    weight_logs?: cat_weight_logsUncheckedCreateNestedManyWithoutCatInput
  }

  export type catsCreateOrConnectWithoutWeight_goalsInput = {
    where: catsWhereUniqueInput
    create: XOR<catsCreateWithoutWeight_goalsInput, catsUncheckedCreateWithoutWeight_goalsInput>
  }

  export type profilesCreateWithoutCreated_weight_goalsInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsCreateNestedManyWithoutFeederInput
    household_members?: household_membersCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsCreateNestedManyWithoutMeasuredByInput
  }

  export type profilesUncheckedCreateWithoutCreated_weight_goalsInput = {
    id: string
    updated_at?: Date | string | null
    username?: string | null
    full_name?: string | null
    avatar_url?: string | null
    email?: string | null
    timezone?: string | null
    owned_cats?: catsUncheckedCreateNestedManyWithoutOwnerInput
    feeding_logs_fed?: feeding_logsUncheckedCreateNestedManyWithoutFeederInput
    household_members?: household_membersUncheckedCreateNestedManyWithoutUserInput
    weight_logs_measured?: cat_weight_logsUncheckedCreateNestedManyWithoutMeasuredByInput
  }

  export type profilesCreateOrConnectWithoutCreated_weight_goalsInput = {
    where: profilesWhereUniqueInput
    create: XOR<profilesCreateWithoutCreated_weight_goalsInput, profilesUncheckedCreateWithoutCreated_weight_goalsInput>
  }

  export type weight_goal_milestonesUpsertWithWhereUniqueWithoutGoalInput = {
    where: weight_goal_milestonesWhereUniqueInput
    update: XOR<weight_goal_milestonesUpdateWithoutGoalInput, weight_goal_milestonesUncheckedUpdateWithoutGoalInput>
    create: XOR<weight_goal_milestonesCreateWithoutGoalInput, weight_goal_milestonesUncheckedCreateWithoutGoalInput>
  }

  export type weight_goal_milestonesUpdateWithWhereUniqueWithoutGoalInput = {
    where: weight_goal_milestonesWhereUniqueInput
    data: XOR<weight_goal_milestonesUpdateWithoutGoalInput, weight_goal_milestonesUncheckedUpdateWithoutGoalInput>
  }

  export type weight_goal_milestonesUpdateManyWithWhereWithoutGoalInput = {
    where: weight_goal_milestonesScalarWhereInput
    data: XOR<weight_goal_milestonesUpdateManyMutationInput, weight_goal_milestonesUncheckedUpdateManyWithoutGoalInput>
  }

  export type weight_goal_milestonesScalarWhereInput = {
    AND?: weight_goal_milestonesScalarWhereInput | weight_goal_milestonesScalarWhereInput[]
    OR?: weight_goal_milestonesScalarWhereInput[]
    NOT?: weight_goal_milestonesScalarWhereInput | weight_goal_milestonesScalarWhereInput[]
    id?: UuidFilter<"weight_goal_milestones"> | string
    created_at?: DateTimeFilter<"weight_goal_milestones"> | Date | string
    goal_id?: UuidFilter<"weight_goal_milestones"> | string
    weight?: DecimalFilter<"weight_goal_milestones"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"weight_goal_milestones"> | Date | string
    notes?: StringNullableFilter<"weight_goal_milestones"> | string | null
  }

  export type catsUpsertWithoutWeight_goalsInput = {
    update: XOR<catsUpdateWithoutWeight_goalsInput, catsUncheckedUpdateWithoutWeight_goalsInput>
    create: XOR<catsCreateWithoutWeight_goalsInput, catsUncheckedCreateWithoutWeight_goalsInput>
    where?: catsWhereInput
  }

  export type catsUpdateToOneWithWhereWithoutWeight_goalsInput = {
    where?: catsWhereInput
    data: XOR<catsUpdateWithoutWeight_goalsInput, catsUncheckedUpdateWithoutWeight_goalsInput>
  }

  export type catsUpdateWithoutWeight_goalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    household?: householdsUpdateOneRequiredWithoutCatsNestedInput
    owner?: profilesUpdateOneRequiredWithoutOwned_catsNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutCatNestedInput
    schedules?: schedulesUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateWithoutWeight_goalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutCatNestedInput
    schedules?: schedulesUncheckedUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type profilesUpsertWithoutCreated_weight_goalsInput = {
    update: XOR<profilesUpdateWithoutCreated_weight_goalsInput, profilesUncheckedUpdateWithoutCreated_weight_goalsInput>
    create: XOR<profilesCreateWithoutCreated_weight_goalsInput, profilesUncheckedCreateWithoutCreated_weight_goalsInput>
    where?: profilesWhereInput
  }

  export type profilesUpdateToOneWithWhereWithoutCreated_weight_goalsInput = {
    where?: profilesWhereInput
    data: XOR<profilesUpdateWithoutCreated_weight_goalsInput, profilesUncheckedUpdateWithoutCreated_weight_goalsInput>
  }

  export type profilesUpdateWithoutCreated_weight_goalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUpdateManyWithoutMeasuredByNestedInput
  }

  export type profilesUncheckedUpdateWithoutCreated_weight_goalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    owned_cats?: catsUncheckedUpdateManyWithoutOwnerNestedInput
    feeding_logs_fed?: feeding_logsUncheckedUpdateManyWithoutFeederNestedInput
    household_members?: household_membersUncheckedUpdateManyWithoutUserNestedInput
    weight_logs_measured?: cat_weight_logsUncheckedUpdateManyWithoutMeasuredByNestedInput
  }

  export type weight_goalsCreateWithoutMilestonesInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    cat: catsCreateNestedOneWithoutWeight_goalsInput
    createdBy: profilesCreateNestedOneWithoutCreated_weight_goalsInput
  }

  export type weight_goalsUncheckedCreateWithoutMilestonesInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    created_by: string
  }

  export type weight_goalsCreateOrConnectWithoutMilestonesInput = {
    where: weight_goalsWhereUniqueInput
    create: XOR<weight_goalsCreateWithoutMilestonesInput, weight_goalsUncheckedCreateWithoutMilestonesInput>
  }

  export type weight_goalsUpsertWithoutMilestonesInput = {
    update: XOR<weight_goalsUpdateWithoutMilestonesInput, weight_goalsUncheckedUpdateWithoutMilestonesInput>
    create: XOR<weight_goalsCreateWithoutMilestonesInput, weight_goalsUncheckedCreateWithoutMilestonesInput>
    where?: weight_goalsWhereInput
  }

  export type weight_goalsUpdateToOneWithWhereWithoutMilestonesInput = {
    where?: weight_goalsWhereInput
    data: XOR<weight_goalsUpdateWithoutMilestonesInput, weight_goalsUncheckedUpdateWithoutMilestonesInput>
  }

  export type weight_goalsUpdateWithoutMilestonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cat?: catsUpdateOneRequiredWithoutWeight_goalsNestedInput
    createdBy?: profilesUpdateOneRequiredWithoutCreated_weight_goalsNestedInput
  }

  export type weight_goalsUncheckedUpdateWithoutMilestonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type feeding_logsCreateManyCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    household_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_by?: string | null
    fed_at: Date | string
  }

  export type schedulesCreateManyCatInput = {
    id?: string
    type: string
    interval?: number | null
    times?: schedulesCreatetimesInput | string[]
    enabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cat_weight_logsCreateManyCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
    measured_by?: string | null
  }

  export type weight_goalsCreateManyCatInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
    created_by: string
  }

  export type feeding_logsUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    feeder?: profilesUpdateOneWithoutFeeding_logs_fedNestedInput
    household?: householdsUpdateOneRequiredWithoutFeeding_logsNestedInput
  }

  export type feeding_logsUncheckedUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    household_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_by?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feeding_logsUncheckedUpdateManyWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    household_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_by?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schedulesUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schedulesUncheckedUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type schedulesUncheckedUpdateManyWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    interval?: NullableIntFieldUpdateOperationsInput | number | null
    times?: schedulesUpdatetimesInput | string[]
    enabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cat_weight_logsUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    measuredBy?: profilesUpdateOneWithoutWeight_logs_measuredNestedInput
  }

  export type cat_weight_logsUncheckedUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    measured_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cat_weight_logsUncheckedUpdateManyWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    measured_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goalsUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: weight_goal_milestonesUpdateManyWithoutGoalNestedInput
    createdBy?: profilesUpdateOneRequiredWithoutCreated_weight_goalsNestedInput
  }

  export type weight_goalsUncheckedUpdateWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
    milestones?: weight_goal_milestonesUncheckedUpdateManyWithoutGoalNestedInput
  }

  export type weight_goalsUncheckedUpdateManyWithoutCatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type catsCreateManyHouseholdInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    owner_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
  }

  export type feeding_logsCreateManyHouseholdInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_by?: string | null
    fed_at: Date | string
  }

  export type household_membersCreateManyHouseholdInput = {
    id?: string
    user_id: string
    role: string
    created_at?: Date | string
  }

  export type catsUpdateWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    owner?: profilesUpdateOneRequiredWithoutOwned_catsNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutCatNestedInput
    schedules?: schedulesUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutCatNestedInput
    schedules?: schedulesUncheckedUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateManyWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    owner_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type feeding_logsUpdateWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat?: catsUpdateOneRequiredWithoutFeeding_logsNestedInput
    feeder?: profilesUpdateOneWithoutFeeding_logs_fedNestedInput
  }

  export type feeding_logsUncheckedUpdateWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_by?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feeding_logsUncheckedUpdateManyWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_by?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type household_membersUpdateWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: profilesUpdateOneRequiredWithoutHousehold_membersNestedInput
  }

  export type household_membersUncheckedUpdateWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type household_membersUncheckedUpdateManyWithoutHouseholdInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type catsCreateManyOwnerInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    name: string
    birth_date?: Date | string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    household_id: string
    portion_size?: Decimal | DecimalJsLike | number | string | null
    portion_unit?: string | null
    photo_url?: string | null
    restrictions?: string | null
    notes?: string | null
    feeding_interval?: number | null
  }

  export type feeding_logsCreateManyFeederInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    household_id: string
    meal_type: string
    amount: Decimal | DecimalJsLike | number | string
    unit: string
    notes?: string | null
    fed_at: Date | string
  }

  export type household_membersCreateManyUserInput = {
    id?: string
    household_id: string
    role: string
    created_at?: Date | string
  }

  export type cat_weight_logsCreateManyMeasuredByInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    cat_id: string
    notes?: string | null
  }

  export type weight_goalsCreateManyCreatedByInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    cat_id: string
    goal_name: string
    target_weight: Decimal | DecimalJsLike | number | string
    target_date?: Date | string | null
    start_weight?: Decimal | DecimalJsLike | number | string | null
    unit: string
    status?: string
    notes?: string | null
  }

  export type catsUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    household?: householdsUpdateOneRequiredWithoutCatsNestedInput
    feeding_logs?: feeding_logsUpdateManyWithoutCatNestedInput
    schedules?: schedulesUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
    feeding_logs?: feeding_logsUncheckedUpdateManyWithoutCatNestedInput
    schedules?: schedulesUncheckedUpdateManyWithoutCatNestedInput
    weight_logs?: cat_weight_logsUncheckedUpdateManyWithoutCatNestedInput
    weight_goals?: weight_goalsUncheckedUpdateManyWithoutCatNestedInput
  }

  export type catsUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    household_id?: StringFieldUpdateOperationsInput | string
    portion_size?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    portion_unit?: NullableStringFieldUpdateOperationsInput | string | null
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    feeding_interval?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type feeding_logsUpdateWithoutFeederInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat?: catsUpdateOneRequiredWithoutFeeding_logsNestedInput
    household?: householdsUpdateOneRequiredWithoutFeeding_logsNestedInput
  }

  export type feeding_logsUncheckedUpdateWithoutFeederInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feeding_logsUncheckedUpdateManyWithoutFeederInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    meal_type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type household_membersUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    household?: householdsUpdateOneRequiredWithoutHousehold_membersNestedInput
  }

  export type household_membersUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type household_membersUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    household_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cat_weight_logsUpdateWithoutMeasuredByInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cat?: catsUpdateOneRequiredWithoutWeight_logsNestedInput
  }

  export type cat_weight_logsUncheckedUpdateWithoutMeasuredByInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cat_weight_logsUncheckedUpdateManyWithoutMeasuredByInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goalsUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: weight_goal_milestonesUpdateManyWithoutGoalNestedInput
    cat?: catsUpdateOneRequiredWithoutWeight_goalsNestedInput
  }

  export type weight_goalsUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: weight_goal_milestonesUncheckedUpdateManyWithoutGoalNestedInput
  }

  export type weight_goalsUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cat_id?: StringFieldUpdateOperationsInput | string
    goal_name?: StringFieldUpdateOperationsInput | string
    target_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    target_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unit?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goal_milestonesCreateManyGoalInput = {
    id?: string
    created_at?: Date | string
    weight: Decimal | DecimalJsLike | number | string
    date: Date | string
    notes?: string | null
  }

  export type weight_goal_milestonesUpdateWithoutGoalInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goal_milestonesUncheckedUpdateWithoutGoalInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weight_goal_milestonesUncheckedUpdateManyWithoutGoalInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}